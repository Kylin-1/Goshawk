<cls> <noptr> swap init sysfs ( )
<cls> <noptr> ir update mapping ( <ptr> dev <dot> <ptr> r cmap <dot> <noptr> index <dot> <noptr> new key code )
<cls> <noptr> mpt reset deregister ( <noptr> cb idx )
<cls> <noptr> bt usb intel cmd timeout ( <ptr> h dev )
<cls> <noptr> do compat sys migrate pages ( <noptr> pid <dot> <noptr> max node <dot> <ptr> old nodes <dot> <ptr> new nodes )
<cls> <noptr> stk camera driver init ( )
<cls> <noptr> pvr try ext ctrls ( <ptr> file <dot> <ptr> priv <dot> <ptr> ctls )
<cls> <noptr> link freq to pixel rate ( <noptr> f )
<cls> <noptr> hi xp mic probe ( <ptr> pdev )
<cls> <noptr> z r x xvid ioc stream on ( <ptr> file <dot> <ptr> priv <dot> <noptr> type )
<cls> <noptr> bt probe ( <ptr> client <dot> <ptr> id )
<cls> <noptr> f wht ( <ptr> block <dot> <ptr> output block <dot> <noptr> stride <dot> <noptr> intra )
<cls> <noptr> deactivate slab ( <ptr> s <dot> <ptr> page <dot> <ptr> free list <dot> <ptr> c )
<cls> <noptr> video buf queue ( <ptr> vb )
<cls> <noptr> v l device unregister ( <ptr> v l dev )
<cls> <ptr> l gs gl attach ( <ptr> config <dot> <ptr> ic )
<cls> <noptr> intel msi c init devices ( <ptr> msi c )
<cls> <noptr> sp jpeg controls create ( <ptr> ctx )
<cls> <noptr> shark write val ( <ptr> tea <dot> <noptr> val )
<cls> <noptr> rtl read snr ( <ptr> fe <dot> <ptr> snr )
<cls> <noptr> nxt read signal strength ( <ptr> fe <dot> <ptr> signal strength )
<cls> <noptr> ener x setup ( <ptr> dev )
<cls> <noptr> ms pro block init disk ( <ptr> card )
<cls> <noptr> c pia set flicker mode ( <ptr> cam <dot> <noptr> mode )
<cls> <noptr> copy d dcb results ( <ptr> req <dot> <noptr> ddc bno )
<cls> <noptr> arch reserved kernel pages ( )
<cls> <ptr> decode fourcc ( <noptr> pixel format <dot> <ptr> buf )
<cls> <noptr> set tlb ub c flush pending ( <ptr> m m <dot> <noptr> writable )
<cls> <noptr> poison element ( <ptr> pool <dot> <ptr> element )
<cls> <noptr> pg dat watermark boosted ( <ptr> pg dat <dot> <noptr> class zoneid x )
<cls> <noptr> pvr hd wcm don air fe power ctrl ( <ptr> h dw <dot> <noptr> onoff )
<cls> <noptr> simple radio b and switch ( <ptr> fe <dot> <ptr> buffer )
<cls> <noptr> stv cab sets rate ( <ptr> state <dot> <noptr> adc hz <dot> <noptr> mcl khz <dot> <noptr> symbol rate <dot> <noptr> q am size )
<cls> <noptr> dvb demux feed find ( <ptr> feed )
<cls> <noptr> mtp get selection ( <ptr> sub dev <dot> <ptr> cfg <dot> <ptr> sel )
<cls> <noptr> noon detect ( <ptr> client <dot> <ptr> info )
<cls> <noptr> skb af get cfg error ( <ptr> state )
<cls> <noptr> em xx deinit i soc audio ( <ptr> dev )
<cls> <noptr> dib probe ( <ptr> int f <dot> <ptr> id )
<cls> <noptr> sa atv audio r x mode ( <noptr> r x )
<cls> <noptr> mem policy node mask intersects ( <ptr> tsk <dot> <ptr> mask )
<cls> <noptr> iv tv update pgm info ( <ptr> it v )
<cls> <noptr> vpx s routing ( <ptr> sd <dot> <noptr> input <dot> <noptr> output <dot> <noptr> config )
<cls> <noptr> cro sec dev exit ( )
<cls> <noptr> dump m m ( <ptr> m m )
<cls> <noptr> intel suspend device ( <ptr> dev )
<cls> <noptr> ddb class destroy ( )
<cls> <noptr> ctor b ( <ptr> region )
<cls> <noptr> vsp wpf write ( <ptr> wpf <dot> <ptr> dl b <dot> <noptr> reg <dot> <noptr> data )
<cls> <noptr> fin tek process r xir data ( <ptr> fin tek )
<cls> <noptr> sp delete ( <ptr> sp <dot> <ptr> n )
<cls> <noptr> stb write regs ( <ptr> state <dot> <noptr> reg <dot> <ptr> data <dot> <noptr> count )
<cls> <noptr> calculate pressure threshold ( <ptr> zone )
<cls> <noptr> ir raw event set idle ( <ptr> dev <dot> <noptr> idle )
<cls> <noptr> cec adap s log addrs ( <ptr> adap <dot> <ptr> f h <dot> <noptr> block <dot> <ptr> p arg )
<cls> <noptr> dt query cap ( <ptr> filp <dot> <ptr> p <dot> <ptr> cap )
<cls> <noptr> m pol relative node mask ( <ptr> ret <dot> <ptr> orig <dot> <ptr> rel )
<cls> <noptr> v l valid d v timings ( <ptr> t <dot> <ptr> d vcap <dot> <noptr> fnc <dot> <ptr> fnc handle )
<cls> <noptr> csi phy link setup ( <ptr> entity <dot> <ptr> local <dot> <ptr> remote <dot> <noptr> flags )
<cls> <noptr> m m drop ( <ptr> m m )
<cls> <noptr> med usa initialize pal ( <ptr> dev )
<cls> <ptr> scc am if find format ( <ptr> vp <dot> <ptr> pixel format <dot> <noptr> index )
<cls> <noptr> tegra act m onstop devices ( <ptr> tegra )
<cls> <noptr> coda enum frame sizes ( <ptr> file <dot> <ptr> f h <dot> <ptr> f size )
<cls> <noptr> sm base init ( )
<cls> <noptr> stop video dma ( <ptr> dev )
<cls> <noptr> it d set l pfb w ( <ptr> state <dot> <noptr> symbol rate )
<cls> <noptr> ir do key down ( <ptr> dev <dot> <noptr> protocol <dot> <noptr> scan code <dot> <noptr> key code <dot> <noptr> toggle )
<cls> <noptr> cec pin error inj show ( <ptr> adap <dot> <ptr> sf )
<cls> <noptr> dr x dap fas i write block ( <ptr> dev addr <dot> <noptr> addr <dot> <noptr> data size <dot> <ptr> data <dot> <noptr> flags )
<cls> <noptr> nxt x read uc blocks ( <ptr> fe <dot> <ptr> uc blocks )
<cls> <noptr> isc g input ( <ptr> file <dot> <ptr> priv <dot> <ptr> i )
<cls> <noptr> mey epoll ( <ptr> file <dot> <ptr> wait )
<cls> <noptr> free notes attrs ( <ptr> notes attrs <dot> <noptr> i )
<cls> <noptr> anon vma prepare ( <ptr> vma )
<cls> <noptr> saa x c callback ( <ptr> dev <dot> <noptr> command <dot> <noptr> arg )
<cls> <noptr> pvr ctrl get v lflags ( <ptr> cptr )
<cls> <noptr> pvr hd wun trip ( <ptr> h dw )
<cls> <noptr> kas an pd table ( <noptr> pgd )
<cls> <noptr> transfer update ( <ptr> work )
<cls> <noptr> vpx fe sleep ( <ptr> fe )
<cls> <noptr> l irc bpf free ( <ptr> rc dev )
<cls> <noptr> ske cg x log status ( <ptr> sd )
<cls> <noptr> add m m counter fast ( <ptr> m m <dot> <noptr> member <dot> <noptr> val )
<cls> <noptr> msm isp if sub dev init ( <ptr> isp if <dot> <ptr> res )
<cls> <noptr> exy nos bus get dev status ( <ptr> dev <dot> <ptr> stat )
<cls> <noptr> mantis dma exit ( <ptr> mantis )
<cls> <noptr> pcf irq init ( <ptr> pcf <dot> <noptr> irq )
<cls> <noptr> intell pss debug fs remove ( <ptr> l pss )
<cls> <noptr> video buf stop ( <ptr> q )
<cls> <noptr> cch interrupt sync ( <ptr> cch )
<cls> <noptr> si write reg list ( <ptr> state <dot> <ptr> regs <dot> <noptr> count )
<cls> <noptr> free dev map managed page ( <ptr> page )
<cls> <noptr> sm base exit ( )
<cls> <noptr> spc sis parsed t ( <ptr> pdev <dot> <ptr> state )
<cls> <noptr> shmem x attr handler get ( <ptr> handler <dot> <ptr> unused <dot> <ptr> inode <dot> <ptr> name <dot> <ptr> buffer <dot> <noptr> size )
<cls> <noptr> pvr h dw decoder stabili zation timeout ( <ptr> t )
<cls> <noptr> si write reg mask ( <ptr> state <dot> <noptr> reg <dot> <noptr> val <dot> <noptr> mask )
<cls> <noptr> set gain ( <ptr> gsp ca dev <dot> <noptr> val )
<cls> <noptr> is ifconfig raw ( )
<cls> <noptr> exy nos jpeg clear int status ( <ptr> regs <dot> <noptr> value )
<cls> <noptr> dvb ca en init ( <ptr> dvb adapter <dot> <ptr> pub ca <dot> <noptr> flags <dot> <noptr> slot count )
<cls> <noptr> stax vip init register ( <ptr> vip )
<cls> <noptr> m pol store user node mask ( <ptr> pol )
<cls> <noptr> c pia usb init ( )
<cls> <noptr> mpt remove dead ioc func ( <ptr> arg )
<cls> <noptr> ddb ioctl ( <ptr> file <dot> <noptr> cmd <dot> <noptr> arg )
<cls> <noptr> mtk jpegs selection ( <ptr> file <dot> <ptr> priv <dot> <ptr> s )
<cls> <noptr> set sharp ness ( <ptr> gsp ca dev <dot> <noptr> val )
<cls> <noptr> upd driver init ( )
<cls> <noptr> saa histogram update ( <ptr> hg <dot> <noptr> val )
<cls> <noptr> saa cmd timeout seqno ( <ptr> dev <dot> <noptr> seqno )
<cls> <noptr> c iner gy t driver init ( )
<cls> <noptr> cade t get freq ( <ptr> dev )
<cls> <noptr> sh vou g fmt vid out ( <ptr> file <dot> <ptr> priv <dot> <ptr> fmt )
<cls> <noptr> get component locate ( <ptr> c dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> gpp sk fe send legacy dish cmd ( <ptr> fe <dot> <noptr> sw cmd )
<cls> <noptr> v fe try compose ( <ptr> line <dot> <ptr> cfg <dot> <ptr> rect <dot> <noptr> which )
<cls> <noptr> free one page ( <ptr> zone <dot> <ptr> page <dot> <noptr> pfn <dot> <noptr> order <dot> <noptr> migrate type )
<cls> <ptr> mmu notifier get locked ( <ptr> ops <dot> <ptr> m m )
<cls> <noptr> cobalt tx bytes ( <ptr> regs <dot> <ptr> adap <dot> <noptr> start <dot> <noptr> stop <dot> <ptr> data <dot> <noptr> len )
<cls> <noptr> sp mfc decode one frame v ( <ptr> ctx <dot> <noptr> last frame )
<cls> <noptr> mantis dvb init ( <ptr> mantis )
<cls> <noptr> b pax send frame ( <ptr> h dev <dot> <ptr> skb )
<cls> <noptr> six fops release ( <ptr> file )
<cls> <noptr> h fi session load res ( <ptr> inst )
<cls> <noptr> saa port init ( <ptr> dev <dot> <noptr> port nr )
<cls> <noptr> mic start ( <ptr> c dev <dot> <noptr> id )
<cls> <noptr> dr x k gate ctrl ( <ptr> fe <dot> <noptr> enable )
<cls> <noptr> smss dio probe ( <ptr> func <dot> <ptr> id )
<cls> <noptr> ddb release ( <ptr> inode <dot> <ptr> file )
<cls> <noptr> l gs gl read signal strength ( <ptr> fe <dot> <ptr> signal strength )
<cls> <noptr> truncate inode pages final ( <ptr> mapping )
<cls> <noptr> ala ( <ptr> pdev <dot> <noptr> index <dot> <noptr> size )
<cls> <noptr> adv init controls ( <ptr> state )
<cls> <noptr> sa ahs probe ( <ptr> client <dot> <ptr> id )
<cls> <noptr> sh ve u scale h ( <ptr> ve u <dot> <noptr> size in <dot> <noptr> size out <dot> <noptr> crop out )
<cls> <noptr> m xls f tuner release ( <ptr> fe )
<cls> <noptr> fe set config ( <ptr> fe <dot> <ptr> priv cfg )
<cls> <noptr> ite set r x carrier range ( <ptr> rc dev <dot> <noptr> carrier low <dot> <noptr> carrier high )
<cls> <noptr> mt kir remove ( <ptr> pdev )
<cls> <noptr> q link free ( <ptr> q link <dot> <ptr> cache )
<cls> <noptr> page remover map ( <ptr> page <dot> <noptr> compound )
<cls> <noptr> six usb driver resume ( <ptr> int f )
<cls> <noptr> free mod info version ( <ptr> mod )
<cls> <noptr> me it xep m runtime suspend ( <ptr> device )
<cls> <noptr> scm isp comm result ( <ptr> state <dot> <noptr> command <dot> <ptr> data )
<cls> <noptr> me so nir driver init ( )
<cls> <noptr> stmp e chip init ( <ptr> stmp e )
<cls> <noptr> ska set exposure ( <ptr> gsp ca dev <dot> <noptr> val )
<cls> <noptr> mpt sass can sas topology ( <ptr> ioc )
<cls> <noptr> t dax o set analog params ( <ptr> fe <dot> <ptr> params )
<cls> <noptr> sr u configure stream ( <ptr> entity <dot> <ptr> pipe <dot> <ptr> dl <dot> <ptr> dl b )
<cls> <noptr> affe program c foe ( <ptr> d <dot> <noptr> bw )
<cls> <noptr> uvc ioctl enum input ( <ptr> file <dot> <ptr> f h <dot> <ptr> input )
<cls> <noptr> x sys m unlock all ( <ptr> unused )
<cls> <noptr> vb request object is buffer ( <ptr> obj )
<cls> <noptr> adv xx un registered ( <ptr> sd )
<cls> <noptr> printerr status ( <ptr> dev <dot> <noptr> packet <dot> <noptr> status )
<cls> <noptr> hl device utilization ( <ptr> h dev <dot> <noptr> period ms )
<cls> <noptr> dib p sad calib ( <ptr> state )
<cls> <noptr> e tek power off ( <ptr> sensor )
<cls> <noptr> tvp xs routing ( <ptr> sd <dot> <noptr> input <dot> <noptr> output <dot> <noptr> config )
<cls> <noptr> mic ack interrupt ( <ptr> sc dev <dot> <noptr> num )
<cls> <noptr> vid io cs fmt vid cap m plane ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> lg dta get front end ( <ptr> fe <dot> <ptr> p )
<cls> <noptr> c port read flash data ( <ptr> dev <dot> <ptr> buffer <dot> <noptr> offset <dot> <noptr> count )
<cls> <noptr> fim ch w set rotation ( <ptr> ctx )
<cls> <noptr> bt intel enter mfg ( <ptr> h dev )
<cls> <noptr> sh read signal strength ( <ptr> fe <dot> <ptr> signal strength )
<cls> <noptr> offline isolated pages ( <noptr> start pfn <dot> <noptr> end pfn )
<cls> <noptr> f sli fcn and irq ( <noptr> irq no <dot> <ptr> data )
<cls> <noptr> ov sensor set register ( <ptr> sd <dot> <ptr> reg )
<cls> <noptr> shmem init x attrs ( <ptr> inode <dot> <ptr> x attr array <dot> <ptr> fs info )
<cls> <noptr> rts x pci driver init ( )
<cls> <noptr> td a set front end ( <ptr> fe )
<cls> <noptr> tvp sel mux ( <ptr> sd )
<cls> <noptr> d v bring buffer pkt dispose ( <ptr> r buf <dot> <noptr> idx )
<cls> <noptr> hl pci set dram bar base ( <ptr> h dev <dot> <noptr> inbound region <dot> <noptr> bar <dot> <noptr> addr )
<cls> <noptr> wm x irq thread ( <noptr> irq <dot> <ptr> data )
<cls> <ptr> get z fold header ( <noptr> h )
<cls> <noptr> b tmr v l debug fs remove ( <ptr> h dev )
<cls> <noptr> pwc set awb ( <ptr> pdev )
<cls> <noptr> dvb vb init ( <ptr> ctx <dot> <ptr> name <dot> <noptr> non blocking )
<cls> <noptr> btm tks dio close ( <ptr> h dev )
<cls> <noptr> unlink file vma ( <ptr> vma )
<cls> <ptr> m pts as find phy info by sas address ( <ptr> ioc <dot> <noptr> sas address )
<cls> <noptr> v unmap ( <ptr> addr <dot> <noptr> deallocate pages )
<cls> <noptr> j mb xms abort ( <ptr> t )
<cls> <noptr> nokia setup fw ( <ptr> hu )
<cls> <noptr> saa enable analog tuner ( <ptr> dev )
<cls> <noptr> cluster list del first ( <ptr> list <dot> <ptr> c i )
<cls> <ptr> check v l debug ( )
<cls> <noptr> b tmr v lt x pkt ( <ptr> priv <dot> <ptr> skb )
<cls> <noptr> vmc i ctx enqueue data gram ( <noptr> cid <dot> <ptr> d g )
<cls> <noptr> m xlt tuner r f tune ( <ptr> state <dot> <noptr> r f freq hz <dot> <noptr> bw )
<cls> <noptr> walk pd range ( <ptr> pgd <dot> <noptr> addr <dot> <noptr> end <dot> <ptr> walk )
<cls> <noptr> c x dt nr dmd set r f lvl cmp stn sub ( <ptr> tn r dmd <dot> <ptr> ptr <dot> <ptr> ptr )
<cls> <noptr> check element ( <ptr> pool <dot> <ptr> element <dot> <noptr> size )
<cls> <noptr> v map page range ( <noptr> start <dot> <noptr> end <dot> <noptr> prot <dot> <dptr> pages )
<cls> <noptr> c x dt nr dmd gpio write sub ( <ptr> tn r dmd <dot> <noptr> id <dot> <noptr> value )
<cls> <noptr> stb dvb sbt r init ( <ptr> state )
<cls> <noptr> dec zone page state ( <ptr> page <dot> <noptr> item )
<cls> <noptr> cobalt pci driver init ( )
<cls> <noptr> c xxx reg mask write ( <ptr> dev <dot> <noptr> dev addr <dot> <noptr> size <dot> <noptr> register address <dot> <noptr> bit start <dot> <noptr> bit end <dot> <noptr> value )
<cls> <noptr> slab free free list hook ( <ptr> s <dot> <dptr> head <dot> <dptr> tail )
<cls> <noptr> pulse irq work handler ( <ptr> work )
<cls> <ptr> check alsa ( )
<cls> <noptr> sp mfc clear int flags v ( <ptr> dev )
<cls> <noptr> pt sleep ( <ptr> fe )
<cls> <noptr> adp init device ( <ptr> flash )
<cls> <noptr> wbc irt x carrier ( <ptr> dev <dot> <noptr> carrier )
<cls> <noptr> v dec cancel dst buffers ( <ptr> inst )
<cls> <noptr> sp mfc wakeup cmd v ( <ptr> dev )
<cls> <ptr> follow pud mask ( <ptr> vma <dot> <noptr> address <dot> <ptr> pdp <dot> <noptr> flags <dot> <ptr> ctx )
<cls> <noptr> fmi init ( )
<cls> <noptr> l m read ( <ptr> l m <dot> <noptr> reg <dot> <ptr> val )
<cls> <ptr> sun i video remote sub dev ( <ptr> video <dot> <ptr> pad )
<cls> <noptr> tegra act mon delayed update ( <ptr> work )
<cls> <noptr> e dvb set params ( <ptr> fe )
<cls> <noptr> count partial ( <ptr> n <dot> <ptr> get count )
<cls> <noptr> c pia usb disconnect ( <ptr> int f )
<cls> <noptr> sii c read ( <ptr> radio <dot> <ptr> data <dot> <noptr> len )
<cls> <noptr> sms dvb debug fs create ( <ptr> client )
<cls> <noptr> cow user page ( <ptr> dst <dot> <ptr> src <dot> <ptr> vm f )
<cls> <noptr> cal crf filter curve ( <ptr> state )
<cls> <noptr> bt tv gpio tracking ( <ptr> b tv <dot> <ptr> comment )
<cls> <noptr> clamp align ( <noptr> x <dot> <noptr> min <dot> <noptr> max <dot> <noptr> align )
<cls> <noptr> vim c deb enum frame size ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> fse )
<cls> <noptr> l gs gxx read reg ( <ptr> priv <dot> <noptr> reg <dot> <ptr> p data )
<cls> <noptr> td a channel configur ation ( <ptr> fe <dot> <ptr> map <dot> <noptr> freq <dot> <noptr> bw )
<cls> <noptr> cobalt func ( <ptr> adap )
<cls> <noptr> hel ene release ( <ptr> fe )
<cls> <noptr> c x vb i setup ( <ptr> s )
<cls> <noptr> philip std tuner init ( <ptr> fe )
<cls> <noptr> tegra dev freq driver exit ( )
<cls> <noptr> mtv sw reset ( <ptr> mtv )
<cls> <noptr> add pid filter ( <ptr> fdt v <dot> <ptr> operand )
<cls> <noptr> wm irq disable ( <ptr> data )
<cls> <noptr> ec read uc blocks ( <ptr> fe <dot> <ptr> uc blocks )
<cls> <noptr> datatype from code ( <noptr> code )
<cls> <noptr> validates lab ( <ptr> s <dot> <ptr> page <dot> <ptr> map )
<cls> <noptr> tif m xx probe ( <ptr> dev <dot> <ptr> devid )
<cls> <noptr> d pot read ( <ptr> d pot <dot> <noptr> reg )
<cls> <noptr> dib p getdc power ( <ptr> fe <dot> <noptr> i q )
<cls> <noptr> zs malloc unmount ( )
<cls> <noptr> gsp ca suspend ( <ptr> int f <dot> <noptr> message )
<cls> <noptr> q p release queue mutex ( <ptr> queue )
<cls> <noptr> bl regr ( <noptr> offset )
<cls> <noptr> pur s ( <ptr> pas info )
<cls> <noptr> me icl set connecting ( <ptr> cl <dot> <ptr> m ecl )
<cls> <noptr> af select ( <ptr> mux c <dot> <noptr> chan )
<cls> <ptr> check gain ( )
<cls> <noptr> zone watermark ok safe ( <ptr> z <dot> <noptr> order <dot> <noptr> mark <dot> <noptr> class zoneid x )
<cls> <noptr> mei release ( <ptr> inode <dot> <ptr> file )
<cls> <noptr> c x get input ( <ptr> file <dot> <ptr> priv <dot> <ptr> i )
<cls> <noptr> sa ago init ( <ptr> dev )
<cls> <noptr> me icl bus exit ( )
<cls> <ptr> check nr tables ( )
<cls> <noptr> ddb input init ( <ptr> port <dot> <noptr> nr <dot> <noptr> pnr <dot> <noptr> anr )
<cls> <noptr> max seth sls ( <ptr> ctx <dot> <noptr> lo pos )
<cls> <noptr> rtl init ( <ptr> fe )
<cls> <ptr> mic request irq ( <ptr> v pdev <dot> <ptr> ptr <dot> <ptr> ptr <dot> <ptr> name <dot> <ptr> data <dot> <noptr> int rsrc )
<cls> <noptr> spi block write ( <ptr> stmp e <dot> <noptr> reg <dot> <noptr> length <dot> <ptr> values )
<cls> <noptr> mpt scsi h get free chain buffer ( <ptr> ioc <dot> <ptr> ret index )
<cls> <noptr> imx get pad format ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> fmt )
<cls> <noptr> hl get pwm info ( <ptr> h dev <dot> <noptr> sensor index <dot> <noptr> attr )
<cls> <noptr> top addr ( <ptr> ctx <dot> <ptr> v addr )
<cls> <noptr> sci f rb space ( <ptr> rb )
<cls> <noptr> tw x set input ( <ptr> vc <dot> <noptr> i )
<cls> <noptr> swp info get ( <ptr> state <dot> <noptr> s mrt <dot> <noptr> r <dot> <noptr> swp freq <dot> <ptr> afc ex freq <dot> <ptr> fos c <dot> <ptr> afc exl <dot> <ptr> afc exh )
<cls> <noptr> migrate vma insert page ( <ptr> migrate <dot> <noptr> addr <dot> <ptr> page <dot> <ptr> src <dot> <ptr> dst )
<cls> <noptr> descriptor list interrupt disable ( <ptr> desc )
<cls> <noptr> t mir init ( <ptr> dev )
<cls> <noptr> isc query cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> cap )
<cls> <noptr> sp mfc get ds ply a drv ( <ptr> dev )
<cls> <noptr> m cam vid ioc enum fmt vid cap ( <ptr> filp <dot> <ptr> priv <dot> <ptr> fmt )
<cls> <noptr> fim c lite runtime suspend ( <ptr> dev )
<cls> <noptr> l m readable register ( <ptr> dev <dot> <noptr> reg )
<cls> <noptr> get kernel page ( <noptr> start <dot> <noptr> write <dot> <dptr> pages )
<cls> <noptr> sci f recv munmap ( <ptr> sci f dev <dot> <ptr> msg )
<cls> <noptr> rds raw write ( <ptr> aci <dot> <noptr> byte )
<cls> <noptr> sci f get node info ( )
<cls> <noptr> dev freq passive notifier call ( <ptr> nb <dot> <noptr> event <dot> <ptr> ptr )
<cls> <noptr> tw l powerup manual ( <ptr> tw l )
<cls> <noptr> z bud unmap ( <ptr> pool <dot> <noptr> handle )
<cls> <ptr> em xx find led ( <ptr> dev <dot> <noptr> role )
<cls> <noptr> mtk jpeg driver init ( )
<cls> <noptr> dvb dvr open ( <ptr> inode <dot> <ptr> file )
<cls> <noptr> r nt power off ( )
<cls> <noptr> r wait status ( <ptr> dev <dot> <noptr> mask <dot> <noptr> wanted mask )
<cls> <ptr> check x pch b check interval ( )
<cls> <noptr> dib set r f output ( <ptr> fe <dot> <noptr> no )
<cls> <noptr> vps s resume ( <ptr> dev )
<cls> <noptr> fc wr reg ff ( <ptr> dev <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> adv register clients ( <ptr> sd )
<cls> <noptr> vfs f advise ( <ptr> file <dot> <noptr> offset <dot> <noptr> len <dot> <noptr> advice )
<cls> <noptr> x box remote rc close ( <ptr> r dev )
<cls> <noptr> stv write bits ( <ptr> int p <dot> <noptr> label <dot> <noptr> val )
<cls> <noptr> h slip one byte ( <ptr> skb <dot> <noptr> c )
<cls> <noptr> sms gpio assign xx default led config ( <ptr> p gpio config )
<cls> <noptr> tc set hdmi audio ( <ptr> sd )
<cls> <noptr> c sir x get resources ( <ptr> c sir x <dot> <ptr> pdev )
<cls> <noptr> h va enum fmt stream ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> vsp drm init ( <ptr> vsp )
<cls> <noptr> nv t cir wake regs init ( <ptr> nv t )
<cls> <noptr> tc hdmi clk int handler ( <ptr> sd <dot> <ptr> handled )
<cls> <ptr> check vivid debug ( )
<cls> <noptr> cec pin timer ( <ptr> timer )
<cls> <noptr> dmx dev lock ( <ptr> v q )
<cls> <noptr> vsp pipeline propagate alpha ( <ptr> pipe <dot> <ptr> dl b <dot> <noptr> alpha )
<cls> <noptr> reg set ( <ptr> client <dot> <noptr> reg <dot> <noptr> data <dot> <noptr> mask )
<cls> <ptr> vma res v map ( <ptr> vma )
<cls> <noptr> venc if deinit ( <ptr> ctx )
<cls> <noptr> c x alsa dma unmap ( <ptr> dev )
<cls> <noptr> tegra dev freq driver init ( )
<cls> <noptr> pvr xxx td a attach ( <ptr> adap )
<cls> <noptr> loop t xir ( <ptr> dev <dot> <ptr> tx buf <dot> <noptr> count )
<cls> <noptr> qca get baud rate value ( <noptr> speed )
<cls> <noptr> is dump un re claims labs ( )
<cls> <noptr> kodi com r init ( <ptr> b tv )
<cls> <noptr> at b m get fe ( <ptr> fe <dot> <ptr> c )
<cls> <noptr> sp cec threshold ( <ptr> cec )
<cls> <noptr> c x queue setup ( <ptr> q <dot> <ptr> num buffers <dot> <ptr> num planes <dot> <noptr> sizes <dot> <ptr> alloc devs )
<cls> <noptr> vp dma load firmware ( <ptr> vp dma )
<cls> <noptr> apply m lock all flags ( <noptr> flags )
<cls> <noptr> unusable show print ( <ptr> m <dot> <ptr> pg dat <dot> <ptr> zone )
<cls> <noptr> k gdb ts get char ( )
<cls> <noptr> reg map field free ( <ptr> field )
<cls> <noptr> gru user flush tlb ( <noptr> arg )
<cls> <noptr> avp t write ( <ptr> buf <dot> <noptr> length <dot> <noptr> pid <dot> <ptr> p )
<cls> <noptr> mt write reg ( <ptr> state <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> vma unlink list ( <ptr> m m <dot> <ptr> vma )
<cls> <ptr> check ic clock period ( )
<cls> <noptr> ce u init async sub devs ( <ptr> ce udev <dot> <noptr> nsd )
<cls> <noptr> q p acquire queue mutex ( <ptr> queue )
<cls> <noptr> v pfe isr ( <noptr> irq <dot> <ptr> dev )
<cls> <ptr> page mapping ( <ptr> page )
<cls> <noptr> power down dvb t ( <ptr> state <dot> <noptr> set power mode )
<cls> <noptr> dst get signal ( <ptr> state )
<cls> <noptr> me icl link ( <ptr> cl )
<cls> <noptr> stv get standard ( <ptr> fe <dot> <noptr> demo d )
<cls> <noptr> m xls f demo d read reg ( <ptr> state <dot> <noptr> addr <dot> <ptr> data )
<cls> <noptr> page cache init ( )
<cls> <noptr> mpt scsi h slave destroy ( <ptr> s dev )
<cls> <noptr> cit set sharp ness ( <ptr> gsp ca dev <dot> <noptr> val )
<cls> <noptr> v l spi sub dev unregister ( <ptr> sd )
<cls> <noptr> airs pys ctrl ( <ptr> ctrl )
<cls> <noptr> ttc i set video port ( <ptr> ca <dot> <noptr> slot <dot> <noptr> enable )
<cls> <noptr> xpc make first contact uv ( <ptr> part )
<cls> <noptr> tun ers std ( <ptr> sd <dot> <noptr> std )
<cls> <noptr> msi transfer one message ( <ptr> master <dot> <ptr> m )
<cls> <noptr> gen wq e start traps ( <ptr> cd )
<cls> <noptr> v dec runtime resume ( <ptr> dev )
<cls> <noptr> show hue ( <ptr> cd <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> page set set batch ( <ptr> p <dot> <noptr> batch )
<cls> <noptr> ha upp auge eeprom ( <ptr> b tv )
<cls> <noptr> c xsi opin config ( <ptr> sd <dot> <noptr> n <dot> <ptr> p )
<cls> <noptr> au get state ( <dptr> state <dot> <ptr> ic <dot> <noptr> client address )
<cls> <noptr> ir sharp encode ( <noptr> protocol <dot> <noptr> scan code <dot> <ptr> events <dot> <noptr> max )
<cls> <noptr> hdp vr device release ( <ptr> v dev )
<cls> <noptr> l k dtm corrupt list del ( )
<cls> <noptr> adv cec isr ( <ptr> sd <dot> <ptr> handled )
<cls> <noptr> l gdt ade select ( <ptr> mux c <dot> <noptr> chan )
<cls> <noptr> cade t set tune ( <ptr> dev <dot> <noptr> fifo )
<cls> <noptr> dt vic xfer ( <ptr> adap <dot> <noptr> msg <dot> <noptr> num )
<cls> <noptr> ms power off ( <ptr> host )
<cls> <noptr> unprotect pm master ( )
<cls> <ptr> check verbose ( )
<cls> <noptr> c x print irq bits ( <ptr> tag <dot> <ptr> strings <dot> <noptr> len <dot> <noptr> bits <dot> <noptr> mask )
<cls> <noptr> vid io cs fmt overlay ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> nv t enable cir ( <ptr> nv t )
<cls> <noptr> unmap huge page range ( <ptr> tlb <dot> <ptr> vma <dot> <noptr> start <dot> <noptr> end <dot> <ptr> ref page )
<cls> <noptr> scv p active ( <ptr> vp )
<cls> <noptr> start dma ( <ptr> vip <dot> <ptr> vip buf )
<cls> <noptr> tate ( <ptr> ioc <dot> <noptr> cooked )
<cls> <noptr> isc stop streaming ( <ptr> v q )
<cls> <noptr> tx custom bit ( <ptr> pin )
<cls> <noptr> c sid isr ( <noptr> irq <dot> <ptr> dev )
<cls> <noptr> mce usb dev print data ( <ptr> ir <dot> <ptr> buf <dot> <noptr> buf len <dot> <noptr> offset <dot> <noptr> len <dot> <noptr> out )
<cls> <noptr> add to un bud died ( <ptr> pool <dot> <ptr> z hdr )
<cls> <noptr> dib pse tag c config ( <ptr> state <dot> <noptr> b and )
<cls> <noptr> dvb t ctrl sets q i speed ( <ptr> state <dot> <ptr> speed )
<cls> <noptr> irq to mask ( <noptr> id )
<cls> <noptr> ov restore mode ( <ptr> sensor )
<cls> <noptr> wb cir select bank ( <ptr> data <dot> <noptr> bank )
<cls> <noptr> exy nos jpeg set img fmt ( <ptr> base <dot> <noptr> img fmt <dot> <noptr> version )
<cls> <noptr> adv xaf es stream ( <ptr> sd <dot> <noptr> enable )
<cls> <noptr> is within this va ( <ptr> va <dot> <noptr> size <dot> <noptr> align <dot> <noptr> v start )
<cls> <noptr> m x b init done ( <ptr> dev )
<cls> <noptr> v levent subscribe ( <ptr> f h <dot> <ptr> sub <dot> <noptr> elems <dot> <ptr> ops )
<cls> <noptr> dtl config ( <ptr> link )
<cls> <noptr> me idb gfs me clients show ( <ptr> m <dot> <ptr> unused )
<cls> <noptr> sms core configure board ( <ptr> core dev )
<cls> <noptr> tlv aic b write ( <ptr> sd <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> gpio ir recv driver init ( )
<cls> <noptr> stv stop all s mod cod ( <ptr> int p <dot> <noptr> demo d )
<cls> <noptr> six core reg map read ( <ptr> context <dot> <noptr> reg <dot> <ptr> val )
<cls> <noptr> stv ter read status ( <ptr> fe <dot> <ptr> status )
<cls> <noptr> vmc i host unlocked ioctl ( <ptr> filp <dot> <noptr> io cmd <dot> <noptr> io arg )
<cls> <noptr> vid out queue setup ( <ptr> v q <dot> <ptr> n buffers <dot> <ptr> n planes <dot> <noptr> sizes <dot> <ptr> alloc devs )
<cls> <noptr> vp fec cdc get fid ( <ptr> c cdc )
<cls> <noptr> msi iso chandler ( <ptr> urb )
<cls> <noptr> rare mono cmd main ( <ptr> radio <dot> <noptr> b and <dot> <noptr> freq )
<cls> <noptr> g sch w set output addr ( <ptr> dev <dot> <ptr> addr <dot> <noptr> index )
<cls> <noptr> me if async ( <noptr> fd <dot> <ptr> file <dot> <noptr> b and )
<cls> <noptr> vbo psv dec buf init ( <ptr> vb )
<cls> <noptr> sh set voltage ( <ptr> fe <dot> <noptr> voltage )
<cls> <noptr> qual upd ( <ptr> work )
<cls> <noptr> set quality ( <ptr> gsp ca dev <dot> <noptr> q )
<cls> <noptr> print address description ( <ptr> addr <dot> <noptr> tag )
<cls> <noptr> do cancel buffers ( <ptr> port <dot> <ptr> reason )
<cls> <noptr> ddb ic init ( <ptr> dev )
<cls> <noptr> find min pfn for node ( <noptr> nid )
<cls> <noptr> sp driver init ( )
<cls> <noptr> c x dt nr dmd dvb t mon ssi sub ( <ptr> tn r dmd <dot> <ptr> ssi )
<cls> <ptr> iv tv dequeue ( <ptr> s <dot> <ptr> q )
<cls> <noptr> copy two pixels ( <ptr> q data in <dot> <ptr> q data out <dot> <ptr> src <dot> <dptr> dst <dot> <noptr> ypos <dot> <noptr> reverse )
<cls> <noptr> saa seq show ( <ptr> m <dot> <ptr> v )
<cls> <noptr> net up read ic ( <ptr> ic adap <dot> <noptr> addr <dot> <noptr> reg <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> preview config inline offset ( <ptr> prev <dot> <noptr> offset )
<cls> <noptr> ee get current page ( )
<cls> <noptr> sysfs compact node ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> wcf upload quant ization tables ( <ptr> sd )
<cls> <noptr> pvr h dw state update ( <ptr> h dw )
<cls> <noptr> get field ( <noptr> value <dot> <noptr> mask )
<cls> <noptr> shmem mk nod ( <ptr> dir <dot> <ptr> dentry <dot> <noptr> mode <dot> <noptr> dev )
<cls> <noptr> ir remove ( <ptr> client )
<cls> <ptr> get format ( <noptr> index )
<cls> <noptr> pvr h dw state eval ( <ptr> h dw )
<cls> <noptr> dst wait dst ready ( <ptr> state <dot> <noptr> delay mode )
<cls> <noptr> compact zone order ( <ptr> zone <dot> <noptr> order <dot> <noptr> gfp mask <dot> <noptr> prio <dot> <noptr> alloc flags <dot> <noptr> class zoneid x <dot> <dptr> capture )
<cls> <noptr> video buf stream off ( <ptr> q )
<cls> <noptr> m base tt one ( <ptr> fe <dot> <noptr> tone )
<cls> <noptr> dib write word ( <ptr> state <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> is handled by aud tri f ( <noptr> addr )
<cls> <noptr> log times ( <noptr> x )
<cls> <noptr> mpt put msg frame hi pri ( <noptr> cb idx <dot> <ptr> ioc <dot> <ptr> m f )
<cls> <noptr> nv t process r xir data ( <ptr> nv t )
<cls> <noptr> m xls f config mpeg in ( <ptr> state <dot> <noptr> parallel serial <dot> <noptr> msb lsb st <dot> <noptr> clock phase <dot> <noptr> mpeg valid pol <dot> <noptr> mpeg sync pol )
<cls> <noptr> pvr ctrl get val name ( <ptr> cptr <dot> <noptr> val <dot> <ptr> b ptr <dot> <noptr> b max <dot> <ptr> blen )
<cls> <noptr> vivid vid caps d v timings ( <ptr> file <dot> <ptr> f h <dot> <ptr> timings )
<cls> <ptr> pvr hd wget ctrl by index ( <ptr> h dw <dot> <noptr> idx )
<cls> <noptr> reserve high atomic page block ( <ptr> page <dot> <ptr> zone <dot> <noptr> alloc order )
<cls> <noptr> i asy sm lock all ( <ptr> regs )
<cls> <noptr> sd callback ( <ptr> gsp ca dev )
<cls> <noptr> get if ( <ptr> dvb net )
<cls> <noptr> ovs g frame interval ( <ptr> sd <dot> <ptr> fi )
<cls> <noptr> td ard reg ( <ptr> priv <dot> <noptr> reg <dot> <ptr> val )
<cls> <noptr> huge node ( <ptr> vma <dot> <noptr> addr <dot> <noptr> gfp flags <dot> <dptr> m pol <dot> <dptr> node mask )
<cls> <noptr> sh vou probe ( <ptr> pdev )
<cls> <noptr> tw x audio dma free ( <ptr> dev <dot> <ptr> ac )
<cls> <noptr> read register ( <ptr> state <dot> <noptr> reg <dot> <ptr> val )
<cls> <noptr> dvb media device free ( <ptr> dvb dev )
<cls> <noptr> c xxx alsa register ( )
<cls> <noptr> h vas fmt stream ( <ptr> file <dot> <ptr> f h <dot> <ptr> f )
<cls> <noptr> m xls f get stream config ats c ( <ptr> fe <dot> <ptr> ts type <dot> <ptr> stream )
<cls> <noptr> arizona wait for boot ( <ptr> arizona )
<cls> <noptr> rts stop cmd ( <ptr> pcr )
<cls> <noptr> wm x otp exit ( <ptr> wm x )
<cls> <noptr> e crypt fsd entry free rcu ( <ptr> head )
<cls> <noptr> x c get adc envelope ( <ptr> priv <dot> <ptr> adc envelope )
<cls> <noptr> sms core gpio set level ( <ptr> core dev <dot> <noptr> pin num <dot> <noptr> new level )
<cls> <noptr> imx write reg ( <ptr> imx <dot> <noptr> addr <dot> <noptr> value )
<cls> <noptr> dvb usb media device init ( <ptr> adap )
<cls> <noptr> follow phys ( <ptr> vma <dot> <noptr> address <dot> <noptr> flags <dot> <ptr> prot <dot> <ptr> phys )
<cls> <noptr> iv tv unfinished dma ( <ptr> t )
<cls> <noptr> serial ir open ( <ptr> rc dev )
<cls> <noptr> saa set input ( <ptr> budget av <dot> <noptr> input )
<cls> <noptr> qca recv acl data ( <ptr> h dev <dot> <ptr> skb )
<cls> <noptr> vm balloon send get target ( <ptr> b )
<cls> <noptr> read signal strength ( <ptr> fe )
<cls> <noptr> mpt scsi h device delay show ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> m i pid parser xep ( <ptr> bridge )
<cls> <noptr> tv pgd v timings ( <ptr> sd <dot> <ptr> d v timings )
<cls> <noptr> redirect store ( <ptr> device <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> ms write bytes ( <ptr> host <dot> <noptr> tpc <dot> <noptr> cfg <dot> <noptr> cnt <dot> <ptr> data <dot> <ptr> int reg )
<cls> <noptr> budget c i irq ( <ptr> dev <dot> <ptr> isr )
<cls> <noptr> get swap pages ( <noptr> n goal <dot> <noptr> swp entries <dot> <noptr> entry size )
<cls> <noptr> exy nos jpeg compressed size ( <ptr> regs )
<cls> <noptr> so lot winit ( <ptr> solo dev )
<cls> <ptr> check v sfx ( )
<cls> <noptr> px p job abort ( <ptr> priv )
<cls> <noptr> pt cleanup table ( <ptr> pt <dot> <ptr> table )
<cls> <noptr> go y at pcm bist workaround ( <ptr> h dev )
<cls> <noptr> q am flip spec ( <ptr> demo d <dot> <ptr> channel )
<cls> <ptr> v pu get plat device ( <ptr> pdev )
<cls> <noptr> legacy dvb usb get key code ( <ptr> dev <dot> <ptr> ke )
<cls> <noptr> e ply ( <ptr> ioc <dot> <noptr> how long <dot> <noptr> sleep flag )
<cls> <noptr> mtp registered ( <ptr> sub dev )
<cls> <noptr> migrate vma collect hole ( <noptr> start <dot> <noptr> end <dot> <ptr> walk )
<cls> <noptr> tw try fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> imx set v flip ( <ptr> priv <dot> <noptr> val )
<cls> <noptr> shared policy replace ( <ptr> sp <dot> <noptr> start <dot> <noptr> end <dot> <ptr> new )
<cls> <noptr> fdt vcap mt ( <ptr> fdt v <dot> <ptr> arg )
<cls> <noptr> stv x set mode ( <ptr> fe <dot> <noptr> mode )
<cls> <noptr> v pes ctrl ( <ptr> ctrl )
<cls> <noptr> sci f recv wait ( <ptr> sci f dev <dot> <ptr> msg )
<cls> <noptr> b disp device run ( <ptr> priv )
<cls> <noptr> st bic gate ctrl ( <ptr> fe <dot> <noptr> enable )
<cls> <noptr> c x core irq ( <ptr> core <dot> <noptr> status )
<cls> <noptr> r heartbeat file close ( <ptr> inode <dot> <ptr> file )
<cls> <noptr> l k dtm ref count add not zero overflow ( )
<cls> <noptr> a pds x irq ( <noptr> irq <dot> <ptr> data )
<cls> <ptr> mei dev state str ( <noptr> state )
<cls> <noptr> eg tuner ( <ptr> sd <dot> <ptr> v )
<cls> <noptr> mrs set symbol rate ( <ptr> fe <dot> <noptr> s rate )
<cls> <noptr> stb d vbs calcs rate ( <ptr> state )
<cls> <noptr> v op v ring h copy ( <ptr> v dev <dot> <ptr> iov <dot> <ptr> u buf <dot> <noptr> len <dot> <noptr> read <dot> <noptr> v rid x <dot> <ptr> out len )
<cls> <noptr> saa cmd alloc seqno ( <ptr> dev )
<cls> <noptr> uvc debug fs init stream ( <ptr> stream )
<cls> <noptr> slab err ( <ptr> s <dot> <ptr> page <dot> <ptr> fmt )
<cls> <noptr> pvr copy ic addr list ( <ptr> dst <dot> <ptr> src <dot> <noptr> dst max )
<cls> <noptr> une ( <ptr> state <dot> <noptr> fin )
<cls> <noptr> wms ctrl ( <ptr> ctrl )
<cls> <noptr> as readable reg ( <ptr> dev <dot> <noptr> reg )
<cls> <noptr> j bd journal free reserved ( <ptr> handle )
<cls> <noptr> solo pci probe ( <ptr> pdev <dot> <ptr> id )
<cls> <noptr> tps ic driver exit ( )
<cls> <noptr> dvb pll driver init ( )
<cls> <ptr> notifier to csi ( <ptr> n )
<cls> <noptr> regs show ( <ptr> s <dot> <ptr> data )
<cls> <noptr> dvb get stc ( <ptr> demux <dot> <noptr> num <dot> <ptr> stc <dot> <ptr> base )
<cls> <noptr> cxa vs sliced fmt ( <ptr> sd <dot> <ptr> sv b i )
<cls> <noptr> bt tvs f buf ( <ptr> file <dot> <ptr> f <dot> <ptr> fb )
<cls> <noptr> c x dev check revision ( <ptr> dev )
<cls> <noptr> set c matrix ( <ptr> gsp ca dev <dot> <noptr> brightness <dot> <noptr> contrast <dot> <noptr> satur <dot> <noptr> hue )
<cls> <noptr> ven css election ( <ptr> file <dot> <ptr> f h <dot> <ptr> s )
<cls> <noptr> rtsp wr saving setting ( <ptr> pcr )
<cls> <noptr> six core cmd z if pin cfg ( <ptr> core <dot> <noptr> i q clk <dot> <noptr> i q fs <dot> <noptr> i out <dot> <noptr> q out )
<cls> <noptr> verify dma buf ops ( <ptr> q )
<cls> <noptr> isc ctrl init ( <ptr> isc )
<cls> <noptr> get address stack frame info ( <ptr> addr <dot> <ptr> offset <dot> <dptr> frame descr <dot> <dptr> frame pc )
<cls> <noptr> x sys read ahead ( <ptr> regs )
<cls> <noptr> dev mrc release ( <ptr> dev <dot> <ptr> res )
<cls> <noptr> c x card list ( <ptr> dev )
<cls> <noptr> saa dvb stop port ( <ptr> port )
<cls> <noptr> decide block type ( <ptr> cur <dot> <ptr> reference <dot> <ptr> delta block <dot> <noptr> stride <dot> <noptr> input step )
<cls> <noptr> scc am if irqhandler ( <noptr> irq <dot> <ptr> priv )
<cls> <noptr> spread ic ( <ptr> s <dot> <noptr> reg <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> init channel ( <ptr> chan )
<cls> <noptr> six core get and signal status ( <ptr> core )
<cls> <noptr> dcm i runtime resume ( <ptr> dev )
<cls> <noptr> stb set m clk ( <ptr> state <dot> <noptr> m clk )
<cls> <noptr> usb vision decompress ( <ptr> usb vision <dot> <ptr> compressed <dot> <ptr> de compressed <dot> <ptr> start pos <dot> <ptr> block type start pos <dot> <noptr> len )
<cls> <noptr> m pts as setup wide ports ( <ptr> ioc <dot> <ptr> port info )
<cls> <noptr> sh read signal strength ( <ptr> fe <dot> <ptr> strength )
<cls> <noptr> cxx xic mux unregister ( <ptr> dev )
<cls> <noptr> lis lv d remove fs ( <ptr> lis )
<cls> <noptr> histo set format ( <ptr> sub dev <dot> <ptr> cfg <dot> <ptr> fmt )
<cls> <noptr> event release buffer ref ( <ptr> core <dot> <ptr> inst <dot> <ptr> pkt )
<cls> <noptr> e pu debug ( <ptr> c x <dot> <ptr> order )
<cls> <noptr> uvc query v l ctrl ( <ptr> chain <dot> <ptr> v l ctrl )
<cls> <noptr> stk un initi soc ( <ptr> dev )
<cls> <noptr> cec pin adap status ( <ptr> adap <dot> <ptr> file )
<cls> <noptr> shrink node ( <ptr> pg dat <dot> <ptr> sc )
<cls> <noptr> bt tvs fmt vb icap ( <ptr> file <dot> <ptr> f <dot> <ptr> frt )
<cls> <noptr> usb d sbr release ( <ptr> v l dev )
<cls> <noptr> act month read isr ( <noptr> irq <dot> <ptr> data )
<cls> <noptr> altera export bool array ( <ptr> key <dot> <ptr> data <dot> <noptr> count )
<cls> <noptr> pcf gpio invert set ( <ptr> pcf <dot> <noptr> gpio <dot> <noptr> invert )
<cls> <noptr> ctrl set standard ( <ptr> demo d <dot> <ptr> standard )
<cls> <noptr> uvc ctrl begin ( <ptr> chain )
<cls> <noptr> d are g writeable ( <ptr> dev <dot> <noptr> reg )
<cls> <noptr> isc open ( <ptr> file )
<cls> <noptr> c xxx bulk irq callback ( <ptr> urb )
<cls> <noptr> cfg scramble r ( <ptr> state <dot> <noptr> gold )
<cls> <noptr> load cpu fwd irect ( <ptr> fn <dot> <ptr> mem <dot> <ptr> c x )
<cls> <noptr> stmp e irq mask ( <ptr> data )
<cls> <noptr> max irq exit ( <ptr> max )
<cls> <noptr> adv registered ( <ptr> sd )
<cls> <noptr> stb d vbs set btr loop bw ( <ptr> state )
<cls> <noptr> is igraph notify complete ( <ptr> notifier )
<cls> <noptr> max get frequency ( <ptr> fe <dot> <ptr> freq )
<cls> <noptr> wm x bulk read ( <ptr> wm x <dot> <noptr> reg <dot> <noptr> count <dot> <ptr> buf )
<cls> <noptr> ov init controls ( <ptr> sd )
<cls> <noptr> cb set irqhandler ( <ptr> slot <dot> <noptr> handler )
<cls> <noptr> go y a config etr ( <ptr> h dev <dot> <ptr> params )
<cls> <noptr> tua sleep ( <ptr> fe )
<cls> <noptr> pts top feed ( <ptr> feed )
<cls> <noptr> fim cmd get pin ctrl ( <ptr> f md )
<cls> <noptr> adb s power ( <ptr> sd <dot> <noptr> on )
<cls> <noptr> l k dtm double fault ( )
<cls> <noptr> is is parm ( <ptr> file <dot> <ptr> f h <dot> <ptr> a )
<cls> <noptr> v pfe read ber ( <ptr> fe <dot> <ptr> ber )
<cls> <noptr> wm x irq enable ( <ptr> data )
<cls> <noptr> shmem put super ( <ptr> sb )
<cls> <noptr> a pds x refresh p thres ( <ptr> chip <dot> <noptr> data )
<cls> <noptr> lp irq enable ( <ptr> data )
<cls> <noptr> security cred free ( <ptr> cred )
<cls> <noptr> exy nos jpeg power on ( <ptr> regs )
<cls> <noptr> identify page state ( <noptr> pfn <dot> <ptr> p <dot> <noptr> page flags )
<cls> <noptr> dw set dac ( <ptr> client <dot> <noptr> data )
<cls> <noptr> vp add tof b use list ( <ptr> inst <dot> <ptr> fb )
<cls> <noptr> c pia stream on ( <ptr> file <dot> <ptr> f h <dot> <noptr> type )
<cls> <noptr> uvc video decode i soc ( <ptr> uv curb <dot> <ptr> buf <dot> <ptr> meta buf )
<cls> <noptr> kas an poison element ( <ptr> pool <dot> <ptr> element )
<cls> <noptr> r bsp write u ev ( <ptr> r bsp <dot> <noptr> value )
<cls> <noptr> init r cmap aver media ma ( )
<cls> <noptr> disable audio input ( <ptr> state )
<cls> <noptr> dib sets b channel ( <ptr> state )
<cls> <noptr> ov compute sys clk ( <ptr> sensor <dot> <noptr> pll pre div <dot> <noptr> pll mult <dot> <noptr> sys div )
<cls> <noptr> x c do timer sleep ( <ptr> timer sleep )
<cls> <noptr> isp video get format ( <ptr> video <dot> <ptr> format )
<cls> <noptr> c x get audio input ( <ptr> c x <dot> <noptr> index <dot> <ptr> audio )
<cls> <noptr> get bit error rates ( <ptr> state <dot> <ptr> ber numerator <dot> <ptr> ber denominator )
<cls> <noptr> read eeprom ( <ptr> dev <dot> <ptr> client <dot> <ptr> ee data <dot> <noptr> len )
<cls> <noptr> dib get front end ( <ptr> fe <dot> <ptr> c )
<cls> <noptr> bt tv irq ( <noptr> irq <dot> <ptr> devid )
<cls> <noptr> mem cg numa stats how ( <ptr> m <dot> <ptr> v )
<cls> <noptr> ctrl set res ver ( <ptr> cptr <dot> <noptr> m <dot> <noptr> v )
<cls> <noptr> sp get tune settings ( <ptr> fe <dot> <ptr> fe settings )
<cls> <noptr> m c xxx spi probe ( <ptr> spi )
<cls> <noptr> mpegts dto init ( <ptr> state )
<cls> <noptr> descriptor list endof chain ( <ptr> desc )
<cls> <noptr> delta ipc init ( <ptr> delta )
<cls> <noptr> cc pvp config ( <ptr> ccp <dot> <noptr> vp clk div )
<cls> <noptr> msb cache write ( <ptr> msb <dot> <noptr> lba <dot> <noptr> page <dot> <noptr> add to cache only <dot> <ptr> sg <dot> <noptr> offset )
<cls> <noptr> dev m dev freq dev release ( <ptr> dev <dot> <ptr> res )
<cls> <noptr> tif mms transfer data ( <ptr> host )
<cls> <noptr> mtk mdp m m stream on ( <ptr> file <dot> <ptr> f h <dot> <noptr> type )
<cls> <noptr> create huge pud ( <ptr> vm f )
<cls> <noptr> n gene command ic write ( <ptr> dev <dot> <noptr> adr <dot> <ptr> out <dot> <noptr> out len )
<cls> <noptr> throttle direct reclaim ( <noptr> gfp mask <dot> <ptr> zone list <dot> <ptr> node mask )
<cls> <noptr> cal enum fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> is cur manual ( <ptr> master )
<cls> <ptr> get first page ( <ptr> zs page )
<cls> <noptr> isl get mode ( <ptr> client )
<cls> <noptr> k mem cache free bulk ( <ptr> s <dot> <noptr> size <dot> <dptr> p )
<cls> <noptr> xpc setup partition suv ( )
<cls> <noptr> v op virtio copy desc ( <ptr> v dev <dot> <ptr> copy )
<cls> <noptr> e fault ( <ptr> fe )
<cls> <noptr> cro sec cec event ( <ptr> nb <dot> <noptr> queued during suspend <dot> <ptr> notify )
<cls> <noptr> collect procs ( <ptr> page <dot> <ptr> to kill <dot> <noptr> force early )
<cls> <noptr> vm pressure init ( <ptr> v mpr )
<cls> <noptr> register v map purge notifier ( <ptr> nb )
<cls> <noptr> ov seth v flip ( <ptr> gsp ca dev )
<cls> <noptr> j l c read reg ( <ptr> gsp ca dev <dot> <noptr> reg )
<cls> <noptr> mei clb usr x event ( <ptr> cl )
<cls> <noptr> i asy sm remap ( <ptr> regs )
<cls> <noptr> c x enum input ( <ptr> dev <dot> <ptr> i )
<cls> <ptr> bd i getbyid ( <noptr> id )
<cls> <ptr> gen wq e search pin ( <ptr> c file <dot> <noptr> u addr <dot> <noptr> size <dot> <dptr> virt addr )
<cls> <noptr> l gdt set modulation ( <ptr> state <dot> <ptr> p )
<cls> <noptr> mpt spi remove ( <ptr> pdev )
<cls> <noptr> adv xaf es std ( <ptr> sd <dot> <noptr> std )
<cls> <noptr> list lru unregister ( <ptr> lru )
<cls> <noptr> sp jpeg enc stream stat ( <ptr> regs )
<cls> <noptr> smi app pll blank ing update ( <ptr> sensor )
<cls> <noptr> v l prio change ( <ptr> global <dot> <ptr> local <dot> <noptr> new )
<cls> <noptr> ctrl get crop cap dl ( <ptr> cptr <dot> <ptr> val )
<cls> <noptr> typhoon s frequency ( <ptr> isa <dot> <noptr> freq )
<cls> <noptr> vmc i host do ctx remove notify ( <ptr> vmc i host dev <dot> <ptr> ioctl name <dot> <ptr> u ptr )
<cls> <noptr> img ir sharp filter ( <ptr> in <dot> <ptr> out <dot> <noptr> protocols )
<cls> <noptr> c x der write reg ( <ptr> priv <dot> <noptr> addr <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> high work func ( <ptr> work )
<cls> <noptr> demo d attach dr x k ( <ptr> input )
<cls> <noptr> hdc s set gains ( <ptr> sd <dot> <noptr> g )
<cls> <noptr> me it xe input ready interrupt enable ( <ptr> dev )
<cls> <noptr> fini b tt vic ( <ptr> b tv )
<cls> <noptr> td a read extended ( <ptr> fe )
<cls> <noptr> m cxx xic remove ( <ptr> client )
<cls> <noptr> ln b send dis eq c ( <ptr> dev <dot> <noptr> link <dot> <noptr> input <dot> <ptr> cmd )
<cls> <noptr> ths write and or ( <ptr> sd <dot> <noptr> reg <dot> <noptr> clr mask <dot> <noptr> val mask )
<cls> <noptr> m x identify state ( <ptr> udev <dot> <ptr> props <dot> <dptr> desc <dot> <ptr> cold )
<cls> <noptr> lg dta probe ( <ptr> client <dot> <ptr> id )
<cls> <noptr> dev freq event enable e dev ( <ptr> e dev )
<cls> <noptr> set zone contiguous ( <ptr> zone )
<cls> <noptr> six get step ( <ptr> radio )
<cls> <noptr> adb sis clock freq ( <ptr> sd <dot> <noptr> freq )
<cls> <noptr> get vsb prev iter b iber ( <ptr> dev addr <dot> <ptr> ber <dot> <ptr> cnt )
<cls> <noptr> rn tic probe ( <ptr> ic <dot> <ptr> id )
<cls> <noptr> c cps stream ( <ptr> sd <dot> <noptr> enable )
<cls> <noptr> fill ctrl init data ( <ptr> v l flash <dot> <ptr> flash cfg <dot> <ptr> ctrl init data )
<cls> <noptr> scm write ( <ptr> state <dot> <noptr> addr <dot> <noptr> data )
<cls> <ptr> to side v ( <ptr> v l dev )
<cls> <noptr> me icl bus dev setup ( <ptr> bus <dot> <ptr> cl dev )
<cls> <noptr> dvb sky s attach ( <ptr> adap )
<cls> <noptr> mich w intr init ( <ptr> m drv )
<cls> <noptr> huge tlb f sinc free inodes ( <ptr> sb info )
<cls> <noptr> ab get register interrupt ible ( <ptr> ab <dot> <noptr> reg <dot> <ptr> reg val )
<cls> <noptr> stmp e auto sleep ( <ptr> stmp e <dot> <noptr> auto sleep timeout )
<cls> <noptr> bcs pun slip one byte ( <ptr> b csp <dot> <noptr> byte )
<cls> <noptr> adv irq enable ( <ptr> sd <dot> <noptr> enable )
<cls> <noptr> preview config gamma corr n ( <ptr> prev <dot> <ptr> params )
<cls> <noptr> iv tv wait sda ( <ptr> it v <dot> <noptr> val )
<cls> <noptr> coda fw callback ( <ptr> fw <dot> <ptr> context )
<cls> <noptr> c cdc init entities ( <ptr> c cdc )
<cls> <noptr> m cam ctl rd mav malloc ( <ptr> cam )
<cls> <noptr> pb dump ( <ptr> sd )
<cls> <ptr> dtc dom ( <ptr> dtc )
<cls> <noptr> red rat transmit ir ( <ptr> rc dev <dot> <ptr> tx buf <dot> <noptr> count )
<cls> <noptr> c x enum audio ( <ptr> file <dot> <ptr> f h <dot> <ptr> vin )
<cls> <noptr> cbv m close ( <ptr> vma )
<cls> <noptr> free remove partial show ( <ptr> s <dot> <ptr> buf )
<cls> <noptr> stv ter read ber ( <ptr> fe <dot> <ptr> ber )
<cls> <noptr> sp jpeg stream stat ok ( <ptr> regs )
<cls> <noptr> set section nid ( <noptr> section nr <dot> <noptr> nid )
<cls> <noptr> dib dcc freq ( <ptr> fe <dot> <noptr> fast )
<cls> <noptr> ves x init ( <ptr> fe )
<cls> <noptr> em xx vb setup ( <ptr> dev )
<cls> <noptr> kemp ld release hardware mutex ( <ptr> pld )
<cls> <noptr> pvr hd wc x vb i hack ( <ptr> h dw )
<cls> <noptr> intell pss prepare ( <ptr> dev )
<cls> <noptr> vid cap buf request complete ( <ptr> vb )
<cls> <noptr> vid ioc venc query cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> cap )
<cls> <noptr> tango ir handler c ( <ptr> ir )
<cls> <noptr> kernel poison pages ( <ptr> page <dot> <noptr> numpages <dot> <noptr> enable )
<cls> <noptr> osc deviation ( <ptr> priv <dot> <noptr> deviation <dot> <noptr> flag )
<cls> <noptr> rc dev u event ( <ptr> device <dot> <ptr> env )
<cls> <noptr> rts set asp m ( <ptr> pcr <dot> <noptr> enable )
<cls> <noptr> huge tlb un reserve pages ( <ptr> inode <dot> <noptr> start <dot> <noptr> end <dot> <noptr> freed )
<cls> <noptr> f m ris a remove ( <ptr> pdev <dot> <noptr> n dev )
<cls> <noptr> opera streaming ctrl ( <ptr> adap <dot> <noptr> onoff )
<cls> <noptr> se compat sys process vm read v ( <noptr> pid <dot> <ptr> l vec <dot> <noptr> lio v cnt <dot> <ptr> rvec <dot> <noptr> rio v cnt <dot> <noptr> flags )
<cls> <noptr> dvb video open ( <ptr> inode <dot> <ptr> file )
<cls> <noptr> ske cg x read ( <ptr> client <dot> <noptr> addr <dot> <ptr> val )
<cls> <noptr> c x usb c x front end attach ( <ptr> adap )
<cls> <noptr> ddb device attrs del ( <ptr> dev )
<cls> <noptr> au write reg ( <ptr> state <dot> <noptr> reg <dot> <noptr> data )
<cls> <noptr> me it xe sec reg read ( <ptr> hw <dot> <noptr> offset )
<cls> <noptr> asan report store no abort ( <noptr> addr )
<cls> <noptr> vb ops wait prepare ( <ptr> v q )
<cls> <ptr> uvc stream new ( <ptr> dev <dot> <ptr> int f )
<cls> <ptr> f m v l deinit video device ( )
<cls> <noptr> applyto existing page range ( <ptr> m m <dot> <noptr> addr <dot> <noptr> size <dot> <noptr> fn <dot> <ptr> data )
<cls> <noptr> v l stub g output ( <ptr> ops <dot> <ptr> file <dot> <ptr> f h <dot> <ptr> p )
<cls> <noptr> set component locate ( <ptr> c dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> pkt sys set resource ( <ptr> pkt <dot> <noptr> id <dot> <noptr> size <dot> <noptr> addr <dot> <ptr> cookie )
<cls> <noptr> m lv init ( <ptr> priv )
<cls> <noptr> xpc start h bbe ater ( )
<cls> <noptr> rt vga adjust ( <ptr> priv )
<cls> <noptr> hl sysfs fini ( <ptr> h dev )
<cls> <noptr> v mar b erase ( <ptr> vma <dot> <ptr> root )
<cls> <noptr> x vip dma cleanup ( <ptr> dma )
<cls> <noptr> tw l set bits ( <ptr> tw l <dot> <noptr> reg <dot> <noptr> mask )
<cls> <noptr> get frame size raw nv ( <noptr> width <dot> <noptr> height )
<cls> <noptr> mtk jpeg dec set img stride ( <ptr> base <dot> <noptr> stride y <dot> <noptr> stride uv )
<cls> <noptr> ath k load firmware ( <ptr> udev <dot> <ptr> firmware )
<cls> <noptr> sun ic sig fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> rdc x sb probe ( <ptr> pdev <dot> <ptr> ent )
<cls> <noptr> state update pipeline state ( <ptr> h dw )
<cls> <ptr> wait on page read ( <ptr> page )
<cls> <noptr> stv cab q amf e clock ( <ptr> state )
<cls> <noptr> v fe halt clear ( <ptr> v fe )
<cls> <noptr> saa encoder buffers de alloc ( <ptr> port )
<cls> <ptr> sub pool vma ( <ptr> vma )
<cls> <noptr> msm c sid sub dev init ( <ptr> cam ss <dot> <ptr> c sid <dot> <ptr> res <dot> <noptr> id )
<cls> <noptr> six x set front end ( <ptr> fe )
<cls> <noptr> shrink active list ( <noptr> nr to scan <dot> <ptr> lru vec <dot> <ptr> sc <dot> <noptr> lru )
<cls> <noptr> ccd cls c enable ( <ptr> c cdc )
<cls> <noptr> free pgd range ( <ptr> tlb <dot> <noptr> addr <dot> <noptr> end <dot> <noptr> floor <dot> <noptr> ceiling )
<cls> <noptr> sensor set power ( <ptr> cam if <dot> <noptr> on )
<cls> <noptr> init r cit x v map ( )
<cls> <noptr> scm o if get pad code ( <noptr> pad <dot> <noptr> index )
<cls> <noptr> dib read status ( <ptr> fe <dot> <ptr> stat )
<cls> <noptr> iv tv yuv work handler ( <ptr> it v )
<cls> <ptr> slots to pool ( <ptr> s )
<cls> <noptr> rtl force power down ( <ptr> pcr <dot> <noptr> pm state )
<cls> <noptr> fin tek enable cir ( <ptr> fin tek )
<cls> <noptr> dst get tuna ( <ptr> state )
<cls> <noptr> pvr enum audio ( <ptr> file <dot> <ptr> priv <dot> <ptr> vin )
<cls> <noptr> mrs read snr ( <ptr> fe <dot> <ptr> snr )
<cls> <noptr> btc check config ( <ptr> pdev <dot> <ptr> priv data )
<cls> <noptr> mcs write reg ( <ptr> priv <dot> <noptr> val )
<cls> <noptr> freer btree fname ( <ptr> root )
<cls> <noptr> c temp show ( <ptr> device <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> f m r x update af cache ( <ptr> f m dev <dot> <noptr> af )
<cls> <noptr> page type info show mixed count ( <ptr> m <dot> <ptr> pg dat )
<cls> <noptr> e did block verify crc ( <ptr> e did block )
<cls> <noptr> indow ( <ptr> av <dot> <noptr> window nr )
<cls> <noptr> v pbe enum outputs ( <ptr> v pbe dev <dot> <ptr> output )
<cls> <noptr> idt smb read byte ( <ptr> pdev <dot> <ptr> seq )
<cls> <noptr> tps voltage set strict ( <ptr> tps )
<cls> <noptr> uvc simplify fraction ( <ptr> numerator <dot> <ptr> denominator <dot> <noptr> n terms <dot> <noptr> threshold )
<cls> <noptr> m cam cam reset ( <ptr> cam )
<cls> <noptr> tc x chip init ( <ptr> tc x )
<cls> <noptr> mei hbm reset ( <ptr> dev )
<cls> <noptr> imon disconnect ( <ptr> interface )
<cls> <noptr> st mlp timer driver init ( )
<cls> <noptr> synchronous wake function ( <ptr> wait <dot> <noptr> mode <dot> <noptr> sync <dot> <ptr> key )
<cls> <noptr> m c xxx adc do conversion ( <ptr> m c xxx <dot> <noptr> mode <dot> <noptr> channel <dot> <noptr> ato <dot> <noptr> ato x <dot> <ptr> sample )
<cls> <noptr> dib set bandwidth ( <ptr> fe )
<cls> <ptr> find merge able ( <noptr> size <dot> <noptr> align <dot> <noptr> flags <dot> <ptr> name <dot> <ptr> ctor )
<cls> <noptr> free low memory core early ( )
<cls> <noptr> max read ( <ptr> filp <dot> <ptr> k obj <dot> <ptr> bin attr <dot> <ptr> buf <dot> <noptr> off <dot> <noptr> count )
<cls> <noptr> tt usb ic func ( <ptr> adapter )
<cls> <noptr> mtm set context ( <ptr> mtm <dot> <ptr> ctx )
<cls> <noptr> enqueue in driver ( <ptr> vb )
<cls> <noptr> pch p hub read serial rom ( <ptr> chip <dot> <noptr> offset address <dot> <ptr> data )
<cls> <noptr> fast rpc create maps ( <ptr> ctx )
<cls> <noptr> stv send dis eq c msg ( <ptr> fe <dot> <ptr> m )
<cls> <noptr> r card rif notify complete ( <ptr> notifier )
<cls> <noptr> do compat sys move pages ( <noptr> pid <dot> <noptr> nr pages <dot> <ptr> pages <dot> <ptr> nodes <dot> <ptr> status <dot> <noptr> flags )
<cls> <noptr> v bdc num users ( <ptr> buf priv )
<cls> <noptr> stb wait dis eq ctx idle ( <ptr> state <dot> <noptr> timeout )
<cls> <noptr> tea power down ( <ptr> radio )
<cls> <noptr> usb bulk urb init ( <ptr> stream )
<cls> <noptr> l gdt get front end ( <ptr> fe <dot> <ptr> p )
<cls> <noptr> mem cgroup shrink node ( <ptr> mem cg <dot> <noptr> gfp mask <dot> <noptr> no swap <dot> <ptr> pg dat <dot> <ptr> nr scanned )
<cls> <ptr> seek r cmap ( <ptr> name )
<cls> <noptr> mem block dump ( <ptr> type )
<cls> <ptr> v fe get crop ( <ptr> line <dot> <ptr> cfg <dot> <noptr> which )
<cls> <noptr> q p alloc hyper call ( <ptr> entry )
<cls> <noptr> asan store no abort ( <noptr> )
<cls> <noptr> vbd mas g put user ptr ( <ptr> buf priv )
<cls> <noptr> max mask write reg ( <ptr> priv <dot> <noptr> reg <dot> <noptr> mask <dot> <noptr> data )
<cls> <noptr> free copy ( <ptr> info )
<cls> <noptr> c x dt nr dmd common tune setting ( <ptr> tn r dmd <dot> <noptr> sys <dot> <noptr> frequency khz <dot> <noptr> bandwidth <dot> <noptr> one seg opt <dot> <noptr> one seg opts h ft dir )
<cls> <noptr> v fe set x bar cfg ( <ptr> v fe <dot> <ptr> output <dot> <noptr> enable )
<cls> <noptr> rts x pci init hw ( <ptr> pcr )
<cls> <noptr> r vin m c parse of endpoint ( <ptr> dev <dot> <ptr> ve p <dot> <ptr> asd )
<cls> <noptr> dvb usb v media device register ( <ptr> adap )
<cls> <noptr> dax add sub devs ( <ptr> chip <dot> <ptr> p data )
<cls> <noptr> nv topen ( <ptr> dev )
<cls> <noptr> uvc register chains ( <ptr> dev )
<cls> <ptr> get bug type ( <ptr> info )
<cls> <noptr> rts x usb ms poll card ( <ptr> work )
<cls> <noptr> av boot arm ( <ptr> av )
<cls> <noptr> e cic xfer ( <ptr> adap <dot> <noptr> msg <dot> <noptr> num )
<cls> <noptr> six x init ( <ptr> fe )
<cls> <noptr> dvb video write ( <ptr> file <dot> <ptr> buf <dot> <noptr> count <dot> <ptr> p pos )
<cls> <noptr> init r cmap tt ( )
<cls> <noptr> smi app set stream ( <ptr> sub dev <dot> <noptr> enable )
<cls> <noptr> soft reset store ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <ptr> vim c deb process frame ( <ptr> ved <dot> <ptr> sink frame )
<cls> <ptr> mei hbm cl findby cmd ( <ptr> dev <dot> <ptr> buf )
<cls> <noptr> bt tv crop reset ( <ptr> c <dot> <noptr> norm )
<cls> <noptr> delete from lrucache ( <ptr> p )
<cls> <noptr> c x usb medi on v stop streaming ( <ptr> q )
<cls> <noptr> snd tea x sh w freq seek ( <ptr> file <dot> <ptr> tea <dot> <ptr> a )
<cls> <noptr> pwm ir set duty cycle ( <ptr> dev <dot> <noptr> duty cycle )
<cls> <noptr> asan store no abort ( <noptr> )
<cls> <noptr> grup refetch context ( <ptr> g seg <dot> <ptr> cb <dot> <ptr> cbe <dot> <noptr> cbr map <dot> <noptr> length )
<cls> <noptr> section mark present ( <ptr> ms )
<cls> <noptr> me it xea liveness poll ( <ptr> dev <dot> <noptr> expected )
<cls> <ptr> rca rfc p get ( <ptr> np )
<cls> <noptr> shmem mmap ( <ptr> file <dot> <ptr> vma )
<cls> <noptr> tps gpio get ( <ptr> chip <dot> <noptr> offset )
<cls> <noptr> mpt lans du send ( <ptr> skb <dot> <ptr> dev )
<cls> <noptr> uvc probe ( <ptr> int f <dot> <ptr> id )
<cls> <noptr> vp if set vb i display params ( <ptr> vb i params <dot> <noptr> channelid )
<cls> <noptr> get bandwidth ( <ptr> fe <dot> <ptr> bandwidth )
<cls> <ptr> huge tlb cgroup from task ( <ptr> task )
<cls> <noptr> mem cgroup move charge ( )
<cls> <noptr> mem stick free host ( <ptr> host )
<cls> <noptr> px a camera set bus param ( <ptr> pc dev )
<cls> <noptr> at driver init ( )
<cls> <noptr> dvb front end suspend ( <ptr> fe )
<cls> <noptr> adv xx log status ( <ptr> sd )
<cls> <noptr> cec queue msg monitor ( <ptr> adap <dot> <ptr> msg <dot> <noptr> valid la )
<cls> <noptr> clu configure frame ( <ptr> entity <dot> <ptr> pipe <dot> <ptr> dl <dot> <ptr> dl b )
<cls> <noptr> skb af registered ( <ptr> sd )
<cls> <noptr> lead tek eeprom ( <ptr> core <dot> <ptr> eeprom data )
<cls> <noptr> mei ioc b free ( <ptr> cb )
<cls> <noptr> saa dma start ( <ptr> dev )
<cls> <noptr> stv pll setup ( <ptr> state <dot> <noptr> ic speed <dot> <noptr> x tal )
<cls> <noptr> me ime set pm domain ( <ptr> dev )
<cls> <noptr> pluto write reg ( <ptr> pluto <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> stv x get m clk ( <ptr> state )
<cls> <noptr> l k dtm ref count dec negative ( )
<cls> <noptr> bt tv print risc addr ( <ptr> b tv )
<cls> <noptr> move vma ( <ptr> vma <dot> <noptr> old addr <dot> <noptr> old len <dot> <noptr> new len <dot> <noptr> new addr <dot> <ptr> locked <dot> <ptr> u f <dot> <ptr> u fun map )
<cls> <noptr> c xxx reset vb i buffer ( <ptr> dev <dot> <ptr> dma q )
<cls> <ptr> parent node info ( <ptr> pn <dot> <noptr> nid )
<cls> <noptr> security x frm policy free ( <ptr> ctx )
<cls> <noptr> j pu queue init ( <ptr> priv <dot> <ptr> src v q <dot> <ptr> dst v q )
<cls> <noptr> write pte ( <ptr> ctx <dot> <noptr> shadow pte addr <dot> <noptr> val )
<cls> <noptr> smi ic init ( <ptr> dev )
<cls> <noptr> tango change protocol ( <ptr> dev <dot> <ptr> rc type )
<cls> <noptr> vm f insert pfn pud ( <ptr> vm f <dot> <noptr> pfn <dot> <noptr> write )
<cls> <noptr> scc am if close ( <ptr> file )
<cls> <noptr> xpc allow h bu v ( <noptr> partid )
<cls> <noptr> c sit x get resources ( <ptr> c sit x <dot> <ptr> pdev )
<cls> <noptr> j bd free inode ( <ptr> j inode )
<cls> <noptr> omap isp ccp cleanup ( <ptr> isp )
<cls> <noptr> adv xx get e did ( <ptr> sd <dot> <ptr> e did )
<cls> <noptr> sm device release ( <ptr> dev )
<cls> <noptr> vm stat cpu dead ( <noptr> cpu )
<cls> <noptr> fb con free font ( <ptr> p <dot> <noptr> free font )
<cls> <noptr> adv x xsd v timings ( <ptr> sd <dot> <ptr> timings )
<cls> <noptr> z pool destroy pool ( <ptr> z pool )
<cls> <noptr> ska disconnect ( <ptr> sd )
<cls> <noptr> i a compat sys process vm write v ( <ptr> regs )
<cls> <noptr> iv tv set os d alpha ( <ptr> it v )
<cls> <noptr> skb af configure sub devs ( <ptr> state <dot> <ptr> c )
<cls> <noptr> hack r fg fmt sdr ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> cio v ls fmt ( <ptr> file <dot> <ptr> f h <dot> <ptr> f )
<cls> <noptr> coda write ( <ptr> dev <dot> <noptr> data <dot> <noptr> reg )
<cls> <noptr> tvp parsed t ( <ptr> decoder <dot> <ptr> np )
<cls> <noptr> uds output limits ( <noptr> input <dot> <ptr> minimum <dot> <ptr> maximum )
<cls> <noptr> set res ( <ptr> sd )
<cls> <noptr> b tmr v lps cmd read ( <ptr> file <dot> <ptr> user buf <dot> <noptr> count <dot> <ptr> p pos )
<cls> <noptr> em polling get key ( <ptr> ir <dot> <ptr> poll result )
<cls> <noptr> bcm download firmware ( <ptr> fe )
<cls> <noptr> adv s audio stream ( <ptr> sd <dot> <noptr> enable )
<cls> <noptr> sci frm alist munmap ( <ptr> start window <dot> <noptr> offset <dot> <noptr> nr pages )
<cls> <noptr> page type info show free ( <ptr> m <dot> <ptr> arg )
<cls> <noptr> stk vid io cs input ( <ptr> filp <dot> <ptr> priv <dot> <noptr> i )
<cls> <noptr> front swap store ( <ptr> page )
<cls> <noptr> ssb i read ( <ptr> dev <dot> <noptr> addr <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> bt q com smd close ( <ptr> h dev )
<cls> <noptr> free z bud page ( <ptr> z hdr )
<cls> <noptr> c sect pfe idle irqhandler ( <noptr> irq <dot> <ptr> priv )
<cls> <noptr> cec gpio low ( <ptr> adap )
<cls> <noptr> pkt session cmd ( <ptr> pkt <dot> <noptr> pkt type <dot> <ptr> cookie )
<cls> <noptr> v pfe enum fmt ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> adv x afe read ro map ( <ptr> state <dot> <noptr> reg )
<cls> <noptr> tuner transfer ( <ptr> fe <dot> <ptr> msg <dot> <noptr> size )
<cls> <noptr> cxa v probe ( <ptr> c x )
<cls> <noptr> iren ltv handle key ( <ptr> b tv )
<cls> <noptr> adv smbus read byte data ( <ptr> client <dot> <noptr> command )
<cls> <noptr> m xls fic xfer ( <ptr> adap <dot> <noptr> msg <dot> <noptr> num )
<cls> <noptr> m lv probe ( <ptr> client <dot> <ptr> did )
<cls> <noptr> imx change compose ( <ptr> imx <dot> <ptr> cfg <dot> <noptr> which <dot> <ptr> width <dot> <ptr> height <dot> <noptr> flags )
<cls> <noptr> sp mfc get int err v ( <ptr> dev )
<cls> <noptr> pm x irq domain map ( <ptr> d <dot> <noptr> vir q <dot> <noptr> hw )
<cls> <noptr> venus suspend xx ( <ptr> core )
<cls> <noptr> vb core query buf ( <ptr> q <dot> <noptr> index <dot> <ptr> pb )
<cls> <noptr> hdc s reset ( <ptr> sd )
<cls> <noptr> free trace k probe ( <ptr> tk )
<cls> <noptr> dib pwm agc reset ( <ptr> fe )
<cls> <noptr> me ime reg write ( <ptr> hw <dot> <noptr> offset <dot> <noptr> value )
<cls> <noptr> pvr decoder enable ( <ptr> h dw <dot> <noptr> enable fl )
<cls> <noptr> isl get range ( <ptr> client )
<cls> <noptr> h v ame m free ( <ptr> ctx <dot> <ptr> buf )
<cls> <ptr> sdt oak vcm ( <ptr> sub dev )
<cls> <noptr> solo set video type ( <ptr> solo dev <dot> <noptr> ish z )
<cls> <noptr> advis r ( <ptr> sd <dot> <noptr> status <dot> <ptr> handled )
<cls> <noptr> start genius cam ( <ptr> gsp ca dev )
<cls> <noptr> usb tv iso cb ( <ptr> ip )
<cls> <noptr> scm o if registered ( <ptr> sd )
<cls> <noptr> tuner driver init ( )
<cls> <noptr> e tek registered ( <ptr> sub dev )
<cls> <noptr> vivid vid out overlay ( <ptr> file <dot> <ptr> f h <dot> <noptr> i )
<cls> <noptr> mtv update ( <ptr> c <dot> <noptr> addr space <dot> <noptr> reg <dot> <noptr> mask <dot> <noptr> val )
<cls> <noptr> m rv l close ( <ptr> hu )
<cls> <noptr> wp huge pmd ( <ptr> vm f <dot> <noptr> orig pmd )
<cls> <noptr> dib reset gpio ( <ptr> st )
<cls> <noptr> unmap huge page range final ( <ptr> tlb <dot> <ptr> vma <dot> <noptr> start <dot> <noptr> end <dot> <ptr> ref page )
<cls> <noptr> vp usb driver init ( )
<cls> <noptr> f m v l fops read ( <ptr> file <dot> <ptr> buf <dot> <noptr> count <dot> <ptr> p pos )
<cls> <noptr> sun ics iv l init ( <ptr> csi )
<cls> <noptr> vsp video try format ( <ptr> video <dot> <ptr> pix <dot> <dptr> fmt info )
<cls> <noptr> m mol sg volatile ctrl ( <ptr> ctrl )
<cls> <noptr> unmap kernel range no flush ( <noptr> addr <dot> <noptr> size )
<cls> <noptr> d bell link ( <noptr> handle <dot> <noptr> notify idx )
<cls> <noptr> f m send cmd ( <ptr> f m dev <dot> <noptr> f mop <dot> <noptr> type <dot> <ptr> payload <dot> <noptr> payload len <dot> <ptr> wait completion )
<cls> <noptr> tw l resume ( <ptr> dev )
<cls> <noptr> sms core validate client ( <ptr> core dev <dot> <ptr> client <dot> <noptr> datatype <dot> <noptr> id )
<cls> <noptr> eeprom c x pulse high ( <ptr> eeprom )
<cls> <noptr> isp if wait for stop ( <ptr> isp if <dot> <noptr> int f <dot> <noptr> v fe )
<cls> <noptr> set dqt ( <ptr> gsp ca dev <dot> <noptr> q )
<cls> <noptr> philips sut t tuner set params ( <ptr> fe )
<cls> <noptr> cec dev node register ( <ptr> dev node <dot> <ptr> owner )
<cls> <noptr> gru dump chip let request ( <noptr> arg )
<cls> <ptr> dev freq get dev freq by phandle ( <ptr> dev <dot> <noptr> index )
<cls> <noptr> stv set carrier offset ( <ptr> state <dot> <noptr> offset )
<cls> <noptr> m pol rebind node mask ( <ptr> pol <dot> <ptr> nodes )
<cls> <noptr> dvb net set mac ( <ptr> dev <dot> <ptr> p )
<cls> <noptr> k mem leak free per cpu ( <ptr> ptr )
<cls> <noptr> apply vma lock flags ( <noptr> start <dot> <noptr> len <dot> <noptr> flags )
<cls> <noptr> vid ioc g f buf ( <ptr> file <dot> <ptr> f h <dot> <ptr> fb )
<cls> <noptr> fim c pipeline validate ( <ptr> fim c )
<cls> <noptr> tvp write err ( <ptr> sd <dot> <noptr> reg <dot> <noptr> val <dot> <ptr> err )
<cls> <noptr> d dbport probe ( <ptr> port )
<cls> <noptr> z r xx got frame ( <ptr> cam <dot> <noptr> jpg size )
<cls> <noptr> c cdc get image window ( <ptr> win )
<cls> <noptr> bt rtl setup rtl a ( <ptr> h dev <dot> <ptr> bt rtl dev )
<cls> <noptr> omap is pc cdc isr ( <ptr> c cdc <dot> <noptr> events )
<cls> <noptr> cma used fops open ( <ptr> inode <dot> <ptr> file )
<cls> <noptr> hl device heartbeat ( <ptr> work )
<cls> <noptr> mt get tune settings ( <ptr> fe <dot> <ptr> fet une settings )
<cls> <noptr> mic setup msi ( <ptr> m dev <dot> <ptr> pdev )
<cls> <noptr> migrate vma collect ( <ptr> migrate )
<cls> <noptr> m m compute batch init ( )
<cls> <noptr> xpc get remote r p ( <noptr> nas id <dot> <ptr> discovered nas ids <dot> <ptr> remote r p <dot> <ptr> remote r ppa )
<cls> <noptr> sa ago interface reset ( <ptr> go )
<cls> <noptr> omap isp stat subscribe event ( <ptr> sub dev <dot> <ptr> f h <dot> <ptr> sub )
<cls> <noptr> prevent sleep ( <ptr> ops )
<cls> <noptr> page trans huge map count ( <ptr> page <dot> <ptr> total map count )
<cls> <noptr> vs pdl list add chain ( <ptr> head <dot> <ptr> dl )
<cls> <noptr> delta recycle default ( <ptr> p ctx <dot> <ptr> frame )
<cls> <noptr> read ahead kb store ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> free unref page list ( <ptr> list )
<cls> <noptr> as fet s bus ctrl ( <ptr> fe <dot> <noptr> acquire )
<cls> <noptr> bt mtk uart tx work ( <ptr> work )
<cls> <noptr> bt tv sub unregister ( <ptr> sub )
<cls> <noptr> collapse huge page ( <ptr> m m <dot> <noptr> address <dot> <dptr> h page <dot> <noptr> node <dot> <noptr> referenced )
<cls> <noptr> tlv aic bs ctrl ( <ptr> ctrl )
<cls> <noptr> camera r x phy disable ( <ptr> ctx )
<cls> <noptr> bt set bit ( <ptr> decoder <dot> <noptr> reg <dot> <noptr> bit <dot> <noptr> value )
<cls> <noptr> sh ve u colour offset ( <ptr> ve u <dot> <ptr> v fmt )
<cls> <noptr> vid ioc venc spar m ( <ptr> file <dot> <ptr> priv <dot> <ptr> a )
<cls> <noptr> ilo write ( <ptr> fp <dot> <ptr> buf <dot> <noptr> len <dot> <ptr> off )
<cls> <noptr> c x d spi read ts buffer info ( <ptr> spi <dot> <ptr> info )
<cls> <noptr> venus boot not z ( <ptr> core <dot> <noptr> mem phys <dot> <noptr> mem size )
<cls> <noptr> e tek reg list cmp ( <ptr> a <dot> <ptr> b )
<cls> <noptr> upd a driver init ( )
<cls> <noptr> mei stop ( <ptr> dev )
<cls> <noptr> soft offline free page ( <ptr> page )
<cls> <noptr> arizona enable free run sys clk ( <ptr> arizona <dot> <ptr> state )
<cls> <noptr> region count ( <ptr> res v <dot> <noptr> f <dot> <noptr> t )
<cls> <noptr> shuffle store ( <ptr> val <dot> <ptr> kp )
<cls> <noptr> snd c x pcm open ( <ptr> sub stream )
<cls> <noptr> or get tune settings ( <ptr> fe <dot> <ptr> fe settings )
<cls> <noptr> mem cg wb domain exit ( <ptr> mem cg )
<cls> <noptr> d ibm read ber ( <ptr> fe <dot> <ptr> ber )
<cls> <noptr> ce u read ( <ptr> priv <dot> <noptr> reg offs )
<cls> <noptr> mark page lazy free ( <ptr> page )
<cls> <noptr> r vin m c enum input ( <ptr> file <dot> <ptr> priv <dot> <ptr> i )
<cls> <noptr> dvb sky init ( <ptr> d )
<cls> <noptr> cio hw init ( <ptr> cio <dot> <ptr> q )
<cls> <noptr> tea status dump ( <ptr> buffer )
<cls> <noptr> mpt spi writer ti ( <ptr> star get <dot> <noptr> rti )
<cls> <noptr> coda isbusy ( <ptr> dev )
<cls> <noptr> cro sec cec set log addr ( <ptr> adap <dot> <noptr> logical addr )
<cls> <noptr> ov start ( <ptr> sd )
<cls> <noptr> cec pin adap log addr ( <ptr> adap <dot> <noptr> log addr )
<cls> <noptr> initialize vp if ( )
<cls> <noptr> t daa check it ( <ptr> chip )
<cls> <noptr> tps x irq sync unlock ( <ptr> data )
<cls> <noptr> ctrl set cfg pre saw ( <ptr> demo d <dot> <ptr> pre saw )
<cls> <noptr> compact lock irq save ( <ptr> lock <dot> <ptr> flags <dot> <ptr> cc )
<cls> <noptr> depth ( <ptr> gsp ca dev )
<cls> <noptr> rct irq set wake ( <ptr> irq data <dot> <noptr> on )
<cls> <noptr> c pia unregister camera ( <ptr> cam )
<cls> <noptr> six x set acquire ( <ptr> fe <dot> <noptr> symb rate <dot> <noptr> crate )
<cls> <noptr> td a xaa gcf ( <ptr> fe )
<cls> <noptr> c xir pci int enable ( <ptr> dev )
<cls> <noptr> f m irq af jump enable int ( <ptr> f m dev )
<cls> <noptr> m unlock vma pages range ( <ptr> vma <dot> <noptr> start <dot> <noptr> end )
<cls> <noptr> ms pro block data clear ( <ptr> msb )
<cls> <ptr> check ctl chg ( )
<cls> <noptr> m xls fic func ( <ptr> adapter )
<cls> <noptr> fdp fmt is rgb ( <ptr> fmt )
<cls> <noptr> ene resume ( <ptr> pnp dev )
<cls> <noptr> k mem cache free ( <ptr> s <dot> <ptr> x )
<cls> <noptr> m c gpio clear ( <ptr> dev <dot> <noptr> mask )
<cls> <noptr> ic write demo d bytes ( <ptr> state <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> z sun map object ( <ptr> area <dot> <ptr> pages <dot> <noptr> off <dot> <noptr> size )
<cls> <noptr> lg dta read status ( <ptr> fe <dot> <ptr> status )
<cls> <noptr> stv x get loop params ( <ptr> state <dot> <ptr> freq inc <dot> <ptr> timeouts w <dot> <ptr> steps )
<cls> <noptr> c x io unmap ( <ptr> dev )
<cls> <noptr> adv ioctl ( <ptr> sd <dot> <noptr> cmd <dot> <ptr> arg )
<cls> <noptr> cade topen ( <ptr> file )
<cls> <noptr> dma pool free ( <ptr> pool <dot> <ptr> v addr <dot> <noptr> dma )
<cls> <noptr> set transfer ( <ptr> chan <dot> <noptr> state )
<cls> <noptr> video buf stream on ( <ptr> q )
<cls> <noptr> af ctrl msg ( <ptr> d <dot> <ptr> req )
<cls> <noptr> msp xx g detect stereo ( <ptr> client )
<cls> <noptr> adv x sw reset ( <ptr> state )
<cls> <noptr> hack r f ctrl msg ( <ptr> dev <dot> <noptr> request <dot> <noptr> value <dot> <noptr> index <dot> <ptr> data <dot> <noptr> size )
<cls> <noptr> ptr to user ( <ptr> c <dot> <ptr> ctrl <dot> <noptr> ptr )
<cls> <noptr> preview config rgb blending ( <ptr> prev <dot> <ptr> params )
<cls> <noptr> v mem map populate base pages ( <noptr> start <dot> <noptr> end <dot> <noptr> node )
<cls> <noptr> gen wq e release ( <ptr> inode <dot> <ptr> filp )
<cls> <noptr> j pus ctrl ( <ptr> ctrl )
<cls> <noptr> sd init controls ( <ptr> gsp ca dev )
<cls> <noptr> fdp set lut ( <ptr> fdp )
<cls> <noptr> l gs gxx get tune settings ( <ptr> fe <dot> <ptr> fe settings )
<cls> <noptr> init r cmap medi on x or x ( )
<cls> <ptr> huge tlb fs page cache page ( <ptr> h <dot> <ptr> vma <dot> <noptr> address )
<cls> <noptr> a speed video d v timings cap ( <ptr> file <dot> <ptr> f h <dot> <ptr> cap )
<cls> <noptr> sec ic get driver data ( <ptr> ic <dot> <ptr> id )
<cls> <noptr> s set voltage ( <ptr> fe <dot> <noptr> voltage )
<cls> <noptr> any see ir ctrl ( <ptr> d <dot> <noptr> onoff )
<cls> <noptr> vs pdu pipeline setup output ( <ptr> vsp <dot> <ptr> pipe )
<cls> <noptr> lookup swap c groupid ( <noptr> ent )
<cls> <noptr> stv x set bb gain ( <ptr> fe <dot> <noptr> gain )
<cls> <noptr> norm max h ( <ptr> dev )
<cls> <noptr> dst gpio in b ( <ptr> state <dot> <ptr> result )
<cls> <ptr> to mtp ( <ptr> sd )
<cls> <noptr> get dma base ( <noptr> idx )
<cls> <noptr> tps reg write ( <ptr> tps <dot> <noptr> reg <dot> <noptr> val <dot> <noptr> level )
<cls> <noptr> m xls get if frequency ( <ptr> fe <dot> <ptr> frequency )
<cls> <noptr> venus probe ( <ptr> pdev )
<cls> <noptr> msm csi phy sub dev init ( <ptr> cam ss <dot> <ptr> csi phy <dot> <ptr> res <dot> <noptr> id )
<cls> <noptr> usb tv select norm ( <ptr> usb tv <dot> <noptr> norm )
<cls> <noptr> c x prepare buffer ( <ptr> q <dot> <ptr> s <dot> <ptr> buf <dot> <noptr> pixel format <dot> <noptr> width <dot> <noptr> height <dot> <noptr> field )
<cls> <noptr> xpc get remote heartbeat uv ( <ptr> part )
<cls> <noptr> dt vic func ( <ptr> adapter )
<cls> <noptr> node map pfn alignment ( )
<cls> <noptr> img ir nec scan code ( <noptr> len <dot> <noptr> raw <dot> <noptr> enabled protocols <dot> <ptr> request )
<cls> <noptr> arizona spi driver exit ( )
<cls> <noptr> count compact event ( <noptr> item )
<cls> <noptr> m cam vid ioc enum frame intervals ( <ptr> filp <dot> <ptr> priv <dot> <ptr> interval )
<cls> <noptr> z l get parameters ( <ptr> fe <dot> <ptr> c )
<cls> <noptr> m i pid get link freq from cid link freq ( <ptr> bridge <dot> <ptr> sub dev )
<cls> <noptr> stv set ts parallel serial ( <ptr> int p <dot> <noptr> path ts <dot> <noptr> path ts )
<cls> <noptr> m cam clk enable ( <ptr> m cam )
<cls> <noptr> st int recv ( <ptr> disc data <dot> <ptr> data <dot> <noptr> count )
<cls> <noptr> m m ols set frame desc ( <ptr> sd <dot> <noptr> pad <dot> <ptr> fd )
<cls> <noptr> h mem stick set rw addr ( <ptr> card <dot> <dptr> m r q )
<cls> <noptr> hack rfs tuner ( <ptr> file <dot> <ptr> priv <dot> <ptr> v )
<cls> <noptr> saa api set dif ( <ptr> port <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> airs pyg frequency ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> mpt spi init target ( <ptr> hd <dot> <ptr> v target <dot> <ptr> s dev )
<cls> <ptr> init z bud page ( <ptr> page )
<cls> <noptr> c cdc init formats ( <ptr> sd <dot> <ptr> f h )
<cls> <noptr> stk set fmt ( <ptr> dev <dot> <ptr> ctrl )
<cls> <noptr> stmp e set bits ( <ptr> stmp e <dot> <noptr> reg <dot> <noptr> mask <dot> <noptr> val )
<cls> <noptr> stv x chk tm g ( <ptr> state )
<cls> <noptr> nova tread mac address ( <ptr> d <dot> <noptr> mac )
<cls> <noptr> set frequency shift er ( <ptr> state <dot> <noptr> intermediate freq khz <dot> <noptr> tuner freq offset <dot> <noptr> is dtv )
<cls> <noptr> tv audio set mode ( <ptr> dev <dot> <ptr> audio <dot> <ptr> note )
<cls> <noptr> c xstream rotate idx m dls ( <ptr> c x )
<cls> <ptr> jpeg get drv data ( <ptr> dev )
<cls> <noptr> dr x d read status ( <ptr> fe <dot> <ptr> status )
<cls> <noptr> initialize c xxx ( <ptr> dev )
<cls> <noptr> vid ioc query d v timings ( <ptr> file <dot> <ptr> f h <dot> <ptr> timings )
<cls> <noptr> get clk rate ( <ptr> h dev <dot> <ptr> args )
<cls> <noptr> m pts as expander event add ( <ptr> ioc <dot> <ptr> expander data )
<cls> <noptr> calculate video dma grab packed ( <ptr> dev <dot> <ptr> buf )
<cls> <noptr> cxx ctrl fill ( <noptr> id <dot> <dptr> name <dot> <ptr> type <dot> <ptr> min <dot> <ptr> max <dot> <ptr> step <dot> <ptr> def <dot> <ptr> flags )
<cls> <noptr> encode handle ( <ptr> z hdr <dot> <ptr> slots <dot> <noptr> bud )
<cls> <ptr> policy node mask ( <noptr> gfp <dot> <ptr> policy )
<cls> <noptr> vid ioc try fmt ( <ptr> f <dot> <ptr> fmt )
<cls> <noptr> c x input ir stop ( <ptr> dev )
<cls> <noptr> sure ad mac address ( <ptr> d <dot> <noptr> mac )
<cls> <noptr> c xxx afe update power control ( <ptr> dev <dot> <noptr> av mode )
<cls> <noptr> ibm asm cancel next event ( <ptr> reader )
<cls> <noptr> vmc i data gram get priv flags ( <noptr> context id <dot> <noptr> handle <dot> <ptr> priv flags )
<cls> <noptr> r ga enable clocks ( <ptr> r ga )
<cls> <noptr> sec oce c adap enable ( <ptr> adap <dot> <noptr> enable )
<cls> <noptr> ptic func ( <ptr> adap )
<cls> <noptr> mcs release ( <ptr> fe )
<cls> <noptr> iv tv g tuner ( <ptr> file <dot> <ptr> f h <dot> <ptr> vt )
<cls> <noptr> planar pto yuv packed ( <ptr> in <dot> <ptr> out <dot> <noptr> width <dot> <noptr> height <dot> <noptr> fmt )
<cls> <noptr> sa aic transfer ( <ptr> dev <dot> <ptr> msgs <dot> <noptr> num <dot> <noptr> retries )
<cls> <noptr> aver media tv phone audio ( <ptr> b tv <dot> <ptr> t <dot> <noptr> set )
<cls> <noptr> unmap device va ( <ptr> ctx <dot> <noptr> v addr <dot> <noptr> ctx free )
<cls> <noptr> kemp ld exit ( )
<cls> <noptr> cod as fmt vid out ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> td a set tv norm ( <ptr> fe )
<cls> <noptr> make black object ( <noptr> ptr )
<cls> <noptr> usb tv buf queue ( <ptr> vb )
<cls> <noptr> adv xx g volatile ctrl ( <ptr> ctrl )
<cls> <noptr> l gs read signal strength ( <ptr> priv <dot> <ptr> signal )
<cls> <noptr> sa aic unregister ( <ptr> dev )
<cls> <dptr> check c point type ( )
<cls> <noptr> se compat sys get mem policy ( <ptr> policy <dot> <ptr> n mask <dot> <noptr> max node <dot> <noptr> addr <dot> <noptr> flags )
<cls> <noptr> pkcs free signed info ( <ptr> sinfo )
<cls> <noptr> arizona ic probe ( <ptr> ic <dot> <ptr> id )
<cls> <noptr> cec open ( <ptr> inode <dot> <ptr> filp )
<cls> <noptr> snd solo capture volume put ( <ptr> k control <dot> <ptr> value )
<cls> <noptr> media dev node init ( )
<cls> <noptr> dst read status ( <ptr> fe <dot> <ptr> status )
<cls> <noptr> mmu notifier clear young ( <ptr> m m <dot> <noptr> start <dot> <noptr> end )
<cls> <noptr> em xx dvb resume ( <ptr> dev )
<cls> <noptr> vim c remove ( <ptr> pdev )
<cls> <noptr> bts std ( <ptr> sd <dot> <noptr> std )
<cls> <noptr> i css detect ( <ptr> client <dot> <ptr> info )
<cls> <noptr> m cam reset buffers ( <ptr> cam )
<cls> <noptr> tps x writes ( <ptr> dev <dot> <noptr> reg <dot> <noptr> len <dot> <ptr> val )
<cls> <noptr> h aaf get buf size ( <ptr> conf )
<cls> <noptr> unmap single vma ( <ptr> tlb <dot> <ptr> vma <dot> <noptr> start addr <dot> <noptr> end addr <dot> <ptr> details )
<cls> <noptr> hack r f enum fmt sdr ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> vm munmap ( <noptr> start <dot> <noptr> len <dot> <noptr> downgrade )
<cls> <ptr> check for cel na activation ( )
<cls> <noptr> m pts as init ( )
<cls> <noptr> c sit x d phy setup ( <ptr> c sit x )
<cls> <noptr> tps voltage set u vh yst ( <ptr> tps )
<cls> <noptr> get mac tt ( <ptr> decoded mac <dot> <ptr> encoded mac )
<cls> <noptr> ic slave did write ack ( <ptr> ic adap )
<cls> <noptr> x c set analog freq ( <ptr> fe <dot> <ptr> p )
<cls> <noptr> ov xs frame interval ( <ptr> sd <dot> <ptr> ival )
<cls> <noptr> reg w ( <noptr> val <dot> <noptr> offset )
<cls> <noptr> mode t to package ( <ptr> go <dot> <ptr> code <dot> <noptr> space )
<cls> <noptr> b h detect ( <ptr> chip )
<cls> <noptr> hl get frequency ( <ptr> h dev <dot> <noptr> pll index <dot> <noptr> curr )
<cls> <noptr> frag stop ( <ptr> m <dot> <ptr> arg )
<cls> <noptr> free vbs ( <ptr> ctx )
<cls> <noptr> ddb redirect dma ( <ptr> dev <dot> <ptr> s dma <dot> <ptr> d dma )
<cls> <noptr> h init ( )
<cls> <noptr> tea powerup ( <ptr> radio )
<cls> <noptr> rc keyup ( <ptr> dev )
<cls> <noptr> c x d get front end algo ( <ptr> fe )
<cls> <noptr> f m r x get region ( <ptr> f m dev <dot> <ptr> region )
<cls> <noptr> wl f m get freq ( <ptr> radio )
<cls> <noptr> noon get fmt ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> fmt )
<cls> <noptr> x c get frequency error ( <ptr> priv <dot> <ptr> freq error hz )
<cls> <noptr> m ptr aid phys disk get num paths ( <ptr> ioc <dot> <noptr> phys disk num )
<cls> <ptr> check pad thresh ( )
<cls> <noptr> mic free interrupts ( <ptr> m dev <dot> <ptr> pdev )
<cls> <noptr> m cam vid io cs fmt vid cap ( <ptr> filp <dot> <ptr> priv <dot> <ptr> fmt )
<cls> <noptr> c x g register ( <ptr> file <dot> <ptr> f h <dot> <ptr> reg )
<cls> <noptr> swap cgroup record ( <noptr> ent <dot> <noptr> id <dot> <noptr> n rents )
<cls> <ptr> go y a get event desc ( <noptr> event type )
<cls> <noptr> as cote ic debug ( <ptr> priv <dot> <noptr> reg <dot> <noptr> write <dot> <ptr> data <dot> <noptr> len )
<cls> <noptr> ctrl clear dirty volume ( <ptr> cptr )
<cls> <ptr> v levent subscribed ( <ptr> f h <dot> <noptr> type <dot> <noptr> id )
<cls> <noptr> wms clock freq ( <ptr> sd <dot> <noptr> audio freq )
<cls> <noptr> freep mds ( <ptr> m m <dot> <ptr> p mds <dot> <noptr> count )
<cls> <noptr> go y a stop queue ( <ptr> h dev <dot> <noptr> cfg reg <dot> <noptr> cp sts reg <dot> <noptr> g lbl sts reg )
<cls> <noptr> cec queue pin cec event ( <ptr> adap <dot> <noptr> is high <dot> <noptr> dropped events <dot> <noptr> ts )
<cls> <noptr> lg dta tune ( <ptr> fe <dot> <noptr> retun e <dot> <noptr> mode flags <dot> <ptr> delay <dot> <ptr> status )
<cls> <ptr> check invert ( )
<cls> <noptr> e z x pcap set bits ( <ptr> pcap <dot> <noptr> reg num <dot> <noptr> mask <dot> <noptr> val )
<cls> <noptr> mpt free msg frame ( <ptr> ioc <dot> <ptr> m f )
<cls> <noptr> c x process vb i data ( <ptr> c x <dot> <ptr> mdl <dot> <noptr> stream type )
<cls> <noptr> h bt rtl repro be worker ( <ptr> work )
<cls> <noptr> mtk mdp comp deinit ( <ptr> dev <dot> <ptr> comp )
<cls> <noptr> dib p set wb d ref ( <ptr> demo d <dot> <noptr> value )
<cls> <noptr> venus iface cmd q write nolock ( <ptr> h dev <dot> <ptr> pkt )
<cls> <noptr> fim c ctrls activate ( <ptr> ctx <dot> <noptr> active )
<cls> <noptr> dib preset pll ( <ptr> state )
<cls> <noptr> ves x read signal strength ( <ptr> fe <dot> <ptr> strength )
<cls> <noptr> ca get app info ( <ptr> state )
<cls> <noptr> vb queue cancel ( <ptr> q )
<cls> <noptr> exy nos noc p remove ( <ptr> pdev )
<cls> <noptr> nv thw detect ( <ptr> nv t )
<cls> <noptr> ag p free memory wrap ( <ptr> memory )
<cls> <noptr> saa x decode vb i line ( <ptr> sd <dot> <ptr> vb i )
<cls> <noptr> teas ctrl ( <ptr> ctrl )
<cls> <noptr> do percent ( <noptr> val <dot> <noptr> pct )
<cls> <noptr> page block skip persistent ( <ptr> page )
<cls> <noptr> cobalt xfer ( <ptr> adap <dot> <noptr> msgs <dot> <noptr> num )
<cls> <noptr> cade t probe ( <ptr> dev )
<cls> <noptr> c x get tps ( <ptr> state <dot> <ptr> p )
<cls> <noptr> max debug status ( <ptr> priv )
<cls> <noptr> f trace profile free filter ( <ptr> event )
<cls> <noptr> fim c cap stream on ( <ptr> file <dot> <ptr> priv <dot> <noptr> type )
<cls> <noptr> send pulse ( <noptr> len )
<cls> <noptr> l gs gxx set fe ( <ptr> fe )
<cls> <noptr> mrs get m clk ( <ptr> fe )
<cls> <noptr> sa atv audio init ( <ptr> dev )
<cls> <noptr> dcm is parm ( <ptr> file <dot> <ptr> priv <dot> <ptr> p )
<cls> <noptr> ccd csb l busy ( <ptr> c cdc )
<cls> <noptr> free task ( <ptr> tsk )
<cls> <noptr> tp g gen text ( <ptr> tp g <dot> <ptr> base p <dot> <noptr> y <dot> <noptr> x <dot> <ptr> text )
<cls> <noptr> v fe output frame drop ( <ptr> v fe <dot> <ptr> output <dot> <noptr> drop pattern )
<cls> <noptr> c x reset ( <ptr> sd <dot> <noptr> val )
<cls> <noptr> enc post seq start ( <ptr> ctx )
<cls> <noptr> dev node find ( <ptr> v dev <dot> <noptr> from <dot> <noptr> to )
<cls> <noptr> au copy video ( <ptr> dev <dot> <ptr> dma q <dot> <ptr> buf <dot> <ptr> p <dot> <ptr> out p <dot> <noptr> len )
<cls> <noptr> af get adapter count ( <ptr> d )
<cls> <noptr> mtk mdp remove ( <ptr> pdev )
<cls> <noptr> sp mfc close inst cmd v ( <ptr> ctx )
<cls> <noptr> generic file direct write ( <ptr> ioc b <dot> <ptr> from )
<cls> <noptr> go y a disable external queues ( <ptr> h dev )
<cls> <noptr> sci f release dev ( <ptr> d )
<cls> <noptr> c x der reads nrc ( <ptr> priv <dot> <ptr> snr )
<cls> <noptr> v map vt release ( <ptr> ref )
<cls> <noptr> solo gpio init ( <ptr> solo dev )
<cls> <noptr> me ime cl put ( <ptr> m ecl )
<cls> <noptr> d ibm b release ( <ptr> fe )
<cls> <noptr> dib p cfg gpio ( <ptr> st <dot> <noptr> num <dot> <noptr> dir <dot> <noptr> val )
<cls> <noptr> get pcp page migrate type ( <ptr> page )
<cls> <noptr> l gdt read snr ( <ptr> fe )
<cls> <noptr> mem c groups k alloc ( <ptr> sk )
<cls> <noptr> swap count ( <noptr> ent )
<cls> <noptr> test mgr free buf ( <ptr> buf )
<cls> <noptr> show output ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> ov remove ( <ptr> client )
<cls> <noptr> get key m sit v anywhere plus ( <ptr> ir <dot> <ptr> protocol <dot> <ptr> scan code <dot> <ptr> toggle )
<cls> <ptr> unstable tree search insert ( <ptr> r map item <dot> <ptr> page <dot> <dptr> tree page p )
<cls> <noptr> vp if probe complete ( )
<cls> <noptr> csi init entities ( <ptr> csi )
<cls> <noptr> hl hw m oninit ( <ptr> h dev )
<cls> <ptr> check e sno snr ( )
<cls> <noptr> mtk jpeg dec enum result ( <noptr> irq result )
<cls> <ptr> stv x attach ( <ptr> config <dot> <ptr> ic <dot> <noptr> demo d )
<cls> <noptr> c xdd v bt tune ( <ptr> tn r dmd <dot> <ptr> tune param )
<cls> <noptr> c x dt nr dmd set l nat hrs ( <ptr> tn r dmd <dot> <ptr> tbl air <dot> <ptr> tbl cable )
<cls> <noptr> dib ic write ( <ptr> ic <dot> <noptr> reg <dot> <noptr> val )
<cls> <ptr> check no init ( )
<cls> <noptr> afc ex dataset ( <ptr> state <dot> <noptr> afc exl <dot> <noptr> afc exh )
<cls> <noptr> mtk jpeg calc dst size ( <ptr> param )
<cls> <noptr> gru invalidate range start ( <ptr> mn <dot> <ptr> range )
<cls> <noptr> pt resume ( <ptr> dev )
<cls> <noptr> coda approximate time per frame ( <ptr> time per frame )
<cls> <ptr> mtk mdp m m buf remove ( <ptr> ctx <dot> <noptr> type )
<cls> <noptr> shmem unused huge count ( <ptr> sb <dot> <ptr> sc )
<cls> <noptr> as start stream ( <ptr> dev )
<cls> <noptr> ibm asm event reader unregister ( <ptr> sp <dot> <ptr> reader )
<cls> <noptr> bpf rc key down ( <ptr> sample <dot> <noptr> protocol <dot> <noptr> scan code <dot> <noptr> toggle )
<cls> <noptr> c x g fmt vb icap ( <ptr> file <dot> <ptr> f h <dot> <ptr> fmt )
<cls> <noptr> fim c lite sub dev set selection ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> sel )
<cls> <noptr> mtm video probe ( <ptr> client )
<cls> <noptr> x ten ted ( <ptr> state <dot> <ptr> regs )
<cls> <noptr> cosm shutdown ( <ptr> c dev )
<cls> <ptr> to state ( <ptr> sd )
<cls> <noptr> px a camera dma irq u ( <ptr> data )
<cls> <noptr> h bt rtl setup ( <ptr> h )
<cls> <noptr> mtk venc worker ( <ptr> work )
<cls> <noptr> aio free ring ( <ptr> ctx )
<cls> <noptr> stmp e init ( )
<cls> <noptr> igor plug usb probe ( <ptr> int f <dot> <ptr> id )
<cls> <noptr> ves sleep ( <ptr> fe )
<cls> <noptr> vma link ( <ptr> m m <dot> <ptr> vma <dot> <ptr> prev <dot> <dptr> rb link <dot> <ptr> rb parent )
<cls> <noptr> preview try crop ( <ptr> prev <dot> <ptr> sink <dot> <ptr> crop )
<cls> <noptr> fim c ish w set sensor num ( <ptr> is )
<cls> <noptr> c x mdl sendto video buf ( <ptr> s <dot> <ptr> mdl )
<cls> <noptr> sh send master cmd ( <ptr> fe <dot> <ptr> cmd )
<cls> <noptr> suic transfer ( <ptr> adap <dot> <noptr> msg <dot> <noptr> num )
<cls> <noptr> mtm g volatile ctrl ( <ptr> ctrl )
<cls> <noptr> v dec start capture ( <ptr> inst )
<cls> <noptr> bdx xic exit ( )
<cls> <noptr> z pool put driver ( <ptr> driver )
<cls> <noptr> six core config pin mux ( <ptr> core )
<cls> <noptr> mpt ctl mpt command ( <ptr> ioc <dot> <noptr> arg )
<cls> <noptr> timber dale pci driver init ( )
<cls> <noptr> file map f data wait keep errors ( <ptr> mapping )
<cls> <noptr> x vt c generator stop ( <ptr> x vt c )
<cls> <noptr> gds ctrl ( <ptr> ctrl )
<cls> <noptr> xpc send ch ctl open request uv ( <ptr> ch <dot> <ptr> irq flags )
<cls> <noptr> fim c lite suspend ( <ptr> dev )
<cls> <ptr> sd to ska ( <ptr> sd )
<cls> <noptr> saa api dump sub devs ( <ptr> dev <dot> <ptr> buf <dot> <noptr> len )
<cls> <ptr> vsp video pipeline get ( <ptr> video )
<cls> <noptr> z l get tune settings ( <ptr> fe <dot> <ptr> fet une settings )
<cls> <noptr> vmc i host do q p detach ( <ptr> vmc i host dev <dot> <ptr> ioctl name <dot> <ptr> u ptr )
<cls> <noptr> p xps fmt vid out ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> mei hbm stop req ( <ptr> dev )
<cls> <noptr> huge tlb sysfs add h state ( <ptr> h <dot> <ptr> parent <dot> <dptr> h state k objs <dot> <ptr> h state attr group )
<cls> <ptr> to mtm ( <ptr> client )
<cls> <noptr> mpt lan init ( )
<cls> <ptr> check adjust xoffset ( )
<cls> <noptr> iloc cb verify ( <ptr> hw <dot> <ptr> data )
<cls> <noptr> free h page work fn ( <ptr> work )
<cls> <noptr> on figur ation ( <ptr> state <dot> <noptr> frequency <dot> <noptr> standard )
<cls> <noptr> vi u poll ( <ptr> file <dot> <ptr> wait )
<cls> <noptr> b h get prox rate avail ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> me it xe read hdr ( <ptr> dev )
<cls> <noptr> gl tuner attach ( <ptr> adap )
<cls> <noptr> r clear interrupts ( <ptr> dev )
<cls> <noptr> bt mtk uart func query ( <ptr> h dev )
<cls> <noptr> td a read signal strength ( <ptr> fe <dot> <ptr> signal strength )
<cls> <noptr> c cdc config csc ( <ptr> csc )
<cls> <noptr> se sys pkey mprotect ( <noptr> start <dot> <noptr> len <dot> <noptr> prot <dot> <noptr> pkey )
<cls> <noptr> v l pix format touch ( <ptr> p )
<cls> <ptr> mtk venc get q data ( <ptr> ctx <dot> <noptr> type )
<cls> <noptr> ov set ctrl v flip ( <ptr> sensor <dot> <noptr> value )
<cls> <noptr> c xs fmt vb icap ( <ptr> file <dot> <ptr> f h <dot> <ptr> fmt )
<cls> <noptr> zap page range ( <ptr> vma <dot> <noptr> start <dot> <noptr> size )
<cls> <noptr> c xxx dev un init ( <ptr> dev )
<cls> <noptr> via cam config controller ( <ptr> cam )
<cls> <ptr> shmem get parent ( <ptr> child )
<cls> <noptr> dvb usb v init ( <ptr> d )
<cls> <noptr> vp add tof b disp list ( <ptr> inst <dot> <ptr> fb )
<cls> <noptr> z sobject copy ( <ptr> class <dot> <noptr> dst <dot> <noptr> src )
<cls> <noptr> max read rom ( <ptr> ctx <dot> <noptr> row )
<cls> <noptr> v pe remove ( <ptr> pdev )
<cls> <noptr> m tt power on ( <ptr> m tt )
<cls> <noptr> do munmap ( <ptr> m m <dot> <noptr> start <dot> <noptr> len <dot> <ptr> u f <dot> <noptr> downgrade )
<cls> <noptr> cec gpio read ( <ptr> adap )
<cls> <noptr> c x usb l gh f tuner attach ( <ptr> adap )
<cls> <noptr> move free pages block ( <ptr> zone <dot> <ptr> page <dot> <noptr> migrate type <dot> <ptr> num movable )
<cls> <noptr> v pfe stream off ( <ptr> file <dot> <ptr> priv <dot> <noptr> buf type )
<cls> <noptr> me so nao cec read ( <ptr> ao cec <dot> <noptr> address <dot> <ptr> data <dot> <ptr> res )
<cls> <ptr> to v pfe buffer ( <ptr> vb )
<cls> <noptr> adp clr bits ( <ptr> dev <dot> <noptr> reg <dot> <noptr> bit mask )
<cls> <noptr> ext queue init ( <ptr> h dev <dot> <ptr> q )
<cls> <ptr> tt usb dec fed vbs attach ( <ptr> config )
<cls> <noptr> do fault around ( <ptr> vm f )
<cls> <noptr> c xdr remove ( <ptr> client )
<cls> <noptr> altera check crc ( <ptr> p <dot> <noptr> program size )
<cls> <noptr> six core has diversity ( <ptr> core )
<cls> <noptr> d m start feed ( <ptr> f )
<cls> <noptr> pm ics pmi driver exit ( )
<cls> <noptr> isc buffer prepare ( <ptr> vb )
<cls> <noptr> solo vin config ( <ptr> solo dev )
<cls> <noptr> h aaf ioctl ( <ptr> sd <dot> <noptr> cmd <dot> <ptr> arg )
<cls> <noptr> pvr hd wget detected std ( <ptr> h dw )
<cls> <noptr> alco rpc i asp m ctrl ( <ptr> priv <dot> <noptr> asp m enable )
<cls> <noptr> vid ioc g d v timings ( <ptr> file <dot> <ptr> f h <dot> <ptr> timings )
<cls> <noptr> test pages ina zone ( <noptr> start pfn <dot> <noptr> end pfn <dot> <ptr> valid start <dot> <ptr> valid end )
<cls> <ptr> check cache flush timeout ( )
<cls> <noptr> vsp wpf set rotation ( <ptr> wpf <dot> <noptr> rotation )
<cls> <noptr> shmem reconfigure ( <ptr> fc )
<cls> <noptr> c x d pre bit err t ( <ptr> tn r dmd <dot> <ptr> pre bit err <dot> <ptr> pre bit count )
<cls> <noptr> da volatile reg ( <ptr> dev <dot> <noptr> reg )
<cls> <noptr> h fi session get seq hdr done ( <ptr> core <dot> <ptr> inst <dot> <ptr> packet )
<cls> <noptr> update checksum ( <ptr> object )
<cls> <noptr> blacklist ( <ptr> cl dev )
<cls> <noptr> bt xx dst init ( <ptr> fe )
<cls> <ptr> vsp video remote sub dev ( <ptr> local <dot> <ptr> pad )
<cls> <noptr> at get offset adj ( <noptr> flags <dot> <noptr> byte len )
<cls> <noptr> j pu write ( <ptr> j pu <dot> <noptr> val <dot> <noptr> reg )
<cls> <noptr> ves x read uc blocks ( <ptr> fe <dot> <ptr> uc blocks )
<cls> <noptr> c x expand service set ( <ptr> fmt <dot> <noptr> is pal )
<cls> <noptr> uvc ioctl default ( <ptr> file <dot> <ptr> f h <dot> <noptr> valid prio <dot> <noptr> cmd <dot> <ptr> arg )
<cls> <noptr> rem app d range ( <ptr> m m <dot> <ptr> pgd <dot> <noptr> addr <dot> <noptr> end <dot> <noptr> pfn <dot> <noptr> prot )
<cls> <noptr> de interlace open ( <ptr> file )
<cls> <noptr> upd a remove ( <ptr> client )
<cls> <noptr> kas an un poison stack ( <ptr> task <dot> <ptr> sp )
<cls> <noptr> cxx xic recv bytes ( <ptr> ic adap <dot> <ptr> msg )
<cls> <noptr> mbus init ( )
<cls> <noptr> dib set front end ( <ptr> fe )
<cls> <noptr> adv xx cec isr ( <ptr> sd <dot> <ptr> handled )
<cls> <noptr> ctrl isdirty balance ( <ptr> cptr )
<cls> <noptr> gov l remove ( <ptr> go )
<cls> <noptr> do sys brk ( <noptr> brk )
<cls> <noptr> fdp probe ( <ptr> pdev )
<cls> <noptr> vsp video open ( <ptr> file )
<cls> <noptr> pm irq block handler ( <ptr> chip <dot> <noptr> master <dot> <noptr> block )
<cls> <noptr> bcm tuner cmd ( <ptr> st <dot> <noptr> bc <dot> <noptr> n <dot> <noptr> a )
<cls> <noptr> td a set symbol rate ( <ptr> state <dot> <ptr> fe params )
<cls> <noptr> irl irc raw event ( <ptr> dev <dot> <noptr> ev )
<cls> <noptr> deactivate file page ( <ptr> page )
<cls> <noptr> is i try fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> m dump bridge ( <ptr> sd )
<cls> <noptr> t dax do upload ( <ptr> state <dot> <ptr> mem <dot> <noptr> len <dot> <noptr> dsp code counter reg <dot> <noptr> dsp code in reg )
<cls> <ptr> media create int flink ( <ptr> entity <dot> <ptr> int f <dot> <noptr> flags )
<cls> <noptr> sci f dev remove ( <ptr> d )
<cls> <noptr> lg dta set reg bit ( <ptr> state <dot> <noptr> reg <dot> <noptr> bit <dot> <noptr> onoff )
<cls> <noptr> omap is pcs i phy config ( <ptr> phy )
<cls> <noptr> v l video std enum std ( <ptr> vs <dot> <noptr> id )
<cls> <noptr> e tek dev init ( <ptr> sub dev )
<cls> <noptr> enum fmt ( <ptr> f <dot> <noptr> type )
<cls> <noptr> v l sub dev free pad config ( <ptr> cfg )
<cls> <noptr> coda decode timeout ( <ptr> ctx )
<cls> <ptr> mem cgroup page lru vec ( <ptr> page <dot> <ptr> pg dat )
<cls> <ptr> to saa ( <ptr> sd )
<cls> <noptr> f crc cal reset ( <ptr> fe )
<cls> <noptr> register format ( <noptr> format <dot> <noptr> formats <dot> <ptr> nb of formats )
<cls> <noptr> isp video start streaming ( <ptr> queue <dot> <noptr> count )
<cls> <noptr> skb af set selection ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> sel )
<cls> <noptr> vlc rop cap ( <ptr> ops <dot> <ptr> file <dot> <ptr> f h <dot> <ptr> arg )
<cls> <noptr> vmc i host do recv not ifications ( <ptr> vmc i host dev <dot> <ptr> ioctl name <dot> <ptr> u ptr )
<cls> <noptr> fin tek probe ( <ptr> pdev <dot> <ptr> devid )
<cls> <noptr> ctrl v res min get ( <ptr> cptr <dot> <ptr> vp )
<cls> <noptr> stop streaming ( <ptr> v q )
<cls> <noptr> t dax o a gcf ( <ptr> fe )
<cls> <noptr> m tt get selection ( <ptr> sub dev <dot> <ptr> cfg <dot> <ptr> sel )
<cls> <noptr> sp mfc write info v ( <ptr> ctx <dot> <noptr> data <dot> <noptr> ofs )
<cls> <noptr> am gxx setup ( <ptr> data )
<cls> <noptr> split huge zero page pmd ( <ptr> vma <dot> <noptr> h addr <dot> <ptr> pmd )
<cls> <noptr> ln b h read v mon ( <ptr> priv )
<cls> <noptr> l pread multi bytes ( <ptr> lp <dot> <noptr> reg <dot> <ptr> data <dot> <noptr> count )
<cls> <noptr> list lru add ( <ptr> lru <dot> <ptr> item )
<cls> <noptr> unlink va ( <ptr> va <dot> <ptr> root )
<cls> <ptr> tos dev ( <ptr> v l dev )
<cls> <noptr> dtv property legacy params sync ( <ptr> fe <dot> <ptr> c <dot> <ptr> p )
<cls> <noptr> is ifconfig ycbcr ( )
<cls> <noptr> pwc iso free ( <ptr> pdev )
<cls> <noptr> uvc video suspend ( <ptr> stream )
<cls> <noptr> if os ( <ptr> ioc )
<cls> <noptr> expand stack ( <ptr> vma <dot> <noptr> address )
<cls> <noptr> m tt reg write ( <ptr> client <dot> <noptr> command <dot> <noptr> data )
<cls> <noptr> coda is initialized ( <ptr> dev )
<cls> <noptr> sram add partition ( <ptr> sram <dot> <ptr> block <dot> <noptr> start )
<cls> <noptr> mem cgroup move account ( <ptr> page <dot> <noptr> compound <dot> <ptr> from <dot> <ptr> to )
<cls> <noptr> stk v lvm close ( <ptr> vma )
<cls> <noptr> scc am if driver init ( )
<cls> <noptr> mci write memory to gpio ( <ptr> dev <dot> <noptr> address <dot> <noptr> value <dot> <ptr> p fw image )
<cls> <noptr> td a xsd v timings ( <ptr> sd <dot> <ptr> timings )
<cls> <noptr> calculate total reserve pages ( )
<cls> <noptr> rite ( <ptr> state <dot> <noptr> reg <dot> <noptr> data <dot> <noptr> flags )
<cls> <noptr> snd usb tv pointer ( <ptr> sub stream )
<cls> <noptr> tt pci budget deb i write ( <ptr> budget <dot> <noptr> config <dot> <noptr> addr <dot> <noptr> count <dot> <noptr> value <dot> <noptr> use locks <dot> <noptr> no busy loop )
<cls> <noptr> bts dio driver exit ( )
<cls> <noptr> pt lock cache init ( )
<cls> <noptr> v l m m prepare buf ( <ptr> file <dot> <ptr> m mctx <dot> <ptr> buf )
<cls> <noptr> high pll show ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> sun i video stop streaming ( <ptr> v q )
<cls> <noptr> collapse huge page swap in ( <ptr> m m <dot> <ptr> vma <dot> <noptr> address <dot> <ptr> pmd <dot> <noptr> referenced )
<cls> <noptr> write ic reg vals ( <ptr> sd <dot> <ptr> reg vals <dot> <noptr> n )
<cls> <noptr> nxt x read ber ( <ptr> fe <dot> <ptr> ber )
<cls> <noptr> big key free pre parse ( <ptr> prep )
<cls> <noptr> sq command ( <ptr> gsp ca dev <dot> <noptr> index )
<cls> <noptr> for base b and ( <ptr> dev )
<cls> <noptr> tt usb free is our bs ( <ptr> tt usb )
<cls> <noptr> dr x d init ( <ptr> fe )
<cls> <noptr> uc bus write ( <ptr> gsp ca dev <dot> <ptr> cmd <dot> <noptr> n cmds <dot> <noptr> batch size )
<cls> <noptr> dvb dmx sw filter ( <ptr> demux <dot> <ptr> buf <dot> <noptr> count <dot> <noptr> pkt size )
<cls> <noptr> mic get family ( <ptr> pdev )
<cls> <noptr> rgb ycbcr ( <noptr> m <dot> <noptr> r <dot> <noptr> g <dot> <noptr> b <dot> <noptr> yoffset <dot> <ptr> y <dot> <ptr> cb <dot> <ptr> cr )
<cls> <noptr> adv cec adap enable ( <ptr> adap <dot> <noptr> enable )
<cls> <noptr> init r cmap his i pop lar ( )
<cls> <ptr> v l async find sub dev notifier ( <ptr> sd )
<cls> <noptr> me ime h c bww write ( <ptr> dev <dot> <noptr> data )
<cls> <noptr> wb domain exit ( <ptr> dom )
<cls> <noptr> philip stu tuner init ( <ptr> fe )
<cls> <noptr> ic block read ( <ptr> stmp e <dot> <noptr> reg <dot> <noptr> length <dot> <ptr> values )
<cls> <noptr> tps ic remove ( <ptr> client )
<cls> <noptr> eeprom xx ew ( <ptr> e dev <dot> <noptr> ison )
<cls> <noptr> l gs gxx is auto detect finished ( <ptr> priv <dot> <ptr> finished )
<cls> <noptr> dev freq power save init ( )
<cls> <noptr> stv set front end ( <ptr> fe )
<cls> <noptr> adp write ( <ptr> client <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> dmx clear w bl overflow ( <noptr> w bl sel )
<cls> <noptr> vb init file io ( <ptr> q <dot> <noptr> read )
<cls> <noptr> net up uni dvb poll c is lot status ( <ptr> en <dot> <noptr> slot <dot> <noptr> open )
<cls> <noptr> c x dt nr dmd diver create ( <ptr> tn r dmd main <dot> <ptr> io main <dot> <ptr> tn r dmd sub <dot> <ptr> io sub <dot> <ptr> create param )
<cls> <noptr> page set set high ( <ptr> p <dot> <noptr> high )
<cls> <noptr> set vma res v flags ( <ptr> vma <dot> <noptr> flags )
<cls> <noptr> qos min notifier call ( <ptr> nb <dot> <noptr> val <dot> <ptr> ptr )
<cls> <noptr> fim c ish w close sensor ( <ptr> is <dot> <noptr> index )
<cls> <noptr> sms board setup ( <ptr> core dev )
<cls> <noptr> rtl sdr kill urb s ( <ptr> dev )
<cls> <noptr> put page ( <ptr> page )
<cls> <noptr> rav esp default cmd translate ( <noptr> command )
<cls> <noptr> csl patch ( <ptr> arizona )
<cls> <noptr> venc isr ( <noptr> irq <dot> <ptr> arg )
<cls> <noptr> m pts asf w event off ( <ptr> ioc )
<cls> <noptr> c x init ts port ( <ptr> dev <dot> <ptr> port <dot> <noptr> portno )
<cls> <noptr> d notify free mark ( <ptr> f sn mark )
<cls> <noptr> handle m m fault ( <ptr> vma <dot> <noptr> address <dot> <noptr> flags )
<cls> <noptr> m sig frequency ( <ptr> sd <dot> <ptr> f )
<cls> <noptr> v levent queue ( <ptr> v dev <dot> <ptr> ev )
<cls> <ptr> coda find nal header ( <ptr> buf <dot> <ptr> end )
<cls> <noptr> ctx clear notify ( <ptr> context )
<cls> <noptr> btc hci close ( <ptr> h dev )
<cls> <noptr> sh ve u stream init ( <ptr> ve u <dot> <ptr> ve u file <dot> <noptr> type )
<cls> <ptr> rcs i code to fmt ( <noptr> code )
<cls> <noptr> iv tv yuv filter ( <ptr> it v <dot> <noptr> h filter <dot> <noptr> v filter <dot> <noptr> v filter )
<cls> <ptr> to c x hdl ( <ptr> ctrl )
<cls> <noptr> exy nos jpeg sub sampling mode ( <ptr> regs <dot> <noptr> mode )
<cls> <noptr> twe num fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> filter irq stacks ( <ptr> entries <dot> <noptr> nr entries )
<cls> <noptr> ener x disable hw ( <ptr> dev )
<cls> <noptr> os d set cbc r order ( <ptr> sd <dot> <noptr> pix fmt )
<cls> <noptr> dr x kic transfer ( <ptr> state <dot> <ptr> msgs <dot> <noptr> len )
<cls> <noptr> rts a switch output voltage ( <ptr> pcr <dot> <noptr> voltage )
<cls> <noptr> device woke up ( <ptr> hu )
<cls> <noptr> six radios ctrl ( <ptr> ctrl )
<cls> <noptr> k huge paged find target node ( )
<cls> <ptr> check audio mux ( )
<cls> <noptr> solo vlc hex tup ( <ptr> solo dev <dot> <noptr> idx <dot> <noptr> on )
<cls> <noptr> video mux remove ( <ptr> pdev )
<cls> <noptr> stm f x irq bus sync unlock ( <ptr> data )
<cls> <noptr> find slot ( <ptr> array <dot> <noptr> size <dot> <noptr> val )
<cls> <noptr> uvc endpoint max bpi ( <ptr> dev <dot> <ptr> ep )
<cls> <noptr> vb queue or prepare buf ( <ptr> q <dot> <ptr> m dev <dot> <ptr> b <dot> <noptr> is prepare <dot> <dptr> preq )
<cls> <noptr> iv tv stop ( <ptr> it v )
<cls> <noptr> sh ve u probe ( <ptr> pdev )
<cls> <noptr> should skip region ( <ptr> m <dot> <noptr> nid <dot> <noptr> flags )
<cls> <noptr> break cow ( <ptr> r map item )
<cls> <noptr> isp videos input ( <ptr> file <dot> <ptr> f h <dot> <noptr> input )
<cls> <noptr> usb vision initi soc ( <ptr> usb vision )
<cls> <noptr> six radio dopost powerup init ( <ptr> radio <dot> <noptr> func )
<cls> <noptr> v l m m schedule next job ( <ptr> m m dev <dot> <ptr> m mctx )
<cls> <noptr> ce u notify complete ( <ptr> notifier )
<cls> <noptr> gru get cb exception detail ( <ptr> cb <dot> <ptr> exc det )
<cls> <noptr> mantis ca read cam ctl ( <ptr> en <dot> <noptr> slot <dot> <noptr> addr )
<cls> <noptr> a zci init ( <ptr> a )
<cls> <noptr> sci f recv mark ( <ptr> sci f dev <dot> <ptr> msg )
<cls> <noptr> ati remote rc init ( <ptr> ati remote )
<cls> <noptr> wpf configure partition ( <ptr> entity <dot> <ptr> pipe <dot> <ptr> dl <dot> <ptr> dl b )
<cls> <noptr> d dcb cmd cleanup ( <ptr> c file <dot> <ptr> req )
<cls> <noptr> l gs gxx wait ca lock ( <ptr> priv <dot> <ptr> locked )
<cls> <noptr> aum ses nr lookup ( <ptr> tab <dot> <noptr> sz <dot> <noptr> mse <dot> <ptr> snr )
<cls> <noptr> isset init is paa ( <ptr> is )
<cls> <noptr> coda queue init ( <ptr> ctx <dot> <ptr> v q )
<cls> <noptr> tvp enum mbus code ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> code )
<cls> <noptr> v pu enc send msg ( <ptr> v pu <dot> <ptr> msg <dot> <noptr> len )
<cls> <noptr> t dat re ble ( <noptr> val )
<cls> <noptr> av fed ish network send legacy command ( <ptr> fe <dot> <noptr> cmd )
<cls> <noptr> f m irq handle start af jump resp ( <ptr> f m dev )
<cls> <ptr> int f type ( <ptr> int f )
<cls> <noptr> dst fw ver ( <ptr> state )
<cls> <noptr> mem cgroup css free ( <ptr> css )
<cls> <noptr> c x v config add ( <ptr> state <dot> <noptr> cfg in )
<cls> <noptr> flex cop determine revision ( <ptr> fc )
<cls> <noptr> d v bring buffer read ( <ptr> r buf <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> tegra cec suspend ( <ptr> pdev <dot> <noptr> state )
<cls> <noptr> stv x get fec lock ( <ptr> state <dot> <noptr> timeout )
<cls> <noptr> mpt adapter disable ( <ptr> ioc )
<cls> <ptr> get mem cgroup from current ( )
<cls> <noptr> object err ( <ptr> s <dot> <ptr> page <dot> <ptr> object <dot> <ptr> reason )
<cls> <noptr> hlf w send heartbeat ( <ptr> h dev )
<cls> <noptr> dln run event callbacks ( <ptr> dln <dot> <noptr> id <dot> <noptr> echo <dot> <ptr> data <dot> <noptr> len )
<cls> <ptr> check big end ian ( )
<cls> <noptr> inc front swap invalidates ( )
<cls> <noptr> x pck thread wait msgs ( <ptr> part <dot> <ptr> ch )
<cls> <noptr> nxt set bandwidth ( <ptr> state <dot> <noptr> bandwidth )
<cls> <noptr> video enum fmt ( <ptr> file <dot> <ptr> f h <dot> <ptr> f )
<cls> <noptr> front swap shrink ( <noptr> target pages <dot> <ptr> pages to un use <dot> <ptr> type )
<cls> <noptr> vp dma set line mode ( <ptr> vp dma <dot> <noptr> line mode <dot> <noptr> chan )
<cls> <noptr> solo disp init ( <ptr> solo dev )
<cls> <noptr> iv tv clear irq mask ( <ptr> it v <dot> <noptr> mask )
<cls> <noptr> m c xxx get flags ( <ptr> m c xxx )
<cls> <noptr> rtl b fetch vendor settings ( <ptr> pcr )
<cls> <noptr> sum vm events ( <ptr> ret )
<cls> <noptr> coda try fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> c x d start feed ( <ptr> feed )
<cls> <noptr> get big end ian ( <noptr> numof bits <dot> <noptr> buf )
<cls> <noptr> af tuner attach ( <ptr> adap )
<cls> <noptr> mem c groupid remove ( <ptr> mem cg )
<cls> <noptr> gem tek bu transmit ( <ptr> gt )
<cls> <noptr> c x der get carrier offsets s ( <ptr> priv <dot> <ptr> offset )
<cls> <noptr> sh ve u try fmt ( <ptr> f <dot> <ptr> fmt )
<cls> <noptr> z r xx stop read pipe ( <ptr> cam )
<cls> <noptr> vs preset wpf ( <ptr> vsp <dot> <noptr> index )
<cls> <noptr> isl set resolution ( <ptr> client <dot> <noptr> res )
<cls> <noptr> solo ring thread ( <ptr> data )
<cls> <noptr> init ( <ptr> state <dot> <ptr> fw <dot> <noptr> fw size )
<cls> <noptr> do invalidate page ( <ptr> page <dot> <noptr> offset <dot> <noptr> length )
<cls> <noptr> r vin capture stop ( <ptr> vin )
<cls> <noptr> un pin tag ( <noptr> handle )
<cls> <ptr> check sense ( )
<cls> <noptr> m eye ioc q buf capt ( <ptr> nb )
<cls> <noptr> hms bread page ( <ptr> card <dot> <dptr> out m r q )
<cls> <noptr> c x usb ctrl msg ( <ptr> d <dot> <noptr> cmd <dot> <ptr> w buf <dot> <noptr> w len <dot> <ptr> r buf <dot> <noptr> r len )
<cls> <noptr> c x usb my gic ad tuner attach ( <ptr> adap )
<cls> <noptr> ctrl isdirty brightness ( <ptr> cptr )
<cls> <noptr> set audio input ( <ptr> state )
<cls> <noptr> ir sharp decode ( <ptr> dev <dot> <noptr> ev )
<cls> <noptr> poison error ( <ptr> pool <dot> <ptr> element <dot> <noptr> size <dot> <noptr> byte )
<cls> <noptr> fim ch w set camera offset ( <ptr> fim c <dot> <ptr> f )
<cls> <noptr> c x start capture ( <ptr> id )
<cls> <noptr> xpc destroy gru m qu v ( <ptr> m q )
<cls> <ptr> check mouse ( )
<cls> <noptr> set dma ctrl ( <ptr> fb desc <dot> <noptr> ctrl )
<cls> <noptr> mei msg hdr init ( <ptr> me ihdr <dot> <ptr> cb )
<cls> <noptr> sige tfe clk ( <ptr> state )
<cls> <noptr> ssc sound dai probe ( <ptr> ssc )
<cls> <noptr> me swap cache dirty ( <ptr> p <dot> <noptr> pfn )
<cls> <noptr> register read ( <ptr> core <dot> <noptr> address <dot> <ptr> value )
<cls> <noptr> vsp pipeline ready ( <ptr> pipe )
<cls> <noptr> c sla remove ( <ptr> client )
<cls> <noptr> teas routing ( <ptr> sd <dot> <noptr> i <dot> <noptr> o <dot> <noptr> config )
<cls> <noptr> m pol parse str ( <ptr> str <dot> <dptr> m pol )
<cls> <noptr> v l async notifier call bound ( <ptr> n <dot> <ptr> sub dev <dot> <ptr> asd )
<cls> <noptr> is mem c goo m ( <ptr> oc )
<cls> <noptr> dib xic gated tuner xfer ( <ptr> ic adap <dot> <noptr> msg <dot> <noptr> num )
<cls> <noptr> venus helper set num buf s ( <ptr> inst <dot> <noptr> input buf s <dot> <noptr> output buf s <dot> <noptr> output buf s )
<cls> <noptr> sms dvb print dvb stats ( <ptr> debug data <dot> <ptr> p )
<cls> <noptr> em xx dvb bus ctrl ( <ptr> fe <dot> <noptr> acquire )
<cls> <noptr> exy nos jpeg reset ( <ptr> regs )
<cls> <noptr> fast rpc map find ( <ptr> fl <dot> <noptr> fd <dot> <dptr> pp map )
<cls> <noptr> stb check tm g ( <ptr> state )
<cls> <noptr> queue free slots ( <ptr> q <dot> <noptr> queue len )
<cls> <noptr> check cmd resp status ( <ptr> f m dev <dot> <dptr> skb )
<cls> <noptr> st vdi seq c send ( <ptr> int p <dot> <ptr> data <dot> <noptr> nb data <dot> <noptr> demo d )
<cls> <noptr> vb request validate ( <ptr> req )
<cls> <noptr> c x api func ( <ptr> priv <dot> <noptr> cmd <dot> <noptr> in <dot> <noptr> out <dot> <noptr> data )
<cls> <noptr> ts read tuner gain ( <ptr> fe <dot> <noptr> vag c <dot> <ptr> gain )
<cls> <noptr> m x update filters ( <ptr> adap )
<cls> <noptr> location to obj ( <ptr> page <dot> <noptr> obj idx )
<cls> <noptr> go y a early fini ( <ptr> h dev )
<cls> <noptr> gup device huge ( <noptr> pfn <dot> <noptr> addr <dot> <noptr> end <dot> <dptr> pages <dot> <ptr> nr )
<cls> <noptr> clear page huge object ( <ptr> page )
<cls> <noptr> dvb net ule new ts ( <ptr> h )
<cls> <noptr> adv get format ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> format )
<cls> <noptr> preview config brightness ( <ptr> prev <dot> <ptr> params )
<cls> <noptr> wm x aux adc read ( <ptr> wm x <dot> <noptr> input )
<cls> <noptr> delta mjpeg ipc decode ( <ptr> p ctx <dot> <ptr> au )
<cls> <noptr> uvc video complete ( <ptr> urb )
<cls> <noptr> m tts register ( <ptr> sd <dot> <ptr> reg )
<cls> <noptr> hl var ange fini ( <ptr> h dev <dot> <ptr> var ange )
<cls> <noptr> media device close ( <ptr> filp )
<cls> <noptr> mem c groupid put ( <ptr> mem cg )
<cls> <noptr> m fd remove devices ( <ptr> parent )
<cls> <noptr> set white balance ( <ptr> gsp ca dev )
<cls> <noptr> p cpu populate chunk ( <ptr> chunk <dot> <noptr> page start <dot> <noptr> page end <dot> <noptr> gfp )
<cls> <noptr> imo nir data ( <ptr> imon )
<cls> <noptr> c x dt nr dmd dvb t diver fef setting ( <ptr> tn r dmd )
<cls> <noptr> xcconfig tv ( <ptr> fe <dot> <ptr> params )
<cls> <noptr> slot shutdown ( <ptr> ca <dot> <noptr> slot )
<cls> <noptr> delta vba u start streaming ( <ptr> q <dot> <noptr> count )
<cls> <noptr> slab destroy ( <ptr> cache p <dot> <ptr> page )
<cls> <noptr> adv xx g input status ( <ptr> sd <dot> <ptr> status )
<cls> <noptr> l m set ctrl ( <ptr> ctrl <dot> <noptr> led no )
<cls> <noptr> cals input ( <ptr> file <dot> <ptr> priv <dot> <noptr> i )
<cls> <noptr> move free list tail ( <ptr> free list <dot> <ptr> free page )
<cls> <noptr> venus session flush ( <ptr> inst <dot> <noptr> flush mode )
<cls> <noptr> d ibm c reset pll ( <ptr> state )
<cls> <noptr> nxt x read signal strength ( <ptr> fe <dot> <ptr> strength )
<cls> <noptr> ont rols ( <ptr> fe )
<cls> <noptr> lpc ich init gpio ( <ptr> dev )
<cls> <noptr> nxt x write reg multi byte ( <ptr> state <dot> <noptr> reg <dot> <ptr> data <dot> <noptr> len )
<cls> <noptr> sanitize ( <ptr> p <dot> <noptr> size )
<cls> <noptr> xpc timeout partition dis engage ( <ptr> t )
<cls> <noptr> bt tv input irq ( <ptr> b tv )
<cls> <noptr> calculate src freq ( <ptr> data )
<cls> <noptr> bt mtk uart recv event ( <ptr> h dev <dot> <ptr> skb )
<cls> <noptr> techn is atus bic xfer ( <ptr> adap <dot> <ptr> msg <dot> <noptr> num )
<cls> <noptr> os d set palette map ( <ptr> sd <dot> <noptr> os dwin <dot> <noptr> pixel value <dot> <noptr> clut index <dot> <noptr> pix fmt )
<cls> <noptr> dom lock ( <noptr> start <dot> <noptr> len <dot> <noptr> flags )
<cls> <noptr> load all firmware s ( <ptr> fe <dot> <ptr> fw )
<cls> <noptr> d ibm write word ( <ptr> state <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> bf usb flush ( <ptr> h dev )
<cls> <noptr> con free uni map ( <ptr> vc )
<cls> <noptr> early pfn to nid ( <noptr> pfn <dot> <ptr> state )
<cls> <noptr> gru flush tlb range ( <ptr> gms <dot> <noptr> start <dot> <noptr> len )
<cls> <noptr> v bread ( <ptr> q <dot> <ptr> data <dot> <noptr> count <dot> <ptr> p pos <dot> <noptr> non blocking )
<cls> <noptr> mtm set ctrl ( <ptr> ctrl )
<cls> <noptr> adv setup format ( <ptr> state )
<cls> <noptr> vs pdl list put ( <ptr> dl )
<cls> <noptr> mtm update timing ( <ptr> sensor <dot> <ptr> interval )
<cls> <noptr> mantis pci remove ( <ptr> pdev )
<cls> <noptr> log x ( <noptr> x )
<cls> <noptr> vb fop release ( <ptr> file <dot> <ptr> lock )
<cls> <noptr> cro sec cec resume ( <ptr> dev )
<cls> <noptr> stv x read reg ( <ptr> state <dot> <noptr> reg )
<cls> <noptr> lpc ich enable pmc space ( <ptr> dev )
<cls> <noptr> sis frequency ( <ptr> sd <dot> <ptr> f )
<cls> <noptr> lg dta check lock status ( <ptr> state <dot> <noptr> what lock )
<cls> <noptr> b x tw c suspend ( <ptr> dev )
<cls> <noptr> fast rpc get buff overlaps ( <ptr> ctx )
<cls> <noptr> cec isbusy ( <ptr> adap <dot> <ptr> f h )
<cls> <noptr> sp mfc sleep ( <ptr> dev )
<cls> <noptr> send packet ( <ptr> i ctx )
<cls> <noptr> r card rif set default format ( <ptr> sdr )
<cls> <noptr> rtl b extra init hw ( <ptr> pcr )
<cls> <noptr> go y a core sight timeout ( <ptr> h dev <dot> <noptr> addr <dot> <noptr> position <dot> <noptr> up )
<cls> <noptr> do sys read ahead ( <noptr> fd <dot> <noptr> offset <dot> <noptr> count )
<cls> <noptr> hl debug fs remove job ( <ptr> h dev <dot> <ptr> job )
<cls> <noptr> idt init ( )
<cls> <noptr> cg w bbd i exit ( <ptr> bd i )
<cls> <noptr> free cache ( )
<cls> <noptr> dib mag c soft split ( <ptr> state )
<cls> <noptr> tps irq init ( <ptr> tps <dot> <noptr> irq )
<cls> <noptr> ptic read msg ( <ptr> pt <dot> <noptr> addr <dot> <ptr> addr p <dot> <ptr> msg )
<cls> <noptr> is gts steal able ( <ptr> gts <dot> <ptr> bs )
<cls> <noptr> m tvs ctrl ( <ptr> ctrl )
<cls> <noptr> tea driver init ( )
<cls> <noptr> vi u activate next buf ( <ptr> dev <dot> <ptr> vi u q )
<cls> <noptr> z d demo dw reg ( <ptr> dev <dot> <noptr> reg <dot> <noptr> val )
<cls> <ptr> sdt ocs is state ( <ptr> s dev )
<cls> <noptr> ak x enum mbus code ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> code )
<cls> <noptr> vbd cdma buf ops attach ( <ptr> d buf <dot> <ptr> d buf attach )
<cls> <noptr> dtt ufe read ber ( <ptr> fe <dot> <ptr> ber )
<cls> <noptr> move free pages ( <ptr> zone <dot> <ptr> start page <dot> <ptr> end page <dot> <noptr> migrate type <dot> <ptr> num movable )
<cls> <noptr> ov read reg ( <ptr> client <dot> <noptr> reg <dot> <noptr> len <dot> <ptr> val )
<cls> <noptr> go y aq man set security ( <ptr> h dev <dot> <noptr> secure )
<cls> <noptr> m xls f front end attach ats c ( <ptr> adap )
<cls> <noptr> shrink all memory ( <noptr> nr to reclaim )
<cls> <noptr> tps ini text control ( <ptr> tps <dot> <ptr> p data )
<cls> <noptr> free io ctx ( <ptr> work )
<cls> <ptr> mt attach ( <ptr> fe <dot> <ptr> config <dot> <ptr> ic )
<cls> <noptr> sci f stop ( <ptr> sci f dev )
<cls> <noptr> l write reg ( <ptr> state <dot> <noptr> reg <dot> <noptr> data )
<cls> <noptr> xpc heartbeat exit uv ( )
<cls> <noptr> mce usb set r x carrier report ( <ptr> dev <dot> <noptr> enable )
<cls> <noptr> m rv len queue ( <ptr> hu <dot> <ptr> skb )
<cls> <noptr> un pin user pages dirty lock ( <dptr> pages <dot> <noptr> n pages <dot> <noptr> make dirty )
<cls> <noptr> pluto request firmware ( <ptr> fe <dot> <dptr> fw <dot> <ptr> name )
<cls> <noptr> j pu driver init ( )
<cls> <noptr> isl show lux ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> saa set decoder ( <ptr> dev )
<cls> <noptr> cec dev node init ( )
<cls> <noptr> gpp sk streaming ctrl ( <ptr> adap <dot> <noptr> onoff )
<cls> <noptr> lazy max pages ( )
<cls> <noptr> node dirty able memory ( <ptr> pg dat )
<cls> <noptr> mem cg destroy list lru node ( <ptr> n lru )
<cls> <noptr> sci frm alist cpu copy ( <ptr> work )
<cls> <noptr> sp mfc init pm ( <ptr> dev )
<cls> <noptr> dev freq event get event ( <ptr> e dev <dot> <ptr> e data )
<cls> <noptr> ov g frame interval ( <ptr> sd <dot> <ptr> fi )
<cls> <noptr> d i bag c startup ( <ptr> fe )
<cls> <noptr> pvr h dw gpio get out ( <ptr> h dw <dot> <ptr> dp )
<cls> <noptr> lg dta read signal strength ( <ptr> fe <dot> <ptr> strength )
<cls> <noptr> mn x get tune settings ( <ptr> fe <dot> <ptr> s )
<cls> <noptr> sci f node remove ack ( <ptr> sci f dev <dot> <ptr> msg )
<cls> <noptr> v pfe reg dump ( <ptr> c cdc )
<cls> <noptr> dev node set ( <ptr> v dev )
<cls> <noptr> show dev name ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> cxx xep bulk out ( <ptr> dev <dot> <ptr> firmware <dot> <noptr> size )
<cls> <noptr> pvr std strto id ( <ptr> id ptr <dot> <ptr> buf ptr <dot> <noptr> buf size )
<cls> <noptr> mem block endof dram ( )
<cls> <noptr> ov set test pattern ( <ptr> ov <dot> <noptr> value )
<cls> <noptr> wl f m set pre emphasis ( <ptr> radio <dot> <noptr> pre emphasis )
<cls> <noptr> sh ve u ccc space ( <noptr> fourcc )
<cls> <noptr> exy nos jpeg parse decode q tbl ( <ptr> ctx )
<cls> <ptr> k mem dup nul ( <ptr> s <dot> <noptr> len <dot> <noptr> gfp )
<cls> <noptr> pfn next ( <noptr> pfn )
<cls> <noptr> s rpc base config ( <ptr> sd )
<cls> <noptr> shmem set policy ( <ptr> vma <dot> <ptr> m pol )
<cls> <noptr> generic perform write ( <ptr> file <dot> <ptr> i <dot> <noptr> pos )
<cls> <noptr> get v led id ( <ptr> p <dot> <ptr> p )
<cls> <noptr> sci f dma callback ( <ptr> arg )
<cls> <noptr> r jn probe ( <ptr> client <dot> <ptr> did )
<cls> <noptr> v pbe display probe ( <ptr> pdev )
<cls> <noptr> nxt x crc ( <noptr> crc <dot> <noptr> c )
<cls> <noptr> v bdc detach dma buf ( <ptr> mem priv )
<cls> <noptr> f m v l vid ioc stu ner ( <ptr> file <dot> <ptr> priv <dot> <ptr> tuner )
<cls> <noptr> slo b free pages ( <ptr> b <dot> <noptr> order )
<cls> <noptr> dvb usb adapter front end exit ( <ptr> adap )
<cls> <ptr> check enc mpg buffers ( )
<cls> <noptr> print d dcb info ( <ptr> cd <dot> <ptr> queue )
<cls> <noptr> dcm i buf prepare ( <ptr> vb )
<cls> <noptr> se sys m lock all ( <noptr> flags )
<cls> <ptr> v l clk find ( <ptr> devid )
<cls> <noptr> flex cop smc ctrl ( <ptr> fc <dot> <noptr> onoff )
<cls> <noptr> six core element isin range ( <noptr> element <dot> <noptr> range <dot> <noptr> size )
<cls> <noptr> g scm mctx stop req ( <ptr> ctx )
<cls> <noptr> mtk mdp hw set out image format ( <ptr> ctx )
<cls> <noptr> ec read ber ( <ptr> fe <dot> <ptr> ber )
<cls> <noptr> net up uni dvb stop streaming ( <ptr> q )
<cls> <noptr> estu ner ( <ptr> sd <dot> <ptr> v )
<cls> <noptr> ov xs ctrl ( <ptr> ctrl )
<cls> <noptr> stk configure clock ( <ptr> gsp ca dev )
<cls> <noptr> vid ioc venc g parm ( <ptr> file <dot> <ptr> priv <dot> <ptr> a )
<cls> <noptr> uvc scan device ( <ptr> dev )
<cls> <noptr> set light freq ( <ptr> gsp ca dev <dot> <noptr> val )
<cls> <noptr> c x usb power ctrl ( <ptr> d <dot> <noptr> onoff )
<cls> <noptr> c xxx get gpio bit ( <ptr> dev <dot> <noptr> gpio bit <dot> <ptr> gpio val )
<cls> <noptr> ddb output start ( <ptr> output )
<cls> <noptr> usb pwc disconnect ( <ptr> int f )
<cls> <noptr> max irq init ( <ptr> max )
<cls> <noptr> load d mem segment ( <ptr> fe i <dot> <ptr> phdr <dot> <ptr> fw <dot> <ptr> dst <dot> <noptr> seg num )
<cls> <noptr> rds write ( <ptr> aci <dot> <noptr> byte )
<cls> <noptr> sp mfc init regs ( <ptr> dev )
<cls> <noptr> em xx detect sensor ( <ptr> dev )
<cls> <noptr> r resume ( <ptr> core dev )
<cls> <noptr> sec oce c driver init ( )
<cls> <ptr> v l sub dev to c sir x ( <ptr> sub dev )
<cls> <noptr> security perf event free ( <ptr> event )
<cls> <noptr> v l query ctrl ( <ptr> hdl <dot> <ptr> q c )
<cls> <noptr> me icl dev enable ( <ptr> cl dev )
<cls> <noptr> pti exit ( )
<cls> <noptr> device author ization ( <ptr> dev )
<cls> <noptr> intell pss register clock ( <ptr> l pss )
<cls> <noptr> me ime irq thread handler ( <noptr> irq <dot> <ptr> devid )
<cls> <noptr> cio video enum input ( <ptr> file <dot> <ptr> f h <dot> <ptr> input )
<cls> <noptr> r vin ack interrupt ( <ptr> vin )
<cls> <noptr> dib xic select interface ( <ptr> mst <dot> <noptr> int f )
<cls> <noptr> k huge paged scan abort ( <noptr> nid )
<cls> <noptr> m advise page out page range ( <ptr> tlb <dot> <ptr> vma <dot> <noptr> addr <dot> <noptr> end )
<cls> <noptr> phantom status ( <ptr> dev <dot> <noptr> new stat )
<cls> <noptr> sp mfc try run v ( <ptr> dev )
<cls> <noptr> video buf queue isbusy ( <ptr> q )
<cls> <noptr> coda fill bitstream ( <ptr> ctx <dot> <ptr> buffer list )
<cls> <noptr> update header from stateless params ( <ptr> ctx <dot> <ptr> params )
<cls> <noptr> mpt scsi h board tracer show ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> read attribute mem ( <ptr> ca <dot> <noptr> slot <dot> <noptr> address )
<cls> <noptr> ov gain get ( <ptr> sensor )
<cls> <ptr> append internal ( <ptr> internal )
<cls> <noptr> cobalt enum fmt vid cap ( <ptr> file <dot> <ptr> priv f h <dot> <ptr> f )
<cls> <noptr> v dec ops ctrl ( <ptr> ctrl )
<cls> <noptr> mpt sass as device pg ( <ptr> ioc <dot> <ptr> device info <dot> <noptr> form <dot> <noptr> form specific )
<cls> <noptr> snd solo pcm pointer ( <ptr> ss )
<cls> <noptr> radio isa valid io ( <ptr> drv <dot> <noptr> io )
<cls> <noptr> mpt scsi h version products how ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> available frequencies show ( <ptr> d <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> blue card open ( <ptr> info )
<cls> <noptr> saa api get fw version ( <ptr> dev <dot> <ptr> version )
<cls> <noptr> fim c is request firmware ( <ptr> is <dot> <ptr> fw name )
<cls> <noptr> c xir work ( <ptr> timer )
<cls> <noptr> br x configure stream ( <ptr> entity <dot> <ptr> pipe <dot> <ptr> dl <dot> <ptr> dl b )
<cls> <noptr> cam ss runtime resume ( <ptr> dev )
<cls> <noptr> audio mux gpio ( <ptr> b tv <dot> <noptr> input <dot> <noptr> mute )
<cls> <noptr> lp driver exit ( )
<cls> <noptr> add channel to table ( <ptr> stg data <dot> <ptr> new proto )
<cls> <noptr> deactivate full store ( <ptr> s <dot> <ptr> buf <dot> <noptr> length )
<cls> <noptr> ov test pattern ( <ptr> ov <dot> <noptr> pattern )
<cls> <noptr> disable irq s ( <ptr> ctx )
<cls> <noptr> ths s std output ( <ptr> sd <dot> <noptr> norm )
<cls> <noptr> sn div tv pcm hw params ( <ptr> sub stream <dot> <ptr> params )
<cls> <noptr> hci uart set flags ( <ptr> hu <dot> <noptr> flags )
<cls> <noptr> qca download firmware ( <ptr> h dev <dot> <ptr> config <dot> <noptr> soc type )
<cls> <noptr> six vid ioc g frequency ( <ptr> file <dot> <ptr> priv <dot> <ptr> freq )
<cls> <noptr> mpt spi event process ( <ptr> ioc <dot> <ptr> pe v reply )
<cls> <ptr> sms get fw name ( <noptr> mode <dot> <noptr> boardid )
<cls> <noptr> clue num mbus code ( <ptr> sub dev <dot> <ptr> cfg <dot> <ptr> code )
<cls> <noptr> vsp pipeline stopped ( <ptr> pipe )
<cls> <noptr> mn read status ( <ptr> fe <dot> <ptr> status )
<cls> <noptr> made raspi probe ( <ptr> spi )
<cls> <noptr> mcl kun prepare ( <ptr> hw )
<cls> <noptr> me it xe out data read ( <ptr> dev <dot> <noptr> idx )
<cls> <noptr> vid io csd v timings ( <ptr> file <dot> <ptr> f h <dot> <ptr> timings )
<cls> <noptr> pm xreg read ( <ptr> ic <dot> <noptr> reg )
<cls> <noptr> h fi session abort ( <ptr> inst )
<cls> <noptr> shmem default max blocks ( )
<cls> <noptr> ska as frame interval ( <ptr> sd <dot> <ptr> fi )
<cls> <noptr> pvr write register ( <ptr> h dw <dot> <noptr> reg <dot> <noptr> data )
<cls> <noptr> ov x remove ( <ptr> client )
<cls> <noptr> resizer set input size ( <ptr> res <dot> <noptr> width <dot> <noptr> height )
<cls> <noptr> l gdt read status ( <ptr> fe <dot> <ptr> status )
<cls> <noptr> ov x reset ( <ptr> priv )
<cls> <noptr> sp jpeg q tbl ( <ptr> regs <dot> <noptr> t <dot> <noptr> n )
<cls> <noptr> me ime cl del ( <ptr> dev <dot> <ptr> m ecl )
<cls> <noptr> s remove ( <ptr> client )
<cls> <noptr> cxx ext ctrls ( <ptr> params <dot> <noptr> busy <dot> <ptr> ctrls <dot> <noptr> cmd )
<cls> <noptr> hmm vma walk hole ( <noptr> addr <dot> <noptr> end <dot> <noptr> fault <dot> <noptr> write fault <dot> <ptr> walk )
<cls> <noptr> vid cap queue setup ( <ptr> v q <dot> <ptr> n buffers <dot> <ptr> n planes <dot> <noptr> sizes <dot> <ptr> alloc devs )
<cls> <noptr> vm balloon mark page offline ( <ptr> page <dot> <noptr> page size )
<cls> <noptr> c x query buf ( <ptr> file <dot> <ptr> priv <dot> <ptr> b )
<cls> <noptr> net up unid v bci read attribute mem ( <ptr> en <dot> <noptr> slot <dot> <noptr> addr )
<cls> <noptr> is i enum fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> go usb read video pipe complete ( <ptr> urb )
<cls> <noptr> mtv reset ( <ptr> sd <dot> <noptr> val )
<cls> <noptr> mic send intr ( <ptr> m dev <dot> <noptr> door bell )
<cls> <noptr> stw x probe ( <ptr> client <dot> <ptr> id )
<cls> <noptr> stable node dup del ( <ptr> dup )
<cls> <noptr> mem cgroup charge statistics ( <ptr> mem cg <dot> <ptr> page <dot> <noptr> compound <dot> <noptr> nr pages )
<cls> <noptr> vma gap update ( <ptr> vma )
<cls> <ptr> check max pool percent ( )
<cls> <noptr> r remove ( <ptr> pdev )
<cls> <noptr> nxt init ( <ptr> fe )
<cls> <noptr> mei cancel work ( <ptr> dev )
<cls> <noptr> rts x base enable auto blink ( <ptr> pcr )
<cls> <noptr> get fault gfp mask ( <ptr> vma )
<cls> <noptr> tde db w ( <ptr> fe <dot> <ptr> buf )
<cls> <noptr> ves x read snr ( <ptr> fe <dot> <ptr> snr )
<cls> <noptr> pvr h dw load modules ( <ptr> h dw )
<cls> <noptr> phantom ioctl ( <ptr> file <dot> <noptr> cmd <dot> <noptr> arg )
<cls> <ptr> follow page ( <ptr> vma <dot> <noptr> address <dot> <noptr> foll flags )
<cls> <noptr> z xir dec set mask ( <ptr> ir dec <dot> <noptr> reg <dot> <noptr> mask <dot> <noptr> value )
<cls> <noptr> q case tbd addr ( <ptr> h dev <dot> <ptr> b daddr )
<cls> <noptr> h va query cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> cap )
<cls> <noptr> domin core ( <noptr> addr <dot> <noptr> pages <dot> <ptr> vec )
<cls> <noptr> v hci read ( <ptr> file <dot> <ptr> buf <dot> <noptr> count <dot> <ptr> pos )
<cls> <noptr> c ech winit ( <ptr> cec )
<cls> <noptr> saa g std ( <ptr> port <dot> <ptr> id )
<cls> <noptr> asan store no abort ( <noptr> )
<cls> <noptr> ms pro block start ( <ptr> card )
<cls> <noptr> sh sleep ( <ptr> fe <dot> <noptr> enable )
<cls> <noptr> mem block cap memory range ( <noptr> base <dot> <noptr> size )
<cls> <noptr> try to unmap flush dirty ( )
<cls> <noptr> v op finalize features ( <ptr> v dev )
<cls> <noptr> able ( <ptr> state <dot> <ptr> p table )
<cls> <noptr> fri io ext ctl ( <ptr> d <dot> <noptr> sat color <dot> <noptr> power on )
<cls> <noptr> m i pid apply reset ( <ptr> bridge )
<cls> <noptr> img ir symbol timing preprocess ( <ptr> timing <dot> <noptr> unit )
<cls> <noptr> stv get front end ( <ptr> fe <dot> <ptr> p )
<cls> <ptr> check ts debug ( )
<cls> <noptr> resizer print status ( <ptr> res )
<cls> <noptr> reclaim high ( <ptr> mem cg <dot> <noptr> nr pages <dot> <noptr> gfp mask )
<cls> <noptr> compaction free ( <ptr> page <dot> <noptr> data )
<cls> <noptr> pre calculate color ( <ptr> tp g <dot> <noptr> k )
<cls> <noptr> cobalt dma stream queue handler ( <ptr> s )
<cls> <noptr> tw l audio driver init ( )
<cls> <noptr> page outside zone boundaries ( <ptr> zone <dot> <ptr> page )
<cls> <noptr> c xxx gpio ic write byte ( <ptr> dev <dot> <noptr> data )
<cls> <noptr> mpeg ops detach ( <ptr> ops <dot> <ptr> dev )
<cls> <noptr> cec pin update ( <ptr> pin <dot> <noptr> v <dot> <noptr> force )
<cls> <noptr> check n and stat ( <ptr> ctrl )
<cls> <noptr> cpi ado command ( <ptr> cam <dot> <noptr> command <dot> <noptr> direction <dot> <noptr> param )
<cls> <noptr> gen wq e executed dcb ( <ptr> c file <dot> <ptr> cmd )
<cls> <noptr> venus helper mmdevice run ( <ptr> priv )
<cls> <noptr> net up uni dvb tuner ctrl ( <ptr> priv <dot> <noptr> is d v btc )
<cls> <ptr> check force sensor type ( )
<cls> <noptr> migrate vma collect pmd ( <ptr> pmd p <dot> <noptr> start <dot> <noptr> end <dot> <ptr> walk )
<cls> <noptr> mtk jpegs fmt vid out m plane ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> ov power on ( <ptr> dev )
<cls> <noptr> spm fcd ecs ctrl ( <ptr> ctrl )
<cls> <noptr> mpt sass as expander pg ( <ptr> ioc <dot> <ptr> port info <dot> <noptr> form <dot> <noptr> form specific )
<cls> <noptr> bcm read bytes ( <ptr> state <dot> <noptr> reg <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> huge page sub pool get pages ( <ptr> spool <dot> <noptr> delta )
<cls> <noptr> sd set sample push timings d ( <ptr> pcr )
<cls> <noptr> set aec ( <ptr> gsp ca dev <dot> <noptr> val )
<cls> <noptr> se sys get mem policy ( <ptr> policy <dot> <ptr> n mask <dot> <noptr> max node <dot> <noptr> addr <dot> <noptr> flags )
<cls> <noptr> ska a set output frame fmt ( <ptr> ska a <dot> <ptr> preset )
<cls> <ptr> me ime cl get ( <ptr> m ecl )
<cls> <noptr> af download firmware ( <ptr> state )
<cls> <noptr> c xir fini ( <ptr> dev )
<cls> <noptr> dib pr won apb ( <ptr> ic adap <dot> <noptr> msg <dot> <noptr> num <dot> <noptr> apb address )
<cls> <noptr> rcs i write ( <ptr> priv <dot> <noptr> reg <dot> <noptr> data )
<cls> <noptr> z fold free ( <ptr> pool <dot> <noptr> handle )
<cls> <noptr> show version ( <ptr> cd <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> em xx probe sensor micron ( <ptr> dev )
<cls> <noptr> sp mfc get emin scratch buf size ( <ptr> dev )
<cls> <noptr> stmp e ic probe ( <ptr> ic <dot> <ptr> id )
<cls> <noptr> v l print decoder cmd ( <ptr> arg <dot> <noptr> write only )
<cls> <noptr> c port store flash erase ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> get unmapped area ( <ptr> file <dot> <noptr> addr <dot> <noptr> len <dot> <noptr> pg off <dot> <noptr> flags )
<cls> <noptr> write cam control ( <ptr> ca <dot> <noptr> slot <dot> <noptr> address <dot> <noptr> value )
<cls> <noptr> j bd free ( <ptr> ptr <dot> <noptr> size )
<cls> <noptr> send i pack ( <ptr> p )
<cls> <noptr> saa work cmdhandler ( <ptr> w )
<cls> <noptr> go y acs parser ( <ptr> h dev <dot> <ptr> parser )
<cls> <noptr> stv get frequency ( <ptr> fe <dot> <ptr> frequency )
<cls> <noptr> saa g f buf ( <ptr> file <dot> <ptr> f <dot> <ptr> fb )
<cls> <noptr> b disp runtime resume ( <ptr> dev )
<cls> <noptr> msb stop ( <ptr> card )
<cls> <noptr> v pe start streaming ( <ptr> q <dot> <noptr> count )
<cls> <noptr> ctrl clear dirty crop l ( <ptr> cptr )
<cls> <noptr> a pds als probe ( <ptr> client <dot> <ptr> id )
<cls> <noptr> and ( <ptr> pas info <dot> <ptr> f m <dot> <ptr> fp )
<cls> <noptr> pvr dvb start feed ( <ptr> dvb dmx feed )
<cls> <noptr> ptic write byte ( <ptr> pt <dot> <noptr> addr <dot> <ptr> addr p <dot> <noptr> data )
<cls> <noptr> read register block ( <ptr> state <dot> <noptr> reg <dot> <noptr> size <dot> <ptr> data )
<cls> <noptr> at adjust write count ( <ptr> at <dot> <noptr> offset <dot> <noptr> count )
<cls> <noptr> pch p hub g be serial rom conf ( <ptr> chip )
<cls> <noptr> msb do write request ( <ptr> msb <dot> <noptr> lba <dot> <noptr> page <dot> <ptr> sg <dot> <noptr> len <dot> <ptr> sucessful y written )
<cls> <noptr> init b tt vic ( <ptr> b tv )
<cls> <ptr> sc dev tom dev ( <ptr> sc dev )
<cls> <noptr> tcs get front end ( <ptr> fe <dot> <ptr> c )
<cls> <noptr> sci f rb commit ( <ptr> rb )
<cls> <noptr> exy nos bus plat drv exit ( )
<cls> <noptr> f m irq call stage ( <ptr> f m dev <dot> <noptr> stage )
<cls> <noptr> c cdc try crop ( <ptr> c cdc <dot> <ptr> sink <dot> <ptr> crop )
<cls> <noptr> bcm open ( <ptr> hu )
<cls> <noptr> img ir sharps can code ( <noptr> len <dot> <noptr> raw <dot> <noptr> enabled protocols <dot> <ptr> request )
<cls> <noptr> norm v delay ( <noptr> norm )
<cls> <noptr> td a get tps ( <ptr> state <dot> <ptr> p )
<cls> <noptr> m xls f front end attach dvb t ( <ptr> adap )
<cls> <noptr> mei hbm pg enter res ( <ptr> dev )
<cls> <noptr> vsp video get format ( <ptr> file <dot> <ptr> f h <dot> <ptr> format )
<cls> <noptr> delta try decoder cmd ( <ptr> file <dot> <ptr> f h <dot> <ptr> cmd )
<cls> <noptr> free fd table rcu ( <ptr> rcu )
<cls> <ptr> stv x get dev ctl ( <ptr> client )
<cls> <noptr> exy nos jpeg coef ( <ptr> base <dot> <noptr> mode )
<cls> <noptr> start vga cam ( <ptr> gsp ca dev )
<cls> <noptr> b disp m m suspend ( <ptr> b disp )
<cls> <noptr> uvc unregister video ( <ptr> dev )
<cls> <noptr> vim c deb release ( <ptr> sd )
<cls> <noptr> put pages list ( <ptr> pages )
<cls> <noptr> stv cab read snr ( <ptr> fe <dot> <ptr> snr )
<cls> <noptr> d quot free space no dirty ( <ptr> inode <dot> <noptr> nr )
<cls> <noptr> tp g fill params extras ( <ptr> tp g <dot> <noptr> p <dot> <ptr> params )
<cls> <noptr> vss stream ( <ptr> sd <dot> <noptr> enable )
<cls> <noptr> mbus dev probe ( <ptr> d )
<cls> <noptr> iv tv enum output ( <ptr> file <dot> <ptr> f h <dot> <ptr> v out )
<cls> <noptr> v l print d v timings cap ( <ptr> arg <dot> <noptr> write only )
<cls> <noptr> bt init ( <ptr> sd )
<cls> <noptr> sci f rb init ( <ptr> rb <dot> <ptr> read ptr <dot> <ptr> write ptr <dot> <ptr> rb base <dot> <noptr> size )
<cls> <noptr> t sin copy stripped ( <ptr> dev <dot> <ptr> buf )
<cls> <ptr> pvr hd wget dev ( <ptr> h dw )
<cls> <noptr> k mem cache release ( <ptr> k )
<cls> <noptr> is dbt layer min bitrate ( <ptr> c <dot> <noptr> layer )
<cls> <noptr> mtv probe ( <ptr> c <dot> <ptr> id )
<cls> <noptr> flite hw capture start ( <ptr> dev )
<cls> <noptr> dvb dummy fe get front end ( <ptr> fe <dot> <ptr> p )
<cls> <noptr> c sid init formats ( <ptr> sd <dot> <ptr> f h )
<cls> <noptr> iv tv read pos ( <ptr> s <dot> <ptr> u buf <dot> <noptr> count <dot> <ptr> pos <dot> <noptr> non block )
<cls> <noptr> usb tv audio start ( <ptr> chip )
<cls> <noptr> dev freq resume device ( <ptr> dev freq )
<cls> <noptr> is if get buf type ( )
<cls> <noptr> m x b detach ( <ptr> dev )
<cls> <noptr> af usb read tuner registers ( <ptr> d <dot> <noptr> reg <dot> <ptr> values <dot> <noptr> len )
<cls> <noptr> iv tv yuv handle horizontal ( <ptr> it v <dot> <ptr> f )
<cls> <noptr> tt usb nov asg run dig tuner set params ( <ptr> fe )
<cls> <noptr> shrink node mem c gs ( <ptr> pg dat <dot> <ptr> sc )
<cls> <noptr> cam ss runtime suspend ( <ptr> dev )
<cls> <noptr> sci fun register ( <noptr> epd <dot> <noptr> offset <dot> <noptr> len )
<cls> <noptr> noc p signal ( <ptr> sd )
<cls> <noptr> ov get frame rate ( <ptr> sd <dot> <ptr> tp f )
<cls> <noptr> pvr g selection ( <ptr> file <dot> <ptr> priv <dot> <ptr> sel )
<cls> <noptr> saas top preview ( <ptr> f h )
<cls> <ptr> vbd cv addr ( <ptr> buf priv )
<cls> <noptr> dib p write word ( <ptr> state <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> radio tea init ( <ptr> tea <dot> <ptr> owner )
<cls> <noptr> b tt vir qdebug low latency ( <ptr> b tv <dot> <noptr> rc )
<cls> <noptr> frees table node chain ( <ptr> chain <dot> <ptr> root )
<cls> <noptr> d v bring buffer reset ( <ptr> r buf )
<cls> <noptr> af download firmware ( <ptr> d <dot> <ptr> firmware )
<cls> <noptr> c xxx unregister extension ( <ptr> ops )
<cls> <noptr> v l ctrl subscribe event ( <ptr> f h <dot> <ptr> sub )
<cls> <noptr> msp update volume ( <ptr> state )
<cls> <noptr> dentry free ( <ptr> dentry )
<cls> <noptr> max ref out load to bits ( <ptr> client <dot> <noptr> load <dot> <ptr> bits )
<cls> <noptr> usb si probe ( <ptr> int f <dot> <ptr> id )
<cls> <noptr> gsc get pre scale rsh factor ( <noptr> h ratio <dot> <noptr> v ratio <dot> <ptr> sh )
<cls> <noptr> release ( <ptr> fe )
<cls> <noptr> rts x usb ms request ( <ptr> msh )
<cls> <noptr> m tms frame interval ( <ptr> sd <dot> <ptr> fi )
<cls> <noptr> coda prepare encode ( <ptr> ctx )
<cls> <noptr> budget av attach ( <ptr> dev <dot> <ptr> info )
<cls> <noptr> swap do scheduled discard ( <ptr> si )
<cls> <noptr> ov set ctrl gain ( <ptr> sensor <dot> <noptr> auto gain )
<cls> <noptr> c x mdl sendto alsa ( <ptr> c x <dot> <ptr> s <dot> <ptr> mdl )
<cls> <noptr> check new page bad ( <ptr> page )
<cls> <noptr> dur amar c port exit ( )
<cls> <noptr> mtk vcodec init enc pm ( <ptr> mtk dev )
<cls> <noptr> hack r f probe ( <ptr> int f <dot> <ptr> id )
<cls> <noptr> dib p set channel ( <ptr> state <dot> <ptr> ch <dot> <noptr> seq )
<cls> <noptr> l k dtm user copy stack beyond ( )
<cls> <noptr> isset sensor ( <ptr> is <dot> <noptr> fps )
<cls> <noptr> px a video buf set act dma ( <ptr> pc dev <dot> <ptr> buf )
<cls> <noptr> c xxx set gpio direction ( <ptr> dev <dot> <noptr> pin number <dot> <noptr> pin value )
<cls> <noptr> em xx v l create entities ( <ptr> dev )
<cls> <noptr> flex cop pci stream control ( <ptr> fc <dot> <noptr> onoff )
<cls> <noptr> rts xpc ims issue cmd ( <ptr> host )
<cls> <noptr> br x get selection ( <ptr> sub dev <dot> <ptr> cfg <dot> <ptr> sel )
<cls> <noptr> v l async cleanup ( <ptr> sd )
<cls> <noptr> pcf adc sync read ( <ptr> pcf <dot> <noptr> mux <dot> <noptr> avg )
<cls> <noptr> mtm init sensor ( <ptr> gsp ca dev )
<cls> <noptr> usb tv release ( <ptr> v l dev )
<cls> <noptr> dib set seg channel ( <ptr> state )
<cls> <noptr> c xs stream ( <ptr> sd <dot> <noptr> enable )
<cls> <noptr> intell pss ltr set ( <ptr> dev <dot> <noptr> val )
<cls> <noptr> b pax disconnect ( <ptr> int f )
<cls> <noptr> b cove driver exit ( )
<cls> <noptr> frame vector to pages ( <ptr> vec )
<cls> <noptr> lp exit ( )
<cls> <noptr> init k mem cache nodes ( <ptr> s )
<cls> <noptr> node states check changes offline ( <noptr> nr pages <dot> <ptr> zone <dot> <ptr> arg )
<cls> <noptr> vivid get quality ( <ptr> dev <dot> <ptr> afc )
<cls> <noptr> m wait for ic ( <ptr> sd )
<cls> <noptr> try set ext ctrls common ( <ptr> f h <dot> <ptr> hdl <dot> <ptr> cs <dot> <ptr> v dev <dot> <noptr> set )
<cls> <noptr> lg dta read snr ( <ptr> fe <dot> <ptr> snr )
<cls> <noptr> tt usb ic xfer ( <ptr> adap <dot> <noptr> msg <dot> <noptr> num )
<cls> <noptr> sd pkts can bayer ( <ptr> gsp ca dev <dot> <ptr> data <dot> <noptr> len )
<cls> <noptr> rv ins selection ( <ptr> file <dot> <ptr> f h <dot> <ptr> s )
<cls> <noptr> saa g input status ( <ptr> sd <dot> <ptr> p status )
<cls> <ptr> pvr buffer state decode ( <noptr> st )
<cls> <noptr> get frame size raw nv ub wc ( <noptr> width <dot> <noptr> height )
<cls> <noptr> b disp dbg perf end ( <ptr> b disp )
<cls> <noptr> ov probe ( <ptr> gsp ca dev )
<cls> <noptr> vpx fe init ( <ptr> fe )
<cls> <noptr> wm xic init ( )
<cls> <noptr> usb d sbr resume ( <ptr> int f )
<cls> <noptr> six radio g frequency ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> ava v stop ( <ptr> av <dot> <noptr> av )
<cls> <ptr> find format by fourcc ( <ptr> isc <dot> <noptr> fourcc )
<cls> <noptr> m nh list invalidate range start ( <ptr> m mnm m <dot> <ptr> range )
<cls> <noptr> adv ce ctx raw status ( <ptr> sd <dot> <noptr> tx raw status )
<cls> <noptr> tegra dev freq update avg w mark ( <ptr> tegra <dot> <ptr> dev )
<cls> <noptr> b csp pkt cull ( <ptr> b csp )
<cls> <noptr> coda write base ( <ptr> ctx <dot> <ptr> q data <dot> <ptr> buf <dot> <noptr> reg y )
<cls> <noptr> tof w output mode ( <noptr> mode )
<cls> <noptr> k mem leak lateinit ( )
<cls> <noptr> cma free mem ( <ptr> cma <dot> <noptr> count )
<cls> <noptr> v op ext int handler ( <noptr> irq <dot> <ptr> data )
<cls> <noptr> omap is pc cdc cleanup ( <ptr> isp )
<cls> <noptr> dib risc mem setup ( <ptr> state <dot> <noptr> cmd )
<cls> <noptr> mtk jpegs fmt vid cap m plane ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> io write and or ( <ptr> sd <dot> <noptr> reg <dot> <noptr> mask <dot> <noptr> val )
<cls> <noptr> huge tlb cgroup move parent ( <noptr> idx <dot> <ptr> h cg <dot> <ptr> page )
<cls> <noptr> z spool dec isolated ( <ptr> pool )
<cls> <noptr> sci f add client dev ( <ptr> dev <dot> <ptr> si )
<cls> <noptr> get bytes per pixel ( <ptr> v pfe <dot> <ptr> fmt )
<cls> <noptr> free add partial show ( <ptr> s <dot> <ptr> buf )
<cls> <noptr> dst type print ( <ptr> state <dot> <noptr> type )
<cls> <noptr> solo video in isr ( <ptr> solo dev )
<cls> <noptr> print shadow for address ( <ptr> addr )
<cls> <noptr> check vma flags ( <ptr> vma <dot> <noptr> gup flags )
<cls> <noptr> wm irq enable ( <ptr> data )
<cls> <ptr> v mem map pmd populate ( <ptr> pud <dot> <noptr> addr <dot> <noptr> node )
<cls> <noptr> ln b p set tone ( <ptr> fe <dot> <noptr> tone )
<cls> <ptr> vbd mas g attach dma buf ( <ptr> dev <dot> <ptr> d buf <dot> <noptr> size <dot> <noptr> dma dir )
<cls> <noptr> v op interlaced ( <ptr> vh )
<cls> <noptr> vs pbr x write ( <ptr> br x <dot> <ptr> dl b <dot> <noptr> reg <dot> <noptr> data )
<cls> <noptr> pvr altera load ( <ptr> b tv <dot> <ptr> micro <dot> <noptr> micro len )
<cls> <noptr> hex ium cleanup module ( )
<cls> <noptr> tw x pcm prepare ( <ptr> ss )
<cls> <noptr> invalidate exceptional entry ( <ptr> mapping <dot> <noptr> index <dot> <ptr> entry )
<cls> <noptr> get swap page ( <ptr> page )
<cls> <noptr> snd tea x g tuner ( <ptr> tea <dot> <ptr> v )
<cls> <noptr> saa enum fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> frame size ( <noptr> w <dot> <noptr> h <dot> <noptr> fmt )
<cls> <noptr> adv x xs register ( <ptr> sd <dot> <ptr> reg )
<cls> <noptr> em xx accumulator set ( <ptr> dev <dot> <noptr> xmin <dot> <noptr> xmax <dot> <noptr> ymin <dot> <noptr> ymax )
<cls> <noptr> gsc set pref buf ( <ptr> gsc <dot> <ptr> frm )
<cls> <noptr> ov set frame rate legacy ( <ptr> sd <dot> <ptr> tp f )
<cls> <noptr> me it xe remove ( <ptr> pdev )
<cls> <noptr> dst set inversion ( <ptr> state <dot> <noptr> inversion )
<cls> <noptr> security x frm state free ( <ptr> x )
<cls> <noptr> coda encoder queue init ( <ptr> priv <dot> <ptr> src v q <dot> <ptr> dst v q )
<cls> <noptr> fim c is unregister sub devs ( <ptr> is )
<cls> <noptr> vsp pipeline run ( <ptr> pipe )
<cls> <noptr> add deltas ( <ptr> deltas <dot> <ptr> ref <dot> <noptr> stride <dot> <noptr> ref step )
<cls> <noptr> shmem mapping ( <ptr> mapping )
<cls> <noptr> vm memory committed ( )
<cls> <noptr> m fill zero page pte ( <ptr> dst m m <dot> <ptr> dst pmd <dot> <ptr> dst vma <dot> <noptr> dst addr )
<cls> <noptr> mp tfc set fc port page defaults ( <ptr> ioc )
<cls> <noptr> upd s register ( <ptr> sd <dot> <ptr> reg )
<cls> <noptr> configure custom video timings ( <ptr> sd <dot> <ptr> bt )
<cls> <noptr> rb spread bit ( <ptr> r bsp )
<cls> <noptr> mark page accessed ( <ptr> page )
<cls> <noptr> cam if try crop ( <ptr> cam if <dot> <ptr> r )
<cls> <noptr> alc or resume ( <ptr> dev )
<cls> <noptr> alloc contig migrate range ( <ptr> cc <dot> <noptr> start <dot> <noptr> end )
<cls> <noptr> m rst set params ( <ptr> fe )
<cls> <noptr> em press enum fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> c x read eeprom ( <ptr> c x <dot> <ptr> tv )
<cls> <noptr> snd tea x get freq ( <ptr> tea )
<cls> <noptr> ene set idle ( <ptr> r dev <dot> <noptr> idle )
<cls> <ptr> check num buf s ( )
<cls> <noptr> shmem x attr handler set ( <ptr> handler <dot> <ptr> unused <dot> <ptr> inode <dot> <ptr> name <dot> <ptr> value <dot> <noptr> size <dot> <noptr> flags )
<cls> <noptr> vim csc as stream ( <ptr> sd <dot> <noptr> enable )
<cls> <noptr> b tmr v l setup ( <ptr> h dev )
<cls> <noptr> sci f off to dma addr ( <ptr> window <dot> <noptr> off <dot> <ptr> nr bytes <dot> <ptr> iter )
<cls> <noptr> l k dtm corrupt stack ( )
<cls> <noptr> dma free attrs ( <ptr> dev <dot> <noptr> size <dot> <ptr> cpu addr <dot> <noptr> dma handle <dot> <noptr> attrs )
<cls> <noptr> vivid thread vid cap tick ( <ptr> dev <dot> <noptr> dropped buf s )
<cls> <noptr> vm balloon cmd ( <ptr> b <dot> <noptr> cmd <dot> <noptr> arg <dot> <noptr> arg <dot> <ptr> result )
<cls> <noptr> mt init ( <ptr> fe )
<cls> <noptr> sram add pool ( <ptr> sram <dot> <ptr> block <dot> <noptr> start <dot> <ptr> part )
<cls> <noptr> vm balloon vmc i cleanup ( <ptr> b )
<cls> <noptr> stv x get agc min level ( <ptr> state )
<cls> <noptr> tw l audio remove ( <ptr> pdev )
<cls> <noptr> resizer link validate ( <ptr> sd <dot> <ptr> link <dot> <ptr> source fmt <dot> <ptr> sink fmt )
<cls> <ptr> smi add ic client ( <ptr> adapter <dot> <ptr> info )
<cls> <noptr> a kvc m resume ( <ptr> dev )
<cls> <noptr> c x mdl sendto dvb ( <ptr> s <dot> <ptr> mdl )
<cls> <noptr> net up unid vbc is lot shutdown ( <ptr> en <dot> <noptr> slot )
<cls> <noptr> ic black hole ( <ptr> h dw <dot> <noptr> ic addr <dot> <ptr> w data <dot> <noptr> w len <dot> <ptr> r data <dot> <noptr> r len )
<cls> <noptr> m sps tuner ( <ptr> sd <dot> <ptr> vt )
<cls> <noptr> copy user huge page ( <ptr> dst <dot> <ptr> src <dot> <noptr> addr hint <dot> <ptr> vma <dot> <noptr> pages per huge page )
<cls> <noptr> px a camera p data from dt ( <ptr> dev <dot> <ptr> pc dev <dot> <ptr> asd )
<cls> <noptr> delta mjpeg get frame ( <ptr> p ctx <dot> <dptr> frame )
<cls> <noptr> k compact d run ( <noptr> nid )
<cls> <noptr> tfe ppv r update l na ( <ptr> fe <dot> <noptr> agc global )
<cls> <noptr> run show ( <ptr> k obj <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> max tsc irq ( <noptr> irq <dot> <ptr> data )
<cls> <noptr> pti port shutdown ( <ptr> port )
<cls> <noptr> z ( <ptr> fe <dot> <noptr> r f freq hz )
<cls> <noptr> isset fd config blink mode ( <ptr> is <dot> <noptr> val )
<cls> <noptr> vpx s ctrl ( <ptr> ctrl )
<cls> <ptr> check force pat ( )
<cls> <noptr> v do a context configure ( <ptr> ctx <dot> <noptr> width <dot> <noptr> height <dot> <noptr> pixel format )
<cls> <noptr> ccd cls c wait pre fetch ( <ptr> c cdc )
<cls> <ptr> check num buffers ( )
<cls> <noptr> m tt power off ( <ptr> m tt )
<cls> <noptr> dvb front end detach ( <ptr> fe )
<cls> <noptr> bt tv read gpio ( <noptr> card <dot> <ptr> data )
<cls> <noptr> c xxx tuner post channel change ( <ptr> dev )
<cls> <noptr> tw fini dev ( <ptr> pci dev )
<cls> <noptr> fails lab show ( <ptr> s <dot> <ptr> buf )
<cls> <noptr> bd i register owner ( <ptr> bd i <dot> <ptr> owner )
<cls> <noptr> b csp timed event ( <ptr> t )
<cls> <noptr> free sched domains ( <noptr> doms <dot> <noptr> n doms )
<cls> <noptr> show name ( <ptr> class dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> c x get fec ( <ptr> state <dot> <ptr> fec )
<cls> <noptr> m rst driver init ( )
<cls> <noptr> ce u write ( <ptr> priv <dot> <noptr> reg offs <dot> <noptr> data )
<cls> <noptr> skb af get sel rect ( <noptr> pad <dot> <noptr> target )
<cls> <noptr> cma bitmap pages to bits ( <ptr> cma <dot> <noptr> pages )
<cls> <noptr> m cam clk disable ( <ptr> m cam )
<cls> <noptr> tc x irq unmap ( <ptr> d <dot> <noptr> vir q )
<cls> <noptr> sms cic probe ( <ptr> ic <dot> <ptr> id )
<cls> <noptr> enet x enable ( <ptr> dev )
<cls> <noptr> cal remove ( <ptr> pdev )
<cls> <noptr> stops can thread ( )
<cls> <noptr> cec gpio irqhandler ( <noptr> irq <dot> <ptr> priv )
<cls> <noptr> m ttm c umask set ( <ptr> client <dot> <noptr> command <dot> <noptr> mask <dot> <noptr> set )
<cls> <noptr> cit set lighting ( <ptr> gsp ca dev <dot> <noptr> val )
<cls> <noptr> atmel h lcd c probe ( <ptr> pdev )
<cls> <noptr> dcm i release ( <ptr> file )
<cls> <noptr> av send dis eq c msg ( <ptr> budget <dot> <noptr> len <dot> <ptr> msg <dot> <noptr> burst )
<cls> <noptr> flex cop pci remove ( <ptr> pdev )
<cls> <noptr> venc set i internal ( <ptr> sd )
<cls> <noptr> bt g input status ( <ptr> sd <dot> <ptr> status )
<cls> <noptr> tw l probe ( <ptr> client <dot> <ptr> id )
<cls> <noptr> nolock std i ( <ptr> sd )
<cls> <noptr> d m read uc blocks ( <ptr> fe <dot> <ptr> uc blocks )
<cls> <noptr> dax unregister notifier ( <ptr> dev <dot> <ptr> nb <dot> <noptr> events )
<cls> <ptr> gru find lock gts ( <noptr> v addr )
<cls> <noptr> pt driver init ( )
<cls> <noptr> get default free blocks flags ( <ptr> inode )
<cls> <noptr> m pts as remove ( <ptr> pdev )
<cls> <noptr> d aic driver init ( )
<cls> <noptr> get device outbound ( <ptr> hw )
<cls> <noptr> cam get response ( <ptr> gsp ca dev <dot> <noptr> reg <dot> <noptr> verbose )
<cls> <noptr> c xxx read ctrl reg ( <ptr> dev <dot> <noptr> req <dot> <noptr> reg <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> a uic register ( <ptr> dev )
<cls> <noptr> page evict able ( <ptr> page )
<cls> <noptr> m anti shif read mem ( <ptr> ca <dot> <noptr> addr )
<cls> <noptr> tif m xx isr ( <noptr> irq <dot> <ptr> devid )
<cls> <noptr> fim c queue setup ( <ptr> v q <dot> <ptr> num buffers <dot> <ptr> num planes <dot> <noptr> sizes <dot> <ptr> alloc devs )
<cls> <noptr> adv init ( <ptr> state )
<cls> <noptr> c xxx do copy ( <ptr> dev <dot> <ptr> dma q <dot> <ptr> pbuffer <dot> <noptr> bytesto copy )
<cls> <noptr> snc short command ( <ptr> gsp ca dev <dot> <ptr> command )
<cls> <noptr> ves x sleep ( <ptr> fe )
<cls> <noptr> me ime driver exit ( )
<cls> <noptr> c ill init ( <ptr> cir buf <dot> <ptr> c i w buf <dot> <noptr> size )
<cls> <noptr> v dp write ( <ptr> sd <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> epi rcu free ( <ptr> head )
<cls> <noptr> mem cgroup write ( <ptr> of <dot> <ptr> buf <dot> <noptr> nbytes <dot> <noptr> off )
<cls> <noptr> ab get set reg ( <ptr> file <dot> <ptr> user buf <dot> <noptr> count <dot> <ptr> p pos )
<cls> <noptr> air spy free stream buf s ( <ptr> s )
<cls> <noptr> l k dtm user copy heap white list to ( )
<cls> <noptr> vm balloon init ( )
<cls> <noptr> bt usb recv bulk intel ( <ptr> data <dot> <ptr> buffer <dot> <noptr> count )
<cls> <noptr> td apor ( <ptr> fe )
<cls> <noptr> bt usb mtk func query ( <ptr> h dev )
<cls> <noptr> gru steal context ( <ptr> gts )
<cls> <noptr> me it xe input payload write ( <ptr> dev <dot> <noptr> idx <dot> <noptr> value )
<cls> <noptr> store val any ( <ptr> cip <dot> <noptr> custom fl <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> vbo psv dec start streaming ( <ptr> q <dot> <noptr> count )
<cls> <noptr> em xx wait until ac features equals ( <ptr> dev <dot> <noptr> expected feat )
<cls> <noptr> td a write ( <ptr> sd <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> iv tv yuv setup frame ( <ptr> it v <dot> <ptr> args )
<cls> <noptr> tw x probe ( <ptr> pci dev <dot> <ptr> pci id )
<cls> <noptr> debug core sight ( <ptr> h dev <dot> <ptr> args )
<cls> <noptr> t dag tuner ( <ptr> sd <dot> <ptr> t )
<cls> <noptr> mce usb dev disconnect ( <ptr> int f )
<cls> <noptr> move pages to lru ( <ptr> lru vec <dot> <ptr> list )
<cls> <noptr> object nos can ( <noptr> ptr )
<cls> <noptr> vps m px probe ( <ptr> client <dot> <ptr> id )
<cls> <noptr> c xir init ( <ptr> core <dot> <ptr> pci )
<cls> <noptr> v l ctrls ctrl string ( <ptr> ctrl <dot> <ptr> s )
<cls> <noptr> dib pread ber ( <ptr> fe <dot> <ptr> ber )
<cls> <noptr> fim c isp sub devs power ( <ptr> sd <dot> <noptr> on )
<cls> <noptr> tua driver init ( )
<cls> <noptr> init device ( <ptr> state )
<cls> <noptr> page file index ( <ptr> page )
<cls> <noptr> dvb usb media device unregister ( <ptr> adap )
<cls> <noptr> me ime pg legacy exit sync ( <ptr> dev )
<cls> <noptr> vid ioc g fmt sdr cap ( <ptr> file <dot> <ptr> f h <dot> <ptr> f )
<cls> <noptr> isp video capture queue setup ( <ptr> v q <dot> <ptr> num buffers <dot> <ptr> num planes <dot> <noptr> sizes <dot> <ptr> alloc devs )
<cls> <noptr> try online node ( <noptr> nid )
<cls> <noptr> dib usb power ctrl ( <ptr> d <dot> <noptr> onoff )
<cls> <noptr> mem c groupid get many ( <ptr> mem cg <dot> <noptr> n )
<cls> <noptr> try or set cluster ( <ptr> f h <dot> <ptr> master <dot> <noptr> set <dot> <noptr> ch flags )
<cls> <noptr> lg read lock status ( <ptr> state <dot> <ptr> acq lock <dot> <ptr> sync lock )
<cls> <noptr> m x rc query ( <ptr> d <dot> <ptr> event <dot> <ptr> state )
<cls> <noptr> c pread ( <ptr> sd <dot> <noptr> reg <dot> <noptr> mask )
<cls> <noptr> mpt spi write qas ( <ptr> star get <dot> <noptr> qas )
<cls> <noptr> v l enum freq bands ( <ptr> ops <dot> <ptr> file <dot> <ptr> f h <dot> <ptr> arg )
<cls> <noptr> em xx write regs req ( <ptr> dev <dot> <noptr> req <dot> <noptr> reg <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> mantis ca write attr mem ( <ptr> en <dot> <noptr> slot <dot> <noptr> addr <dot> <noptr> data )
<cls> <noptr> get swap page oftype ( <noptr> type )
<cls> <noptr> cio pci config setup ( <ptr> dev )
<cls> <noptr> c x usb ic xfer ( <ptr> adap <dot> <noptr> msg <dot> <noptr> num )
<cls> <noptr> resizer try format ( <ptr> res <dot> <ptr> cfg <dot> <noptr> pad <dot> <ptr> fmt <dot> <noptr> which )
<cls> <noptr> isp video query cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> cap )
<cls> <noptr> pci endpoint test msi irq ( <ptr> test <dot> <noptr> msi num <dot> <noptr> m six )
<cls> <noptr> iv tv init mpeg decoder ( <ptr> it v )
<cls> <noptr> c x g input ( <ptr> file <dot> <ptr> f h <dot> <ptr> i )
<cls> <noptr> preview init entities ( <ptr> prev )
<cls> <noptr> max tuner f freq ( <ptr> ctx <dot> <noptr> freq <dot> <noptr> h sls )
<cls> <noptr> da register writeable ( <ptr> dev <dot> <noptr> reg )
<cls> <noptr> mtv enum mbus code ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> code )
<cls> <noptr> mt kir probe ( <ptr> pdev )
<cls> <noptr> v l print request buffers ( <ptr> arg <dot> <noptr> write only )
<cls> <noptr> k mem rcu free ( <ptr> head )
<cls> <noptr> param set k gdb ts var ( <ptr> k message <dot> <ptr> kp )
<cls> <noptr> mpt scsi h change queue depth ( <ptr> s dev <dot> <noptr> q depth )
<cls> <noptr> adv get pad format ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> format )
<cls> <noptr> mei hbm cl notify stop res ( <ptr> dev <dot> <ptr> cl <dot> <ptr> cmd )
<cls> <noptr> net up uni dvb queue init ( <ptr> dma <dot> <ptr> vb queue )
<cls> <ptr> hl cb get ( <ptr> h dev <dot> <ptr> mgr <dot> <noptr> handle )
<cls> <noptr> mei irq write handler ( <ptr> dev <dot> <ptr> c mpl list )
<cls> <noptr> po set exposure ( <ptr> gsp ca dev <dot> <noptr> val )
<cls> <noptr> msb mark page bad ( <ptr> msb <dot> <noptr> p ba <dot> <noptr> page )
<cls> <noptr> mtk v dec flush decoder ( <ptr> ctx )
<cls> <noptr> current may throttle ( )
<cls> <noptr> vbo psv dec buf queue ( <ptr> vb )
<cls> <noptr> get n extra size ( <ptr> ra <dot> <noptr> max )
<cls> <noptr> mic ready ( <ptr> c dev )
<cls> <noptr> pcm init ( )
<cls> <noptr> med usa video init ( <ptr> dev )
<cls> <noptr> s cms stream ( <ptr> state <dot> <ptr> sd <dot> <noptr> on )
<cls> <noptr> p cpu chunk de populated ( <ptr> chunk <dot> <noptr> page start <dot> <noptr> page end )
<cls> <noptr> se sys m sync ( <noptr> start <dot> <noptr> len <dot> <noptr> flags )
<cls> <noptr> vsp video release buffers ( <ptr> video )
<cls> <noptr> ir work ( <ptr> work )
<cls> <noptr> v ls tuner ( <ptr> ops <dot> <ptr> file <dot> <ptr> f h <dot> <ptr> arg )
<cls> <noptr> h va buf queue ( <ptr> vb )
<cls> <noptr> vim cv dev link validate ( <ptr> link )
<cls> <noptr> m tt enum frame size ( <ptr> sub dev <dot> <ptr> cfg <dot> <ptr> fse )
<cls> <noptr> sp mfc configure port memory ( <ptr> mfc dev )
<cls> <noptr> init vb v l buffer ( <ptr> vb )
<cls> <noptr> solo ics top ( <ptr> solo dev )
<cls> <noptr> wm x device shutdown ( <ptr> wm x )
<cls> <noptr> iv tv d made c start xfer ( <ptr> s )
<cls> <noptr> snd c x close ( <ptr> sub stream )
<cls> <noptr> fim ch w set main scaler ( <ptr> ctx )
<cls> <noptr> f m r x set channel spacing ( <ptr> f m dev <dot> <noptr> spacing )
<cls> <ptr> check radio antenna ( )
<cls> <noptr> tm usb probe ( <ptr> interface <dot> <ptr> id )
<cls> <ptr> swap info get ( <noptr> entry )
<cls> <noptr> mem cg write event control ( <ptr> of <dot> <ptr> buf <dot> <noptr> nbytes <dot> <noptr> off )
<cls> <noptr> page cache next miss ( <ptr> mapping <dot> <noptr> index <dot> <noptr> max scan )
<cls> <noptr> ovs h flip ( <ptr> sd <dot> <noptr> value )
<cls> <noptr> c port store flash access ( <ptr> dev <dot> <noptr> status )
<cls> <noptr> vmc i ctx q p destroy ( <ptr> context <dot> <noptr> handle )
<cls> <noptr> gru send message gpa ( <ptr> m q d <dot> <ptr> mesg <dot> <noptr> bytes )
<cls> <noptr> min partial store ( <ptr> s <dot> <ptr> buf <dot> <noptr> length )
<cls> <ptr> check dvb buf ts cnt ( )
<cls> <noptr> td axs ctrl ( <ptr> ctrl )
<cls> <noptr> vivid radio read ( <ptr> file <dot> <ptr> buf <dot> <noptr> size <dot> <ptr> offset )
<cls> <noptr> ska power off ( <ptr> sensor )
<cls> <noptr> fim cmm try selection ( <ptr> ctx <dot> <ptr> s )
<cls> <noptr> rcs i irq ( <noptr> irq <dot> <ptr> data )
<cls> <noptr> inc numa state ( <ptr> zone <dot> <noptr> item )
<cls> <noptr> k frees gl ( <ptr> s gl <dot> <noptr> s gl dma <dot> <ptr> buf list <dot> <ptr> ioc )
<cls> <noptr> ak close ( <ptr> sd <dot> <ptr> f h )
<cls> <noptr> pci endpoint test free irq vectors ( <ptr> test )
<cls> <noptr> iv tv dual watch ( <ptr> it v )
<cls> <noptr> arizona irq set wake ( <ptr> data <dot> <noptr> on )
<cls> <noptr> ov pkts can ( <ptr> gsp ca dev <dot> <ptr> data <dot> <noptr> len )
<cls> <noptr> uvc ioctl ctrl map ( <ptr> chain <dot> <ptr> x map )
<cls> <noptr> l irc bpf detach ( <ptr> rc dev <dot> <ptr> prog )
<cls> <noptr> rain send and wait ( <ptr> rain <dot> <ptr> cmd <dot> <ptr> reply )
<cls> <noptr> philip stu request firmware ( <ptr> fe <dot> <dptr> fw <dot> <ptr> name )
<cls> <noptr> tm tuner callback ( <ptr> ptr <dot> <noptr> component <dot> <noptr> command <dot> <noptr> arg )
<cls> <noptr> s probe ( <ptr> client <dot> <ptr> id )
<cls> <noptr> af reset post v iter b i ( <ptr> fe )
<cls> <noptr> wl f m rds ( <ptr> radio )
<cls> <noptr> wb cir suspend ( <ptr> device <dot> <noptr> state )
<cls> <noptr> b disp s ctrl ( <ptr> ctrl )
<cls> <noptr> dib x is ic done ( <ptr> mst )
<cls> <noptr> me unknown ( <ptr> p <dot> <noptr> pfn )
<cls> <noptr> insert tom m slots hash ( <ptr> m m <dot> <ptr> mms lot )
<cls> <noptr> rtl sdr driver init ( )
<cls> <noptr> set first obj offset ( <ptr> page <dot> <noptr> offset )
<cls> <noptr> a zci un init ( <ptr> d )
<cls> <noptr> em xx copy video ( <ptr> dev <dot> <ptr> buf <dot> <ptr> usb buf <dot> <noptr> len )
<cls> <noptr> disclaim vb i lines ( <ptr> b tv )
<cls> <noptr> vcodec v pus end msg ( <ptr> v pu <dot> <ptr> msg <dot> <noptr> len )
<cls> <noptr> fim c lite config update ( <ptr> fim c )
<cls> <noptr> set radio freq ( <ptr> fe <dot> <noptr> freq <dot> <noptr> mono )
<cls> <noptr> hdp vr disconnect ( <ptr> interface )
<cls> <noptr> cam ifs c x hw set scaler ( <ptr> vp )
<cls> <noptr> em xx c vol new ( <ptr> card <dot> <ptr> dev <dot> <ptr> name <dot> <noptr> id )
<cls> <noptr> c xcopy buf to user ( <ptr> s <dot> <ptr> buf <dot> <ptr> u buf <dot> <noptr> u count <dot> <ptr> stop )
<cls> <noptr> v write ( <ptr> buf <dot> <ptr> addr <dot> <noptr> count )
<cls> <noptr> go y a init dma q mans ( <ptr> h dev )
<cls> <noptr> pkt sys image version ( <ptr> pkt )
<cls> <noptr> rtl ic gate work ( <ptr> work )
<cls> <noptr> val reply ( <ptr> gsp ca dev <dot> <ptr> reply <dot> <noptr> rc )
<cls> <noptr> sp mfc final pm ( <ptr> dev )
<cls> <ptr> get deferred split queue ( <ptr> page )
<cls> <noptr> rsi hci open ( <ptr> h dev )
<cls> <noptr> m pts as log info ( <ptr> ioc <dot> <noptr> log info <dot> <noptr> cb idx )
<cls> <noptr> pt remove ( <ptr> pdev )
<cls> <noptr> fim c ish w load set file ( <ptr> is )
<cls> <noptr> set mpeg start width ( <ptr> demo d )
<cls> <ptr> checks aa user ptr ( )
<cls> <noptr> iv tv buf swap ( <ptr> buf )
<cls> <noptr> tc x device init ( <ptr> tc x )
<cls> <noptr> d ibm b x host init ( <ptr> state <dot> <noptr> risc id )
<cls> <noptr> isc g fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> fmt )
<cls> <noptr> a speed video stop ( <ptr> video )
<cls> <noptr> dr xxx j init ( <ptr> fe )
<cls> <noptr> m xl x sf demo d get tps lock status ( <ptr> state <dot> <ptr> tps lock )
<cls> <noptr> l gdt sleep ( <ptr> fe )
<cls> <noptr> white list ( <ptr> cl dev )
<cls> <noptr> tvp g std ( <ptr> sd <dot> <ptr> std )
<cls> <noptr> mmu notifier invalidate range ( <ptr> m m <dot> <noptr> start <dot> <noptr> end )
<cls> <noptr> a gxx close ( <ptr> hu )
<cls> <noptr> mem block mark no map ( <noptr> base <dot> <noptr> size )
<cls> <ptr> check enc pcm buffers ( )
<cls> <noptr> t dax irq info ( <ptr> state <dot> <ptr> flags )
<cls> <noptr> scm g volatile ctrl ( <ptr> ctrl )
<cls> <noptr> da probe ( <ptr> client <dot> <ptr> id )
<cls> <noptr> vivid hsv enc cap ( <ptr> dev )
<cls> <noptr> sci frm a handle remote fences ( )
<cls> <noptr> go construct fw image ( <ptr> go <dot> <dptr> fw <dot> <ptr> fw len )
<cls> <noptr> mem cgevent wake ( <ptr> wait <dot> <noptr> mode <dot> <noptr> sync <dot> <ptr> key )
<cls> <noptr> ov power down ( <ptr> sensor )
<cls> <noptr> cma for each area ( <ptr> it <dot> <ptr> data )
<cls> <noptr> uv ( <ptr> part <dot> <ptr> msg <dot> <noptr> msg size <dot> <noptr> msg type )
<cls> <noptr> r vin power parallel ( <ptr> vin <dot> <noptr> on )
<cls> <noptr> prime ioc fifo s ( <ptr> ioc )
<cls> <ptr> free per cpu irq ( <noptr> irq <dot> <ptr> devid )
<cls> <noptr> pcf irq mask set ( <ptr> pcf <dot> <noptr> irq <dot> <noptr> mask )
<cls> <noptr> adv cec adap log addr ( <ptr> adap <dot> <noptr> addr )
<cls> <noptr> e dvb init ( <ptr> fe )
<cls> <noptr> video get ( <ptr> v dev )
<cls> <noptr> sci fun register driver ( <ptr> driver )
<cls> <noptr> z d demo d driver init ( )
<cls> <noptr> v dec probe ( <ptr> pdev )
<cls> <noptr> video buf dma free ( <ptr> dma )
<cls> <noptr> c x sram channel setup ( <ptr> dev <dot> <ptr> ch <dot> <noptr> bpl <dot> <noptr> risc )
<cls> <noptr> tw l irq set wake ( <ptr> d <dot> <noptr> on )
<cls> <noptr> snd tm hw params ( <ptr> sub stream <dot> <ptr> hw params )
<cls> <noptr> net upc i init ( <ptr> port )
<cls> <noptr> module unload free ( <ptr> mod )
<cls> <noptr> omap isp module sync idle ( <ptr> me <dot> <ptr> wait <dot> <ptr> stopping )
<cls> <noptr> m c xxx add sub device p data ( <ptr> m c xxx <dot> <ptr> format <dot> <ptr> p data <dot> <noptr> p data size )
<cls> <noptr> bt usb recv bulk ( <ptr> data <dot> <ptr> buffer <dot> <noptr> count )
<cls> <noptr> t wxs g setup ( <ptr> dev )
<cls> <noptr> stk copy video ( <ptr> dev <dot> <ptr> src <dot> <noptr> len )
<cls> <noptr> tps irq enable ( <ptr> data )
<cls> <noptr> dib set is dbt loop params ( <ptr> state <dot> <noptr> loop step )
<cls> <noptr> m init ( <ptr> gsp ca dev )
<cls> <noptr> vs remove ( <ptr> client )
<cls> <noptr> exy nos set bypass dram timings ( <ptr> dmc )
<cls> <noptr> adv program std ( <ptr> state )
<cls> <noptr> ts tuner gate ctrl ( <ptr> fe <dot> <noptr> offset )
<cls> <ptr> z l attach ( <ptr> config <dot> <ptr> ic )
<cls> <noptr> tm prepare i soc ( <ptr> dev )
<cls> <noptr> fim c ish w set param ( <ptr> is )
<cls> <ptr> p cpu chunk addr search ( <ptr> addr )
<cls> <noptr> stb set voltage ( <ptr> fe <dot> <noptr> voltage )
<cls> <noptr> rc freer x device ( <ptr> dev )
<cls> <ptr> m pts as find phy info by phys disk num ( <ptr> ioc <dot> <noptr> phys disk num <dot> <noptr> channel <dot> <noptr> id )
<cls> <ptr> v pbe display get other win layer ( <ptr> disp dev <dot> <ptr> layer )
<cls> <noptr> lru vec init ( <ptr> lru vec )
<cls> <noptr> c x usb dtt tuner attach ( <ptr> adap )
<cls> <noptr> a speed video write ( <ptr> video <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> alc or suspend ( <ptr> dev )
<cls> <noptr> cobalt soutput ( <ptr> file <dot> <ptr> priv f h <dot> <noptr> i )
<cls> <noptr> eg volatile ctrl ( <ptr> ctrl )
<cls> <noptr> fim c lite try fmt ( <ptr> fim c <dot> <ptr> pix m <dot> <dptr> f fmt )
<cls> <noptr> d bell notify as guest ( <noptr> handle <dot> <noptr> priv flags )
<cls> <noptr> iv tv enum aud out ( <ptr> file <dot> <ptr> f h <dot> <ptr> vin )
<cls> <noptr> cade t get tune ( <ptr> dev )
<cls> <ptr> ov get p data ( <ptr> client )
<cls> <ptr> get locked pte ( <ptr> m m <dot> <noptr> addr <dot> <dptr> pt l )
<cls> <noptr> vm balloon lock op ( <ptr> b <dot> <noptr> numpages <dot> <noptr> page size <dot> <noptr> op )
<cls> <noptr> delete from page cache ( <ptr> page )
<cls> <noptr> hci uart tx complete ( <ptr> hu <dot> <noptr> pkt type )
<cls> <noptr> huge tlb cgroup have usage ( <ptr> h cg )
<cls> <noptr> wl f m rds off ( <ptr> radio )
<cls> <noptr> b disp query cap ( <ptr> file <dot> <ptr> f h <dot> <ptr> cap )
<cls> <noptr> saas etc c ( <ptr> sd <dot> <ptr> data )
<cls> <noptr> f wht encode frame ( <ptr> frm <dot> <ptr> ref frm <dot> <ptr> cf <dot> <noptr> is intra <dot> <noptr> next is intra <dot> <noptr> width <dot> <noptr> height <dot> <noptr> stride <dot> <noptr> chroma stride )
<cls> <ptr> shmem get link ( <ptr> dentry <dot> <ptr> inode <dot> <ptr> done )
<cls> <noptr> tim b radio platform driver init ( )
<cls> <ptr> find dst vma ( <ptr> dst m m <dot> <noptr> dst start <dot> <noptr> len )
<cls> <noptr> m cam cam init ( <ptr> cam )
<cls> <noptr> wss insert ( <ptr> wss <dot> <noptr> val <dot> <noptr> size )
<cls> <noptr> v pus bop ( <ptr> d <dot> <noptr> cmd <dot> <ptr> out <dot> <noptr> out len <dot> <ptr> in <dot> <noptr> in len <dot> <noptr> msec )
<cls> <noptr> ov set format ( <ptr> ov )
<cls> <noptr> cs lisa dsp memory ( <noptr> reg )
<cls> <noptr> mic x reset fw ready ( <ptr> m dev )
<cls> <noptr> td a set if ( <ptr> fe <dot> <noptr> bw )
<cls> <noptr> hist setup regs ( <ptr> hist <dot> <ptr> priv )
<cls> <noptr> hdp vr function ality ( <ptr> adapter )
<cls> <noptr> uvc video decode end ( <ptr> stream <dot> <ptr> buf <dot> <ptr> data <dot> <noptr> len )
<cls> <noptr> techni sat usb front end attach ( <ptr> a )
<cls> <noptr> handle arr calc size ( <noptr> capacity )
<cls> <noptr> put and wait on page locked ( <ptr> page )
<cls> <ptr> no page table ( <ptr> vma <dot> <noptr> flags )
<cls> <noptr> b tt vir start ( <ptr> ir )
<cls> <noptr> coda bit release ( <ptr> ctx )
<cls> <noptr> si set front end dvb c ( <ptr> fe )
<cls> <noptr> snd c xxx hw capture params ( <ptr> sub stream <dot> <ptr> hw params )
<cls> <noptr> sci f get node info resp ( <ptr> sci f dev <dot> <ptr> msg )
<cls> <noptr> dvb front end stop ( <ptr> fe )
<cls> <noptr> ovs auto exp ( <ptr> sd <dot> <noptr> value )
<cls> <noptr> vp if try fmt vid out ( <ptr> file <dot> <ptr> priv <dot> <ptr> fmt )
<cls> <noptr> to codec type ( <noptr> pix fmt )
<cls> <noptr> de interlace read ( <ptr> dev <dot> <noptr> reg )
<cls> <noptr> adp set ctrl ( <ptr> ctrl )
<cls> <noptr> b csp crc update ( <ptr> crc <dot> <noptr> d )
<cls> <noptr> h vas ctrl ( <ptr> ctrl )
<cls> <noptr> ska a initialize ctrls ( <ptr> ska a )
<cls> <noptr> follow pfn pte ( <ptr> vma <dot> <noptr> address <dot> <ptr> pte <dot> <noptr> flags )
<cls> <noptr> c x tun eric func ( <ptr> adapter )
<cls> <noptr> mouse dev free ( <ptr> dev )
<cls> <noptr> tw probe ( <ptr> client <dot> <ptr> id )
<cls> <noptr> se sys mmap pg off ( <noptr> addr <dot> <noptr> len <dot> <noptr> prot <dot> <noptr> flags <dot> <noptr> fd <dot> <noptr> pg off )
<cls> <noptr> sci f client rcvd ( <ptr> sci f dev <dot> <ptr> msg )
<cls> <noptr> mmu notifier unregister ( <ptr> subscription <dot> <ptr> m m )
<cls> <noptr> valid cvt gtf timings ( <ptr> timings )
<cls> <noptr> adv xx delayed work enable hot plug ( <ptr> work )
<cls> <noptr> c x video irq ( <ptr> dev <dot> <noptr> status )
<cls> <noptr> m i post unset alt ( <ptr> gsp ca dev )
<cls> <noptr> asf e read snr ( <ptr> fe <dot> <ptr> snr )
<cls> <noptr> v l device release sub dev node ( <ptr> v dev )
<cls> <noptr> add p otic driver exit ( )
<cls> <noptr> c x usb medi on register analog sub devs ( <ptr> dvb dev )
<cls> <noptr> dvb ca open ( <ptr> inode <dot> <ptr> file )
<cls> <noptr> v hci misc dev exit ( )
<cls> <noptr> gen wq e health thread running ( <ptr> cd )
<cls> <noptr> p cpu next un pop ( <ptr> bitmap <dot> <ptr> rs <dot> <ptr> re <dot> <noptr> end )
<cls> <noptr> td a cmd execute ( <ptr> dev <dot> <ptr> cmd )
<cls> <noptr> dib get slow adc val ( <ptr> state )
<cls> <noptr> play deferred ( <ptr> data )
<cls> <ptr> uvc ctrl data ( <ptr> ctrl <dot> <noptr> id )
<cls> <noptr> red zone store ( <ptr> s <dot> <ptr> buf <dot> <noptr> length )
<cls> <noptr> td a status ( <ptr> sd )
<cls> <noptr> enclosure exit ( )
<cls> <noptr> t mir urb received ( <ptr> urb )
<cls> <noptr> sun ics i sub dev init cfg ( <ptr> sub dev <dot> <ptr> cfg )
<cls> <noptr> sci f handle remove node ( <noptr> node )
<cls> <noptr> saa x g register ( <ptr> sd <dot> <ptr> reg )
<cls> <noptr> page ref mod and test ( <ptr> page <dot> <noptr> v <dot> <noptr> ret )
<cls> <noptr> q com coin cell probe ( <ptr> pdev )
<cls> <noptr> sms dvb is dbt set front end ( <ptr> fe )
<cls> <noptr> select bad process ( <ptr> oc )
<cls> <noptr> red rat handle async ( <ptr> urb )
<cls> <noptr> s rpc detect ( <ptr> client )
<cls> <noptr> tc erase bks v ( <ptr> sd )
<cls> <ptr> tp g color enc str ( <noptr> color enc )
<cls> <noptr> a llvm events ( <ptr> ret )
<cls> <ptr> get fe ( <ptr> demux <dot> <noptr> type )
<cls> <noptr> calc speed ( <ptr> sd <dot> <noptr> numerator <dot> <noptr> denominator )
<cls> <noptr> mtk mdp unregister mmdevice ( <ptr> mdp )
<cls> <noptr> k gdb ts pre exp handler ( )
<cls> <noptr> c xxx init audio bulk ( <ptr> dev )
<cls> <noptr> mmu notifier put ( <ptr> mn )
<cls> <noptr> ath open ( <ptr> hu )
<cls> <noptr> resizer set crop params ( <ptr> res <dot> <ptr> input <dot> <ptr> output )
<cls> <noptr> fill bufferdesc ( <ptr> buf <dot> <ptr> bd <dot> <noptr> response )
<cls> <noptr> smi app sel supported ( <ptr> sub dev <dot> <ptr> sel )
<cls> <noptr> usb urb kill ( <ptr> stream )
<cls> <noptr> flex copi c operation ( <ptr> fc <dot> <ptr> r )
<cls> <noptr> stv ter set clk pol ( <ptr> state <dot> <noptr> clock )
<cls> <noptr> stl l sleep state ( <ptr> st data <dot> <noptr> cmd )
<cls> <noptr> cec get e did phys addr ( <ptr> e did <dot> <noptr> size <dot> <ptr> offset )
<cls> <noptr> stv x read cnr ( <ptr> fe <dot> <ptr> cnr )
<cls> <noptr> six core is powered up ( <ptr> core )
<cls> <noptr> max set nco freq ( <ptr> ctx <dot> <noptr> nco freq )
<cls> <noptr> c x d tn rdm dts buf clear ( <ptr> tn r dmd <dot> <noptr> clear overflow flag <dot> <noptr> clear underflow flag <dot> <noptr> clear buf )
<cls> <noptr> red rat get timeout ( <ptr> r r )
<cls> <noptr> dnt v lived v bt demo d init ( <ptr> fe )
<cls> <noptr> b tmr v lsd io wakeup fw ( <ptr> priv )
<cls> <noptr> tpc clk show ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> perf show ( <ptr> s <dot> <ptr> data )
<cls> <noptr> em xx scaler set ( <ptr> dev <dot> <noptr> h <dot> <noptr> v )
<cls> <noptr> mem cgroup resize max ( <ptr> mem cg <dot> <noptr> max <dot> <noptr> mem sw )
<cls> <noptr> eeprom write ushort ( <ptr> adapter <dot> <noptr> tag <dot> <noptr> data )
<cls> <noptr> dnt v lived v bt pro demo d init ( <ptr> fe )
<cls> <noptr> n gene command ic read ( <ptr> dev <dot> <noptr> adr <dot> <ptr> out <dot> <noptr> out len <dot> <ptr> in <dot> <noptr> in len <dot> <noptr> flag )
<cls> <noptr> v pfe probe ( <ptr> pdev )
<cls> <noptr> red rat brightness set ( <ptr> led dev <dot> <noptr> brightness )
<cls> <noptr> sp mfc get d pb count v ( <ptr> dev )
<cls> <noptr> ts irq show ( <ptr> device <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> mantis uart init ( <ptr> mantis )
<cls> <noptr> ov power off ( <ptr> ov )
<cls> <noptr> rts xpm power saving ( <ptr> pcr )
<cls> <ptr> v l fw node bus type tostring ( <noptr> type )
<cls> <noptr> z swap pool put ( <ptr> pool )
<cls> <noptr> pwc free urb buffer ( <ptr> dev <dot> <noptr> size <dot> <ptr> buffer <dot> <noptr> dma handle )
<cls> <noptr> any see led ctrl ( <ptr> d <dot> <noptr> mode <dot> <noptr> interval )
<cls> <noptr> check negative ( <ptr> ref <dot> <noptr> start )
<cls> <noptr> l k dtm register c point ( <ptr> crash point <dot> <ptr> crash type )
<cls> <noptr> v v dump ( <ptr> sd )
<cls> <noptr> ske cg xs params ( <ptr> priv )
<cls> <noptr> h bt rtl suspend ( <ptr> h )
<cls> <noptr> si choose e control action ( <ptr> s dev <dot> <noptr> id <dot> <ptr> bit <dot> <ptr> mask <dot> <ptr> property <dot> <ptr> mul <dot> <dptr> table <dot> <ptr> size )
<cls> <noptr> rts xpc ims driver init ( )
<cls> <ptr> stv x attach ( <ptr> fe <dot> <ptr> config <dot> <ptr> ic )
<cls> <noptr> stv searchs rate coarse ( <ptr> fe )
<cls> <noptr> page idle bitmap read ( <ptr> file <dot> <ptr> k obj <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> pos <dot> <noptr> count )
<cls> <noptr> total map count ( <ptr> page )
<cls> <noptr> c x usb aver l gdt front end attach ( <ptr> adap )
<cls> <noptr> e aders ( <ptr> ioc <dot> <noptr> portnum )
<cls> <noptr> intel busy work ( <ptr> work )
<cls> <noptr> sparse init ( )
<cls> <noptr> uvc clear bit ( <ptr> data <dot> <noptr> bit )
<cls> <noptr> intell pss de assert reset ( <ptr> l pss )
<cls> <noptr> alloc cluster ( <ptr> si <dot> <noptr> idx )
<cls> <noptr> omap isp stat resume ( <ptr> stat )
<cls> <noptr> cobalt video input status show ( <ptr> s )
<cls> <ptr> uvc event entity find ctrl ( <ptr> entity <dot> <noptr> selector )
<cls> <noptr> ds driver init ( )
<cls> <noptr> c sect pfe front end attach ( <dptr> fe <dot> <ptr> c sect pfe <dot> <ptr> t sin <dot> <noptr> chan num )
<cls> <noptr> uvc meta v l set format ( <ptr> file <dot> <ptr> f h <dot> <ptr> format )
<cls> <noptr> mtk jpeg calc dma group ( <ptr> param )
<cls> <noptr> techni sat usb get ir ( <ptr> d )
<cls> <noptr> cec pin adap free ( <ptr> adap )
<cls> <noptr> iv tv g fmt vid cap ( <ptr> file <dot> <ptr> f h <dot> <ptr> fmt )
<cls> <noptr> rts x usb ms runtime resume ( <ptr> dev )
<cls> <noptr> d m driver init ( )
<cls> <noptr> tps device init ( <ptr> tps )
<cls> <noptr> mtm set auto white balance ( <ptr> mtm <dot> <noptr> on )
<cls> <noptr> exy nos jpeg get sub sampling mode ( <ptr> regs )
<cls> <noptr> cxa v write no retry ( <ptr> c x <dot> <noptr> addr <dot> <noptr> value )
<cls> <noptr> td a power ( <ptr> fe <dot> <noptr> enable )
<cls> <noptr> mem cg drain all list l rus ( <noptr> src idx <dot> <ptr> dst mem cg )
<cls> <noptr> bt tv reset audio ( <ptr> b tv )
<cls> <noptr> c sir x start ( <ptr> c sir x )
<cls> <noptr> gen wq ere load b istream ( <ptr> cd )
<cls> <noptr> q p memcpy to queue iter ( <ptr> queue <dot> <noptr> queue offset <dot> <ptr> from <dot> <noptr> size )
<cls> <noptr> m cam vb start streaming ( <ptr> v q <dot> <noptr> count )
<cls> <noptr> d ibm b x read ( <ptr> state <dot> <ptr> data <dot> <noptr> risc id <dot> <noptr> attr )
<cls> <noptr> vm balloon compaction deinit ( <ptr> b )
<cls> <noptr> snd c xxx capture pointer ( <ptr> sub stream )
<cls> <noptr> stl p set ( <ptr> state <dot> <noptr> stras <dot> <noptr> str bs )
<cls> <noptr> lg x release ( <ptr> fe )
<cls> <noptr> os denable rgb pix blend ( <ptr> sd <dot> <noptr> os dwin )
<cls> <noptr> ska init controls ( <ptr> sd )
<cls> <noptr> solo gpio clear ( <ptr> solo dev <dot> <noptr> value )
<cls> <noptr> d v bus bfe init ( <ptr> fe )
<cls> <noptr> c x usb ddm b power ctrl ( <ptr> d <dot> <noptr> onoff )
<cls> <noptr> go y a validated map kt mmu ( <ptr> h dev <dot> <ptr> parser <dot> <ptr> user dma pkt )
<cls> <noptr> v pu debug read ( <ptr> file <dot> <ptr> user buf <dot> <noptr> count <dot> <ptr> p pos )
<cls> <noptr> exy nos jpeg start ( <ptr> regs )
<cls> <noptr> scm isp command ( <ptr> state <dot> <noptr> command <dot> <noptr> data )
<cls> <noptr> six get all registers ( <ptr> radio )
<cls> <noptr> mt set params ( <ptr> fe )
<cls> <noptr> cec queue pin h pd event ( <ptr> adap <dot> <noptr> is high <dot> <noptr> ts )
<cls> <noptr> cam ss enable clocks ( <noptr> n clocks <dot> <ptr> clock <dot> <ptr> dev )
<cls> <noptr> stk phx c callback ( <ptr> ptr <dot> <noptr> component <dot> <noptr> command <dot> <noptr> arg )
<cls> <noptr> sms dvb get tune settings ( <ptr> fe <dot> <ptr> tune )
<cls> <noptr> preview set out addr ( <ptr> prev <dot> <noptr> addr )
<cls> <noptr> so log isr ( <ptr> solo dev )
<cls> <noptr> mic setup interrupts ( <ptr> m dev <dot> <ptr> pdev )
<cls> <noptr> me son a oce cga set log addr ( <ptr> adap <dot> <noptr> logical addr )
<cls> <noptr> walk pte range ( <ptr> pmd <dot> <noptr> addr <dot> <noptr> end <dot> <ptr> walk )
<cls> <ptr> check noerror inj ( )
<cls> <noptr> c x set input ( <ptr> file <dot> <ptr> priv <dot> <noptr> i )
<cls> <noptr> fault around bytes set ( <ptr> data <dot> <noptr> val )
<cls> <noptr> mei hbm cl res ( <ptr> dev <dot> <ptr> rs <dot> <noptr> fop type )
<cls> <noptr> reactivate swap slots cache ( )
<cls> <noptr> sdr cap buf queue ( <ptr> vb )
<cls> <noptr> eagle mux sel ( <ptr> b tv <dot> <noptr> input )
<cls> <noptr> pt init streams ( <ptr> pt )
<cls> <noptr> l m disable ( <ptr> l m )
<cls> <noptr> adv x write block ( <ptr> state <dot> <noptr> client page <dot> <noptr> init reg <dot> <ptr> val <dot> <noptr> val len )
<cls> <noptr> exy nos jpeg dri ( <ptr> regs <dot> <noptr> dri )
<cls> <noptr> tsc adc suspend ( <ptr> dev )
<cls> <noptr> c cdc seth wif params ( <ptr> params )
<cls> <noptr> irq to enable addr ( <noptr> id )
<cls> <noptr> gen two pix ( <ptr> tp g <dot> <noptr> buf <dot> <noptr> color <dot> <noptr> odd )
<cls> <noptr> find fmt from caps ( <ptr> caps <dot> <noptr> buf type <dot> <noptr> fmt )
<cls> <noptr> init r cmap his it v demo ( )
<cls> <noptr> tvp enum frame size ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> fse )
<cls> <noptr> xt pg get format ( <ptr> sub dev <dot> <ptr> cfg <dot> <ptr> fmt )
<cls> <noptr> igu an air get features ( <ptr> ir )
<cls> <noptr> venc is second field ( <ptr> disp dev )
<cls> <noptr> ibm asm free remote input dev ( <ptr> sp )
<cls> <noptr> flex cop pass dmx data ( <ptr> fc <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> page ext callback ( <ptr> self <dot> <noptr> action <dot> <ptr> arg )
<cls> <noptr> maybe k free parameter ( <ptr> param )
<cls> <noptr> dataset ( <ptr> state <dot> <noptr> dag ca <dot> <noptr> dag c w )
<cls> <noptr> stv x read signal strength ( <ptr> fe <dot> <ptr> strength )
<cls> <noptr> next present section nr ( <noptr> section nr )
<cls> <noptr> si read ( <ptr> state <dot> <noptr> reg <dot> <ptr> val <dot> <noptr> count )
<cls> <noptr> init r cmap odroid ( )
<cls> <noptr> strncpy from unsafe strict ( <ptr> dst <dot> <ptr> unsafe addr <dot> <noptr> count )
<cls> <noptr> tw frame interval get ( <ptr> input <dot> <ptr> frame interval )
<cls> <noptr> dcm igraph notify unbind ( <ptr> notifier <dot> <ptr> sd <dot> <ptr> asd )
<cls> <noptr> un use pd range ( <ptr> vma <dot> <ptr> pgd <dot> <noptr> addr <dot> <noptr> end <dot> <noptr> type <dot> <noptr> front swap <dot> <ptr> fs pages to un use )
<cls> <noptr> tif m maps g ( <ptr> sock <dot> <ptr> sg <dot> <noptr> n ents <dot> <noptr> direction )
<cls> <noptr> omap v out init ( )
<cls> <noptr> pvr context destroy ( <ptr> mp )
<cls> <noptr> huge page m advise ( <ptr> vma <dot> <ptr> vm flags <dot> <noptr> advice )
<cls> <noptr> sti h cec irqhandler ( <noptr> irq <dot> <ptr> priv )
<cls> <noptr> vivid vid caps selection ( <ptr> file <dot> <ptr> f h <dot> <ptr> s )
<cls> <noptr> bridge init ( <ptr> sd )
<cls> <noptr> c x dvb advise release ( <ptr> drv )
<cls> <noptr> tw l get sys clk ( <ptr> tw l )
<cls> <noptr> adv read hdmi pixel clock ( <ptr> sd )
<cls> <noptr> stv xx init controls ( <ptr> gsp ca dev )
<cls> <noptr> state eval encoder config ( <ptr> h dw )
<cls> <noptr> vb queue isbusy ( <ptr> v dev <dot> <ptr> file )
<cls> <noptr> shark read reg ( <ptr> tea <dot> <ptr> regret )
<cls> <noptr> m m ops v dec job abort ( <ptr> priv )
<cls> <noptr> alc or write ( <ptr> priv <dot> <noptr> val <dot> <noptr> addr )
<cls> <noptr> i cro code ( <ptr> state <dot> <ptr> pmc image <dot> <noptr> length )
<cls> <noptr> c xdr get front end algo ( <ptr> fe )
<cls> <noptr> m g register ( <ptr> sd <dot> <ptr> reg )
<cls> <noptr> asf w upload ( <ptr> bus adap )
<cls> <noptr> r vin set channel routing ( <ptr> vin <dot> <noptr> ch sel )
<cls> <noptr> mem cg free shrink er map rcu ( <ptr> head )
<cls> <noptr> xpc handle notify m q ack uv ( <ptr> ch <dot> <ptr> msg )
<cls> <noptr> trace k free ( <noptr> call site <dot> <ptr> ptr )
<cls> <noptr> ssb i wait mask ( <ptr> ssb i <dot> <noptr> set mask <dot> <noptr> clr mask )
<cls> <noptr> intel quar kic setup ( <ptr> pdev <dot> <ptr> cell )
<cls> <noptr> histo enum mbus code ( <ptr> sub dev <dot> <ptr> cfg <dot> <ptr> code )
<cls> <noptr> is free buddy page ( <ptr> page )
<cls> <noptr> sp mfc open ( <ptr> file )
<cls> <noptr> hlp m ops resume ( <ptr> dev )
<cls> <noptr> alter api d control ( <ptr> pid filt <dot> <noptr> pid <dot> <noptr> onoff )
<cls> <noptr> bcm setup ( <ptr> hu )
<cls> <noptr> mtk jpeg set default params ( <ptr> ctx )
<cls> <noptr> free boot mem with active regions ( <noptr> nid <dot> <noptr> max low pfn )
<cls> <noptr> aligned v read ( <ptr> buf <dot> <ptr> addr <dot> <noptr> count )
<cls> <noptr> v pfe video buf prepare ( <ptr> v q <dot> <ptr> vb <dot> <noptr> field )
<cls> <noptr> mic max system memory ( <ptr> m dev )
<cls> <noptr> dvb filter get ac info ( <ptr> m buf <dot> <noptr> count <dot> <ptr> a i <dot> <noptr> pr )
<cls> <noptr> show card ( <ptr> cd <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> mei clb usr xwork ( <ptr> work )
<cls> <noptr> msi enum fmt sdr cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> c sect pfe tuner register front end ( <dptr> c sect pfe <dot> <ptr> fe i <dot> <ptr> start feed <dot> <ptr> stop feed )
<cls> <noptr> page end io ( <ptr> page <dot> <noptr> is write <dot> <noptr> err )
<cls> <noptr> init r cmap ddm b ( )
<cls> <noptr> mpt handshake req reply wait ( <ptr> ioc <dot> <noptr> req bytes <dot> <ptr> req <dot> <noptr> reply bytes <dot> <ptr> u reply <dot> <noptr> max wait <dot> <noptr> sleep flag )
<cls> <noptr> spin it ( <ptr> s )
<cls> <noptr> adv g input status ( <ptr> sd <dot> <ptr> status )
<cls> <noptr> cec transmit ( <ptr> adap <dot> <ptr> f h <dot> <noptr> block <dot> <ptr> p arg )
<cls> <noptr> hack r f stop streaming ( <ptr> v q )
<cls> <ptr> check audio clock tweak ( )
<cls> <noptr> tsl calculate lux ( <noptr> ch <dot> <noptr> ch )
<cls> <noptr> tvp init cfg ( <ptr> sd <dot> <ptr> cfg )
<cls> <noptr> dma m pool match ( <ptr> dev <dot> <ptr> res <dot> <ptr> match data )
<cls> <noptr> zone spanned pages in node ( <noptr> nid <dot> <noptr> zone type <dot> <noptr> node start pfn <dot> <noptr> node end pfn <dot> <ptr> zone start pfn <dot> <ptr> zone end pfn <dot> <ptr> ignored )
<cls> <noptr> spr dp mic spi read ( <ptr> context <dot> <ptr> reg <dot> <noptr> reg size <dot> <ptr> val <dot> <noptr> val size )
<cls> <noptr> bluebird f x identify state ( <ptr> udev <dot> <ptr> props <dot> <dptr> desc <dot> <ptr> cold )
<cls> <noptr> scan swap map try ssd cluster ( <ptr> si <dot> <ptr> offset <dot> <ptr> scan base )
<cls> <noptr> r ga disable clocks ( <ptr> r ga )
<cls> <noptr> em x xic eeprom ( <ptr> dev <dot> <noptr> bus <dot> <dptr> ee data <dot> <ptr> ee data len )
<cls> <noptr> ir mce kbd register ( <ptr> dev )
<cls> <noptr> p cpu free chunk ( <ptr> chunk )
<cls> <noptr> un poison memory ( <noptr> pfn )
<cls> <noptr> tea read status ( <ptr> fe <dot> <ptr> buffer )
<cls> <noptr> saa g selection ( <ptr> file <dot> <ptr> f <dot> <ptr> sel )
<cls> <ptr> of get next endpoint ( <ptr> parent <dot> <ptr> prev )
<cls> <noptr> pt free dma buf ( <ptr> adap )
<cls> <noptr> c x shutdown ( <ptr> core )
<cls> <noptr> mtk mdp map color format ( <noptr> v l format )
<cls> <noptr> snd tm pointer ( <ptr> sub stream )
<cls> <noptr> qca resume ( <ptr> dev )
<cls> <noptr> media device unregister entity notify ( <ptr> m dev <dot> <ptr> nptr )
<cls> <noptr> m xlt get chip id ( <ptr> state )
<cls> <noptr> v pfe query std ( <ptr> file <dot> <ptr> priv <dot> <ptr> std id )
<cls> <noptr> encoders open ( <ptr> inode <dot> <ptr> file )
<cls> <noptr> do sys mmap pg off ( <noptr> addr <dot> <noptr> len <dot> <noptr> prot <dot> <noptr> flags <dot> <noptr> fd <dot> <noptr> pg off )
<cls> <noptr> deferred split huge page ( <ptr> page )
<cls> <noptr> fim c isp sub dev open ( <ptr> sd <dot> <ptr> f h )
<cls> <noptr> reset camera params ( <ptr> gsp ca dev )
<cls> <noptr> uvc clock param get ( <ptr> buffer <dot> <ptr> kp )
<cls> <noptr> dvb usb v disconnect ( <ptr> int f )
<cls> <noptr> enable swap slots cache ( )
<cls> <noptr> saa dev unregister ( <ptr> dev )
<cls> <noptr> iv tvf b get os d coords ( <ptr> it v <dot> <ptr> os d )
<cls> <noptr> sci fpp frees g ( <ptr> sg )
<cls> <noptr> dib set rfr amp pwm ( <ptr> state <dot> <ptr> cfg )
<cls> <noptr> mt irq suspend ( <ptr> dev )
<cls> <noptr> cs lisa dsp memory ( <ptr> dev <dot> <noptr> reg )
<cls> <noptr> st mlp timer detect encoder ( <ptr> d data )
<cls> <noptr> wcf smbus write nack ( <ptr> sd )
<cls> <noptr> l k dtm debug fs open ( <ptr> inode <dot> <ptr> file )
<cls> <noptr> ttc i write attribute mem ( <ptr> ca <dot> <noptr> slot <dot> <noptr> address <dot> <noptr> value )
<cls> <noptr> os denable attribute mode ( <ptr> sd )
<cls> <noptr> em xx vol get ( <ptr> k control <dot> <ptr> value )
<cls> <noptr> fmi mute ( <ptr> fmi )
<cls> <noptr> c x der sleeps to shutdown ( <ptr> priv )
<cls> <noptr> adv x hdmi e did write block ( <ptr> hdmi <dot> <noptr> total len <dot> <ptr> val )
<cls> <noptr> v pal pst ded tuner set params ( <ptr> fe )
<cls> <noptr> start instruction ( <ptr> h )
<cls> <noptr> ov init cfg ( <ptr> sd <dot> <ptr> cfg )
<cls> <noptr> keen e cmd main ( <ptr> radio <dot> <noptr> freq <dot> <noptr> play )
<cls> <noptr> read ( <ptr> state <dot> <noptr> reg <dot> <ptr> data )
<cls> <noptr> l gdt read signal strength ( <ptr> fe <dot> <ptr> strength )
<cls> <noptr> sec oce c suspend ( <ptr> dev )
<cls> <noptr> scc am if unregister video node ( <ptr> cam if <dot> <noptr> idx )
<cls> <noptr> lis ic block read ( <ptr> lis <dot> <noptr> reg <dot> <noptr> len <dot> <ptr> v )
<cls> <noptr> uvc x u ctrl query ( <ptr> chain <dot> <ptr> x qry )
<cls> <noptr> demux task let ( <noptr> data )
<cls> <noptr> p cpu fc free ( <ptr> ptr <dot> <noptr> size )
<cls> <noptr> m xls f streaming ctrl mercury m h ( <ptr> fe <dot> <noptr> onoff )
<cls> <noptr> m i pid set fmt ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> format )
<cls> <noptr> delta ipc decode ( <ptr> hdl <dot> <ptr> param <dot> <ptr> status )
<cls> <noptr> fcg tuner ( <ptr> sd <dot> <ptr> v )
<cls> <noptr> flite hw clear pending irq ( <ptr> dev )
<cls> <noptr> must configure manually ( <noptr> has eeprom )
<cls> <noptr> go snd init ( <ptr> go )
<cls> <noptr> sp mfc buf queue ( <ptr> vb )
<cls> <noptr> bt usb intel bootup ( <ptr> data <dot> <ptr> ptr <dot> <noptr> len )
<cls> <noptr> aki c write ( <ptr> ak <dot> <noptr> addr <dot> <noptr> data <dot> <noptr> size )
<cls> <noptr> v pfe sleep ( <ptr> fe )
<cls> <noptr> c pia camera release ( <ptr> v l dev )
<cls> <noptr> key put ( <ptr> key )
<cls> <noptr> ddb output stop ( <ptr> output )
<cls> <noptr> snd tm prepare ( <ptr> sub stream )
<cls> <noptr> uvc meta v l query cap ( <ptr> file <dot> <ptr> f h <dot> <ptr> cap )
<cls> <noptr> fim cmd create flite source links ( <ptr> f md )
<cls> <ptr> fast rpc v map ( <ptr> dma buf )
<cls> <noptr> pmd to hmm pfn flags ( <ptr> range <dot> <noptr> pmd )
<cls> <noptr> yama task free ( <ptr> task )
<cls> <noptr> altera toggle full ts streaming ( <ptr> pid filt <dot> <noptr> filt nr <dot> <noptr> onoff )
<cls> <noptr> px acf ops camera release ( <ptr> filp )
<cls> <noptr> me yes ctrl ( <ptr> ctrl )
<cls> <noptr> z sz pool free ( <ptr> pool <dot> <noptr> handle )
<cls> <noptr> r j ns power ( <ptr> sd <dot> <noptr> on )
<cls> <noptr> pcf irq mask ( <ptr> pcf <dot> <noptr> irq )
<cls> <noptr> snd saa free ( <ptr> card )
<cls> <noptr> gsc runtime resume ( <ptr> dev )
<cls> <noptr> vsp u api create links ( <ptr> vsp )
<cls> <noptr> v l clk unregister ( <ptr> clk )
<cls> <noptr> hel ene set reg bits ( <ptr> priv <dot> <noptr> reg <dot> <noptr> data <dot> <noptr> mask )
<cls> <noptr> pages to scan show ( <ptr> k obj <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> go snd hw params ( <ptr> sub stream <dot> <ptr> hw params )
<cls> <noptr> mic exit debug fs ( )
<cls> <ptr> vbd cdma buf ops k map ( <ptr> d buf <dot> <noptr> pg num )
<cls> <noptr> m pol new preferred ( <ptr> pol <dot> <ptr> nodes )
<cls> <noptr> setup nr node ids ( )
<cls> <noptr> ec get tune settings ( <ptr> fe <dot> <ptr> fe settings )
<cls> <noptr> ibm asm exit ( )
<cls> <noptr> f put ( <ptr> file )
<cls> <noptr> ov power off ( <ptr> dev )
<cls> <noptr> vp ifg std ( <ptr> file <dot> <ptr> priv <dot> <ptr> std )
<cls> <noptr> xsd fec clear stats ( <ptr> xsd fec )
<cls> <noptr> ov write seq regs ( <ptr> ov <dot> <noptr> reg <dot> <ptr> val <dot> <noptr> num )
<cls> <noptr> ilo remove ( <ptr> pdev )
<cls> <noptr> uvc ctrl get value ( <ptr> mapping <dot> <ptr> data )
<cls> <noptr> tw buf prepare ( <ptr> vb )
<cls> <noptr> b dis presume ( <ptr> dev )
<cls> <noptr> go y a fetch p soc frequency ( <ptr> h dev )
<cls> <noptr> pluto set dma addr ( <ptr> pluto )
<cls> <noptr> check early io remap leak ( )
<cls> <noptr> c x registers init ( <ptr> dev )
<cls> <noptr> huge tlb acct memory ( <ptr> h <dot> <noptr> delta )
<cls> <noptr> vsp dlm reset ( <ptr> dlm )
<cls> <noptr> isl show mode ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> v lg parm ( <ptr> ops <dot> <ptr> file <dot> <ptr> f h <dot> <ptr> arg )
<cls> <noptr> wb cir irqhandler ( <noptr> irq no <dot> <ptr> cookie )
<cls> <noptr> af get prev it err bit count ( <ptr> fe <dot> <ptr> pre err count <dot> <ptr> pre bit count )
<cls> <noptr> vmc i q p broker exit ( )
<cls> <noptr> dec zone page state ( <ptr> page <dot> <noptr> item )
<cls> <noptr> exy nos jpeg irq ( <noptr> irq <dot> <ptr> priv )
<cls> <noptr> c xxx set video input mux ( <ptr> dev <dot> <noptr> input )
<cls> <noptr> max ic get driver data ( <ptr> ic <dot> <ptr> id )
<cls> <noptr> b h prox persistence store ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> me it xeb r reg read ( <ptr> hw <dot> <noptr> offset )
<cls> <noptr> tw set gpio value ( <ptr> desc <dot> <noptr> value )
<cls> <noptr> sms dvb set front end ( <ptr> fe )
<cls> <noptr> stream zap disconnect ( <ptr> interface )
<cls> <noptr> tlb flush mmu ( <ptr> tlb )
<cls> <noptr> vb fop release ( <ptr> file )
<cls> <noptr> b tmr v l interrupt ( <ptr> priv )
<cls> <noptr> usb ur bre config ( <ptr> stream <dot> <ptr> props )
<cls> <noptr> os d initialize ( <ptr> os d )
<cls> <noptr> mpt scsi h issue sep command ( <ptr> ioc <dot> <ptr> v target <dot> <noptr> slot status )
<cls> <noptr> saa x setup ( <ptr> dev )
<cls> <noptr> init r cmap prote us ( )
<cls> <noptr> tw l audio set resource ( <noptr> id <dot> <noptr> enable )
<cls> <noptr> sci frm a destroy tc w invalid ( )
<cls> <noptr> mcs read reg ( <ptr> priv <dot> <noptr> reg <dot> <ptr> val )
<cls> <noptr> imx entity init cfg ( <ptr> sub dev <dot> <ptr> cfg )
<cls> <noptr> z swap compressor param set ( <ptr> val <dot> <ptr> kp )
<cls> <noptr> online mem sections ( <noptr> start pfn <dot> <noptr> end pfn )
<cls> <noptr> f m v l vid ioc query cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> capability )
<cls> <noptr> call set fmt ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> format )
<cls> <noptr> sms end ian handle message header ( <ptr> msg )
<cls> <noptr> cec register cec notifier ( <ptr> adap <dot> <ptr> notifier )
<cls> <noptr> pcf irq call handler ( <ptr> pcf <dot> <noptr> irq )
<cls> <noptr> ete kic driver init ( )
<cls> <noptr> max gen is volatile reg ( <ptr> dev <dot> <noptr> reg )
<cls> <noptr> do migrate pages ( <ptr> m m <dot> <ptr> from <dot> <ptr> to <dot> <noptr> flags )
<cls> <ptr> dvb module probe ( <ptr> module name <dot> <ptr> name <dot> <ptr> adap <dot> <noptr> addr <dot> <ptr> platform data )
<cls> <noptr> rds ack ( <ptr> aci )
<cls> <noptr> wm x aux adc irq ( <noptr> irq <dot> <ptr> irq data )
<cls> <noptr> get index ( <ptr> v dev )
<cls> <noptr> pm x init ( <ptr> client )
<cls> <noptr> x c set tv freq ( <ptr> fe )
<cls> <noptr> set in call ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> xpc stop h bbe ater ( )
<cls> <noptr> t dax read snr ( <ptr> fe <dot> <ptr> snr )
<cls> <noptr> c xdr get front end c ( <ptr> fe <dot> <ptr> c )
<cls> <noptr> spx setup agc ( <ptr> state )
<cls> <noptr> h va start streaming ( <ptr> v q <dot> <noptr> count )
<cls> <noptr> vi codec decoder cmd ( <ptr> file <dot> <ptr> f h <dot> <ptr> dc )
<cls> <ptr> d ibm c get tun eric master ( <ptr> demo d <dot> <noptr> g ating )
<cls> <noptr> tv audio driver init ( )
<cls> <ptr> c xstream put mdl fw ( <ptr> s <dot> <ptr> mdl )
<cls> <noptr> media request put ( <ptr> req )
<cls> <noptr> vmc i ctx get chk pt door bells ( <ptr> context <dot> <ptr> buf size <dot> <dptr> pbuf )
<cls> <noptr> atmel flex com probe ( <ptr> pdev )
<cls> <noptr> iv tv remove ( <ptr> pdev )
<cls> <noptr> n gene init ( <ptr> dev )
<cls> <noptr> l gdt pass b and digital agc ( <ptr> state <dot> <ptr> p )
<cls> <noptr> check vb with fmt ( <ptr> fmt <dot> <ptr> vb )
<cls> <noptr> mt get status ( <ptr> fe <dot> <ptr> tuner status )
<cls> <noptr> vmc i ctx dequeue data gram ( <ptr> context <dot> <ptr> max size <dot> <dptr> d g )
<cls> <noptr> pci endpoint test bar write l ( <ptr> test <dot> <noptr> bar <dot> <noptr> offset <dot> <noptr> value )
<cls> <noptr> sparse init one section ( <ptr> ms <dot> <noptr> pnum <dot> <ptr> mem map <dot> <ptr> usage <dot> <noptr> flags )
<cls> <noptr> msp xx g reset ( <ptr> client )
<cls> <noptr> dvb dmx sw filter packets ( <ptr> demux <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> cxa v reset ( <ptr> sd <dot> <noptr> val )
<cls> <noptr> call g frame interval ( <ptr> sd <dot> <ptr> fi )
<cls> <noptr> trace k mem cache free ( <noptr> call site <dot> <ptr> ptr )
<cls> <noptr> via cam suspend ( <ptr> priv )
<cls> <ptr> anon vma interval tree sub tree search ( <ptr> node <dot> <noptr> start <dot> <noptr> last )
<cls> <noptr> sh set fec inversion ( <ptr> state <dot> <ptr> p )
<cls> <noptr> need update ( <noptr> cpu )
<cls> <noptr> free part info ( <ptr> part )
<cls> <noptr> ov apply frame rate ( <ptr> sd )
<cls> <noptr> h aae wb enable ( <ptr> ae wb <dot> <noptr> enable )
<cls> <noptr> fdp release ( <ptr> file )
<cls> <noptr> bt tv overlay risc ( <ptr> b tv <dot> <ptr> ov <dot> <ptr> fmt <dot> <ptr> buf )
<cls> <noptr> get default standard ( <ptr> h dw )
<cls> <noptr> mt optimize v co ( <ptr> fe <dot> <noptr> sel <dot> <noptr> lock )
<cls> <noptr> gos std ( <ptr> go )
<cls> <noptr> tlv aic bs clock freq ( <ptr> sd <dot> <noptr> freq )
<cls> <noptr> l k dtm read buddy after free ( )
<cls> <noptr> stv set tuner ( <ptr> fe <dot> <noptr> frequency <dot> <noptr> bandwidth )
<cls> <noptr> asan load nno abort ( <noptr> <dot> <noptr> )
<cls> <noptr> six radio fops open ( <ptr> file )
<cls> <noptr> v pfe buffer prepare ( <ptr> vb )
<cls> <noptr> pluto disable irq s ( <ptr> pluto )
<cls> <noptr> get port facts ( <ptr> ioc <dot> <noptr> portnum <dot> <noptr> sleep flag )
<cls> <noptr> is if set fb addr ( <noptr> addr )
<cls> <noptr> td awr regs ( <ptr> priv <dot> <noptr> reg <dot> <ptr> val <dot> <noptr> len )
<cls> <noptr> arizona free irq ( <ptr> arizona <dot> <noptr> irq <dot> <ptr> data )
<cls> <ptr> get ctrl type name ( <noptr> tp )
<cls> <ptr> mtp get p data ( <ptr> client )
<cls> <noptr> s read signal strength ( <ptr> fe <dot> <ptr> strength )
<cls> <noptr> recv task let ( <noptr> arg )
<cls> <noptr> mpt scsi his phys disk ( <ptr> ioc <dot> <noptr> channel <dot> <noptr> id )
<cls> <noptr> hl ctx get ( <ptr> h dev <dot> <ptr> ctx )
<cls> <noptr> ap ( <noptr> map <dot> <noptr> frequency <dot> <ptr> p param <dot> <ptr> p param )
<cls> <noptr> sparse remove section ( <ptr> ms <dot> <noptr> pfn <dot> <noptr> nr pages <dot> <noptr> map offset <dot> <ptr> alt map )
<cls> <noptr> l gt dt pep tuner set params ( <ptr> fe )
<cls> <noptr> stv set params ( <ptr> fe )
<cls> <noptr> is analog input ( <ptr> sd )
<cls> <noptr> heartbeat enable store ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> remover map item from tree ( <ptr> r map item )
<cls> <noptr> tvp set default ( <noptr> std <dot> <ptr> crop )
<cls> <noptr> irr x set duty cycle ( <ptr> dev <dot> <noptr> duty )
<cls> <noptr> m chip load tables ( )
<cls> <noptr> rtl sdr remove ( <ptr> pdev )
<cls> <noptr> v l ctrl handler free ( <ptr> hdl )
<cls> <noptr> sci frm at c can cache ( <ptr> ep <dot> <noptr> cur bytes )
<cls> <noptr> ccp adjust bandwidth ( <ptr> ccp )
<cls> <noptr> ov exposure get ( <ptr> sensor )
<cls> <noptr> fdp buf prepare ( <ptr> vb )
<cls> <noptr> tif m unregister driver ( <ptr> drv )
<cls> <noptr> qt init meas ( <ptr> priv <dot> <noptr> oper <dot> <noptr> reg <dot> <noptr> reg init val <dot> <ptr> ret val )
<cls> <noptr> pti console write ( <ptr> c <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> st wakeup ack ( <ptr> stg data <dot> <noptr> cmd )
<cls> <noptr> b h prox rate ( <ptr> chip <dot> <noptr> mode )
<cls> <ptr> check depth mode ( )
<cls> <noptr> m c xxx irq un mask ( <ptr> m c xxx <dot> <noptr> irq )
<cls> <noptr> serial ir suspend ( <ptr> dev <dot> <noptr> state )

max_length:39