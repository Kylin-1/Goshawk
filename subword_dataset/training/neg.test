<cls> <noptr> bt tv enum fmt cap ovr ( <ptr> f )
<cls> <noptr> mtv read ( <ptr> c <dot> <noptr> addr space <dot> <noptr> reg <dot> <ptr> val )
<cls> <noptr> c sla read ( <ptr> sd <dot> <noptr> reg )
<cls> <noptr> config ts ( <ptr> state <dot> <noptr> demo did <dot> <ptr> mpeg out param ptr )
<cls> <noptr> x vip composite probe ( <ptr> pdev )
<cls> <ptr> check vb ica pnr ( )
<cls> <noptr> c x dt nr dmd dvb t mon profile ( <ptr> tn r dmd <dot> <ptr> profile )
<cls> <noptr> isp write ( <noptr> val <dot> <noptr> offset )
<cls> <noptr> sms usb init device ( <ptr> int f <dot> <noptr> boardid )
<cls> <noptr> c x dt nr dmd dvb t mono fd m ( <ptr> tn r dmd <dot> <ptr> of d m )
<cls> <noptr> cit read reg ( <ptr> gsp ca dev <dot> <noptr> index <dot> <noptr> verbose )
<cls> <noptr> stm timers get arrsize ( <ptr> d data )
<cls> <noptr> stm f xreg volatile ( <ptr> dev <dot> <noptr> reg )
<cls> <noptr> dib fw reset digital ( <ptr> fe <dot> <ptr> cfg )
<cls> <noptr> vm stat account ( <ptr> m m <dot> <noptr> flags <dot> <noptr> n pages )
<cls> <noptr> ts set params ( <ptr> fe )
<cls> <noptr> verify mmap ops ( <ptr> q )
<cls> <noptr> i css probe ( <ptr> client <dot> <ptr> id )
<cls> <ptr> m c handle file pte ( <ptr> vma <dot> <noptr> addr <dot> <noptr> p tent <dot> <ptr> entry )
<cls> <noptr> ce u set fmt ( <ptr> ce udev <dot> <ptr> v l fmt )
<cls> <noptr> ska set led indication ( <ptr> sd <dot> <noptr> val )
<cls> <noptr> ov write ( <ptr> sd <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> queue empty ( <ptr> queue )
<cls> <noptr> c x start video dma ( <ptr> dev <dot> <ptr> q <dot> <ptr> buf <dot> <ptr> channel )
<cls> <ptr> ov get pad crop ( <ptr> ov <dot> <ptr> cfg <dot> <noptr> pad <dot> <noptr> which )
<cls> <noptr> g lic master xfer ( <ptr> adap <dot> <noptr> msg <dot> <noptr> num )
<cls> <noptr> adv xx fill format ( <ptr> state <dot> <ptr> format )
<cls> <noptr> spc sis log counters ( <ptr> state <dot> <noptr> non errors )
<cls> <noptr> ov check sensorid ( <ptr> ov <dot> <ptr> client )
<cls> <noptr> vid ioc try fmt vb icap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <ptr> get adb state ( <ptr> sd )
<cls> <ptr> anon vma interval tree iter first ( <ptr> root <dot> <noptr> first <dot> <noptr> last )
<cls> <noptr> v fe enable irq pix line ( <ptr> v fe <dot> <noptr> comp <dot> <noptr> lineid <dot> <noptr> enable )
<cls> <noptr> z pool register driver ( <ptr> driver )
<cls> <noptr> cpi ag parm ( <ptr> file <dot> <ptr> f h <dot> <ptr> p )
<cls> <noptr> saa configure ( <ptr> s )
<cls> <ptr> check dump sensor ( )
<cls> <noptr> v fee num mbus code ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> code )
<cls> <ptr> find vma ( <ptr> m m <dot> <noptr> addr )
<cls> <noptr> c cdc link validate ( <ptr> sd <dot> <ptr> link <dot> <ptr> source fmt <dot> <ptr> sink fmt )
<cls> <noptr> fim c pipelines stream ( <ptr> ep <dot> <noptr> on )
<cls> <noptr> fdp buf queue ( <ptr> vb )
<cls> <noptr> imon get ffdc type ( <ptr> i ctx )
<cls> <noptr> mtk mdp m m buf queue ( <ptr> vb )
<cls> <noptr> c ( <ptr> gsp ca dev <dot> <noptr> val eur <dot> <noptr> reg )
<cls> <noptr> device init ( <ptr> chip <dot> <ptr> p data )
<cls> <noptr> adv smbus read ic block data ( <ptr> client <dot> <noptr> command <dot> <noptr> length <dot> <ptr> values )
<cls> <noptr> a pds x prox threshold show ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> destroy by rcu show ( <ptr> s <dot> <ptr> buf )
<cls> <noptr> vp front end attach ( <ptr> adap )
<cls> <noptr> dvb net feed stop ( <ptr> dev )
<cls> <noptr> dirty background ratio handler ( <ptr> table <dot> <noptr> write <dot> <ptr> buffer <dot> <ptr> len p <dot> <ptr> p pos )
<cls> <noptr> m pts as adding inactive raid components ( <ptr> ioc <dot> <noptr> channel <dot> <noptr> id )
<cls> <noptr> hl device reset ( <ptr> h dev <dot> <noptr> hard reset <dot> <noptr> from hard reset thread )
<cls> <noptr> tp g get pat line ( <ptr> tp g <dot> <noptr> line )
<cls> <noptr> ibm asm get next event ( <ptr> sp <dot> <ptr> reader )
<cls> <noptr> c xxx do mode ctrl overrides ( <ptr> dev )
<cls> <noptr> da request irq ( <ptr> da <dot> <noptr> irq <dot> <ptr> name <dot> <noptr> handler <dot> <ptr> data )
<cls> <noptr> abx get register interrupt ible ( <ptr> dev <dot> <noptr> bank <dot> <noptr> reg <dot> <ptr> value )
<cls> <noptr> chip write masked ( <ptr> chip <dot> <noptr> sub addr <dot> <noptr> val <dot> <noptr> mask )
<cls> <noptr> ap abilities ( <ptr> ioc )
<cls> <noptr> dib p set output mode ( <ptr> state <dot> <noptr> mode )
<cls> <noptr> can follow write pmd ( <noptr> pmd <dot> <noptr> flags )
<cls> <noptr> dr x k get stats ( <ptr> fe )
<cls> <noptr> stv set sweep rate ( <ptr> state <dot> <noptr> f shift <dot> <noptr> sym rate )
<cls> <noptr> m remap to ( <noptr> addr <dot> <noptr> old len <dot> <noptr> new addr <dot> <noptr> new len <dot> <ptr> locked <dot> <ptr> u f <dot> <ptr> u fun map early <dot> <ptr> u fun map )
<cls> <noptr> solo en con ( <ptr> solo enc )
<cls> <noptr> arm cp ver show ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> t dax initial init ( <ptr> fe )
<cls> <noptr> mt driver init ( )
<cls> <noptr> set radio freq ( <ptr> fe <dot> <ptr> params )
<cls> <noptr> saa buffer start page ( <ptr> buf )
<cls> <noptr> vi u of platform driver init ( )
<cls> <noptr> isp if reset ( <ptr> isp if )
<cls> <noptr> nokia reset ( <ptr> hu )
<cls> <noptr> c xdr read signal strength ( <ptr> fe <dot> <ptr> strength )
<cls> <ptr> sec oce c cec find hdmi dev ( <ptr> dev <dot> <dptr> conn )
<cls> <noptr> simple get bandwidth ( <ptr> fe <dot> <ptr> bandwidth )
<cls> <noptr> rts x usb get card status ( <ptr> u cr <dot> <ptr> status )
<cls> <ptr> lg dta attach ( <ptr> config <dot> <ptr> ic adap )
<cls> <ptr> handle to z bud header ( <noptr> handle )
<cls> <noptr> dib pc detection ( <ptr> ic adap )
<cls> <noptr> pvr f cvd attach ( <ptr> adap )
<cls> <noptr> saa histogram print ( <ptr> port <dot> <ptr> hg )
<cls> <noptr> fil lvl buffer ( <ptr> vb <dot> <ptr> pb )
<cls> <noptr> ic w buf ( <ptr> gsp ca dev <dot> <ptr> p <dot> <noptr> l )
<cls> <noptr> tw x pci driver init ( )
<cls> <noptr> vid ioc g fmt vid out overlay ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> l k dtm panic ( )
<cls> <noptr> pt wakeup ( <ptr> fe )
<cls> <noptr> lg x soft reset ( <ptr> state )
<cls> <noptr> kim platform driver init ( )
<cls> <noptr> pkt sys unset resource ( <ptr> pkt <dot> <noptr> id <dot> <noptr> size <dot> <ptr> cookie )
<cls> <noptr> av cca enter menu ( <ptr> fdt v )
<cls> <ptr> to vsp histogram buffer ( <ptr> v buf )
<cls> <noptr> sp set front end ( <ptr> fe )
<cls> <noptr> dvb dmx release section feed ( <ptr> demux <dot> <ptr> feed )
<cls> <noptr> dvb net ule ( <ptr> dev <dot> <ptr> buf <dot> <noptr> buf len )
<cls> <noptr> c xxx set gpio value ( <ptr> dev <dot> <noptr> pin number <dot> <noptr> pin value )
<cls> <noptr> set page owner handle ( <ptr> page <dot> <ptr> page ext <dot> <noptr> handle <dot> <noptr> order <dot> <noptr> gfp mask )
<cls> <noptr> is if restore defaults ( )
<cls> <noptr> nokia bluetooth runtime suspend ( <ptr> dev )
<cls> <noptr> read swap header ( <ptr> p <dot> <ptr> swap header <dot> <ptr> inode )
<cls> <noptr> em xx enable analog tuner ( <ptr> dev )
<cls> <noptr> update refs ( <ptr> object )
<cls> <noptr> lg dta driver init ( )
<cls> <noptr> m pts as add device components target ( <ptr> ioc <dot> <ptr> star get )
<cls> <noptr> m xls f hw gpio initialize ( <ptr> state )
<cls> <noptr> t mic xfer ( <ptr> ic adap <dot> <noptr> msgs <dot> <noptr> num )
<cls> <noptr> stk vid ioc g parm ( <ptr> filp <dot> <ptr> priv <dot> <ptr> sp )
<cls> <noptr> saas el mux ( <ptr> sd <dot> <noptr> chan )
<cls> <noptr> touch pmd ( <ptr> vma <dot> <noptr> addr <dot> <ptr> pmd <dot> <noptr> flags )
<cls> <noptr> hci ibs wak ere trans timeout ( <ptr> t )
<cls> <ptr> me ime get cfg ( <noptr> idx )
<cls> <noptr> ibm asm send driver v pd ( <ptr> sp )
<cls> <noptr> should fails lab ( <ptr> s <dot> <noptr> gfp flags )
<cls> <noptr> msb exit state machine ( <ptr> msb <dot> <noptr> error )
<cls> <noptr> v l async register sub dev sensor common ( <ptr> sd )
<cls> <noptr> m tps stream ( <ptr> sub dev <dot> <noptr> enable )
<cls> <noptr> bt set bit ( <ptr> encoder <dot> <noptr> reg <dot> <noptr> bit <dot> <noptr> value )
<cls> <noptr> mic max system addr ( <ptr> m dev )
<cls> <noptr> v hci misc dev init ( )
<cls> <noptr> cec gpio high ( <ptr> adap )
<cls> <noptr> dvb dmx dev section callback ( <ptr> buffer <dot> <noptr> buffer len <dot> <ptr> buffer <dot> <noptr> buffer len <dot> <ptr> filter <dot> <ptr> buffer flags )
<cls> <noptr> init r cmap nor wood ( )
<cls> <noptr> gen wq e recover card ( <ptr> cd <dot> <noptr> fatal err )
<cls> <noptr> ctrl get input ( <ptr> cptr <dot> <ptr> vp )
<cls> <noptr> bd m wv driver init ( )
<cls> <noptr> si set rds radio text ( <ptr> s dev <dot> <ptr> rt )
<cls> <noptr> dvb vb query buf ( <ptr> ctx <dot> <ptr> b )
<cls> <noptr> its ( <ptr> state <dot> <noptr> bits )
<cls> <noptr> r tls drs frequency ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> uvc debug fs stats read ( <ptr> file <dot> <ptr> user buf <dot> <noptr> nbytes <dot> <ptr> p pos )
<cls> <noptr> c x der set front end tc ( <ptr> fe )
<cls> <noptr> d lnr x ( <ptr> urb )
<cls> <noptr> vp if query d v timings ( <ptr> file <dot> <ptr> priv <dot> <ptr> timings )
<cls> <noptr> tps probe ( <ptr> client <dot> <ptr> ids )
<cls> <noptr> fim c is debug fs create ( <ptr> is )
<cls> <noptr> dib x tuner sleep ( <ptr> fe <dot> <noptr> onoff )
<cls> <noptr> adb checkedid status ( <ptr> sd )
<cls> <noptr> b ( <ptr> src <dot> <ptr> dst <dot> <noptr> bytes per line <dot> <noptr> scale bits )
<cls> <noptr> un use vma ( <ptr> vma <dot> <noptr> type <dot> <noptr> front swap <dot> <ptr> fs pages to un use )
<cls> <noptr> saa ioctl ( <ptr> sd <dot> <noptr> cmd <dot> <ptr> arg )
<cls> <noptr> isl get adc value ( <ptr> client )
<cls> <noptr> c cdc set pixel format ( <noptr> pix fmt )
<cls> <noptr> k mem cache shrink all ( <ptr> s )
<cls> <noptr> tps driver init ( )
<cls> <noptr> gru get cpu resources ( <noptr> dsr bytes <dot> <dptr> cb <dot> <dptr> dsr )
<cls> <noptr> gen wq e setups gl ( <ptr> cd <dot> <ptr> s gl <dot> <ptr> dma list )
<cls> <noptr> nxt set transmission mode ( <ptr> state <dot> <noptr> transmission mode )
<cls> <noptr> mpt scsi h version mpi show ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> pkt session et b encoder ( <ptr> pkt <dot> <ptr> cookie <dot> <ptr> in frame )
<cls> <noptr> get online mems ( )
<cls> <noptr> v fe set cam if cmd ( <ptr> v fe <dot> <noptr> enable )
<cls> <noptr> rts fetch vendor settings ( <ptr> pcr )
<cls> <noptr> stk write reg ( <ptr> dev <dot> <noptr> reg <dot> <noptr> value )
<cls> <noptr> swaps poll ( <ptr> file <dot> <ptr> wait )
<cls> <noptr> mir opin nacl e gpio ( <ptr> b tv )
<cls> <noptr> go y a debug fs read ( <ptr> h dev <dot> <noptr> addr <dot> <ptr> val )
<cls> <noptr> mic next db ( <ptr> v pdev )
<cls> <noptr> pcf irq un mask ( <ptr> pcf <dot> <noptr> irq )
<cls> <noptr> sa atv audio fini ( <ptr> dev )
<cls> <noptr> shuffle free memory ( <ptr> pg dat )
<cls> <noptr> m m ols read ( <ptr> sd <dot> <noptr> size <dot> <noptr> reg <dot> <ptr> val )
<cls> <noptr> c xxx write ic data ( <ptr> dev <dot> <noptr> dev addr <dot> <noptr> saddr <dot> <noptr> s addrlen <dot> <noptr> data <dot> <noptr> data len )
<cls> <noptr> is zs page isolated ( <ptr> zs page )
<cls> <ptr> to am radio dev ( <ptr> v l dev )
<cls> <noptr> am radio set freq ( <ptr> radio <dot> <noptr> freq )
<cls> <noptr> adv xx check d v timings ( <ptr> t <dot> <ptr> hdl )
<cls> <noptr> bt tv resource ( <ptr> f h )
<cls> <noptr> venus helper set buf size ( <ptr> inst <dot> <noptr> buf size <dot> <noptr> buf type )
<cls> <noptr> sp mfc watchdog worker ( <ptr> work )
<cls> <noptr> deactivate bypass store ( <ptr> s <dot> <ptr> buf <dot> <noptr> length )
<cls> <noptr> copy line ( <ptr> q data out <dot> <ptr> src <dot> <ptr> dst <dot> <noptr> reverse )
<cls> <noptr> cio vbs top streaming ( <ptr> v q )
<cls> <noptr> s got frame ( <ptr> vc <dot> <noptr> jpg size )
<cls> <noptr> read skip ( <ptr> stream <dot> <noptr> len )
<cls> <noptr> h fi session init ( <ptr> inst <dot> <noptr> pix fmt )
<cls> <noptr> td a probe ( <ptr> client <dot> <ptr> id )
<cls> <noptr> tw has sharp ness ( <ptr> solo dev <dot> <noptr> ch )
<cls> <noptr> me icl notify req fop ( <noptr> req )
<cls> <noptr> em press ctrl filter ( <ptr> ctrl )
<cls> <noptr> start genius video cam live ( <ptr> gsp ca dev )
<cls> <noptr> z swap front swap init ( <noptr> type )
<cls> <noptr> fim ch wget frame index ( <ptr> dev )
<cls> <noptr> mmo lsa lock ( <ptr> info <dot> <ptr> ctrl )
<cls> <noptr> ddb un redirect ( <ptr> port )
<cls> <noptr> omap is pres izer init ( <ptr> isp )
<cls> <noptr> six core probe ( <ptr> client <dot> <ptr> id )
<cls> <noptr> mem block find range top down ( <noptr> start <dot> <noptr> end <dot> <noptr> size <dot> <noptr> align <dot> <noptr> nid <dot> <noptr> flags )
<cls> <noptr> mpt scsi h board assembly show ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> cosm sysfs init ( <ptr> c dev )
<cls> <noptr> tx low drive ( <ptr> pin )
<cls> <noptr> uvc video clock hosts of ( <ptr> sample )
<cls> <noptr> wcf init ( <ptr> sd )
<cls> <noptr> wms routing ( <ptr> sd <dot> <noptr> input <dot> <noptr> output <dot> <noptr> config )
<cls> <noptr> dib set bb ramp ( <ptr> state <dot> <ptr> cfg )
<cls> <noptr> smi dvb sky mds fe attach ( <ptr> port )
<cls> <noptr> scc am if hw vp init ( <ptr> cam if <dot> <ptr> vp )
<cls> <noptr> read ic reg ( <ptr> addr <dot> <noptr> index <dot> <ptr> data )
<cls> <ptr> get pg tinfo ( <ptr> ctx <dot> <noptr> hop addr )
<cls> <noptr> cxf lat iron dump ( <ptr> dev )
<cls> <noptr> poison pages ( <ptr> page <dot> <noptr> n )
<cls> <noptr> ic reg read ( <ptr> stmp e <dot> <noptr> reg )
<cls> <noptr> sd config ( <ptr> gsp ca dev <dot> <ptr> id )
<cls> <noptr> tlb remove table smp sync ( <ptr> arg )
<cls> <noptr> saa x g tuner ( <ptr> sd <dot> <ptr> vt )
<cls> <noptr> m tts stream ( <ptr> sd <dot> <noptr> enable )
<cls> <noptr> vivid fill service lines ( <ptr> vb i <dot> <noptr> service set )
<cls> <noptr> update state from header ( <ptr> ctx )
<cls> <noptr> curr regs show ( <ptr> s <dot> <ptr> unused )
<cls> <noptr> vpx write ( <ptr> sd <dot> <noptr> reg <dot> <noptr> value )
<cls> <noptr> dib p get adc power ( <ptr> fe )
<cls> <noptr> vsp video queue setup ( <ptr> v q <dot> <ptr> n buffers <dot> <ptr> n planes <dot> <noptr> sizes <dot> <ptr> alloc devs )
<cls> <noptr> pwm ir set carrier ( <ptr> dev <dot> <noptr> carrier )
<cls> <noptr> get v l standard ( <ptr> p <dot> <ptr> p )
<cls> <noptr> v l src change event sub dev subscribe ( <ptr> sd <dot> <ptr> f h <dot> <ptr> sub )
<cls> <noptr> cluster set flag ( <ptr> info <dot> <noptr> flag )
<cls> <noptr> mt set params ( <ptr> fe <dot> <ptr> params )
<cls> <noptr> snd c x pcm capture open ( <ptr> sub stream )
<cls> <noptr> m c memory read ( <ptr> dev <dot> <noptr> address <dot> <ptr> value )
<cls> <noptr> gup benchmark ioctl ( <ptr> file p <dot> <noptr> cmd <dot> <noptr> arg )
<cls> <noptr> v lg selection ( <ptr> ops <dot> <ptr> file <dot> <ptr> f h <dot> <ptr> arg )
<cls> <noptr> ves x read ber ( <ptr> fe <dot> <ptr> ber )
<cls> <noptr> is if disable all modules ( )
<cls> <noptr> m cam vbs top streaming ( <ptr> v q )
<cls> <noptr> v l set e did phys addr ( <ptr> e did <dot> <noptr> size <dot> <noptr> phys addr )
<cls> <noptr> tw from v l std ( <noptr> v l std )
<cls> <noptr> state check enable encoder run ( <ptr> h dw )
<cls> <noptr> asan set shadow f ( <ptr> addr <dot> <noptr> size )
<cls> <noptr> ov x g register ( <ptr> sd <dot> <ptr> reg )
<cls> <noptr> pvr sext ctrls ( <ptr> file <dot> <ptr> priv <dot> <ptr> ctls )
<cls> <noptr> list add job ( <ptr> fdp <dot> <ptr> list <dot> <ptr> job )
<cls> <noptr> ov get regulator s ( <ptr> sensor )
<cls> <noptr> vpx rc query ( <ptr> d <dot> <ptr> event <dot> <ptr> state )
<cls> <noptr> mtk ven clock ( <ptr> ctx )
<cls> <noptr> vma gap callbacks copy ( <ptr> r bold <dot> <ptr> rb new )
<cls> <noptr> f m irq handle hw malfunction ( <ptr> f m dev )
<cls> <noptr> imon driver init ( )
<cls> <noptr> ov v l register ( <ptr> sensor )
<cls> <noptr> pluto set sda ( <ptr> data <dot> <noptr> state )
<cls> <noptr> copy gigantic page ( <ptr> dst <dot> <ptr> src <dot> <noptr> nr pages )
<cls> <ptr> c xdr get dvb front end ( <ptr> client )
<cls> <noptr> ctrl get crop w ( <ptr> cptr <dot> <ptr> vp )
<cls> <noptr> cobalt queue setup ( <ptr> q <dot> <ptr> num buffers <dot> <ptr> num planes <dot> <noptr> sizes <dot> <ptr> alloc devs )
<cls> <noptr> c x vb i fmt ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> page sun shared show ( <ptr> k obj <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> j mb xms resume ( <ptr> dev )
<cls> <noptr> hl get voltage ( <ptr> h dev <dot> <noptr> sensor index <dot> <noptr> attr )
<cls> <noptr> si probe ( <ptr> client <dot> <ptr> id )
<cls> <noptr> r cmm misc mode ( <ptr> dev <dot> <ptr> data )
<cls> <ptr> mem cg slab start ( <ptr> m <dot> <ptr> pos )
<cls> <noptr> hence ncode ( <ptr> handle <dot> <noptr> opt <dot> <ptr> frm buf <dot> <ptr> b sbuf <dot> <ptr> result )
<cls> <noptr> cxa v load fw ( <ptr> sd )
<cls> <noptr> c xxx gpio ic read ( <ptr> dev <dot> <noptr> dev addr <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> cal get hw info ( <ptr> dev )
<cls> <noptr> dvb usb v resume ( <ptr> int f )
<cls> <noptr> d dbset dma table ( <ptr> io )
<cls> <noptr> job abort ( <ptr> priv )
<cls> <noptr> iv tv reset ir gpio ( <ptr> it v )
<cls> <noptr> v l stub g d v timings ( <ptr> ops <dot> <ptr> file <dot> <ptr> f h <dot> <ptr> p )
<cls> <noptr> dvb front end thread ( <ptr> data )
<cls> <noptr> maxs frequency ( <ptr> sd <dot> <ptr> v f )
<cls> <noptr> mtm enable ( <ptr> mtm )
<cls> <noptr> vid ioc v dec g selection ( <ptr> file <dot> <ptr> priv <dot> <ptr> s )
<cls> <noptr> inactive i slow ( <ptr> lru vec <dot> <noptr> inactive lru )
<cls> <noptr> c xxx remove from dev list ( <ptr> dev )
<cls> <noptr> tegra dev freq probe ( <ptr> pdev )
<cls> <noptr> do firmware download ( <ptr> state <dot> <ptr> m bin buffer ptr <dot> <noptr> m bin buffer size )
<cls> <noptr> msb init card ( <ptr> card )
<cls> <noptr> pwc set motor ( <ptr> pdev )
<cls> <noptr> m rv l deinit ( )
<cls> <noptr> m pts as task mgmt complete ( <ptr> ioc <dot> <ptr> m f <dot> <ptr> m r )
<cls> <noptr> media device compat ioctl ( <ptr> filp <dot> <noptr> cmd <dot> <noptr> arg )
<cls> <noptr> h fi core trigger ssr ( <ptr> core <dot> <noptr> type )
<cls> <noptr> pcf adc probe ( <ptr> pdev )
<cls> <ptr> v l m m buf remove by idx ( <ptr> q ctx <dot> <noptr> idx )
<cls> <noptr> tea auto detection ( <ptr> ic adap <dot> <noptr> ic addr )
<cls> <noptr> da device init ( <ptr> da <dot> <noptr> irq )
<cls> <noptr> ov set register ( <ptr> sd <dot> <ptr> reg )
<cls> <noptr> a uled gpio enable ( <ptr> state <dot> <noptr> onoff )
<cls> <ptr> lookup object ( <noptr> ptr <dot> <noptr> alias )
<cls> <noptr> nr free buffer pages ( )
<cls> <noptr> tc enum mbus code ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> code )
<cls> <noptr> v spr p fwrite ( <ptr> r pf <dot> <ptr> dl b <dot> <noptr> reg <dot> <noptr> data )
<cls> <noptr> altera concatenate data ( <ptr> buffer <dot> <ptr> preamble data <dot> <noptr> preamble count <dot> <ptr> target data <dot> <noptr> start index <dot> <noptr> target count <dot> <ptr> post amble data <dot> <noptr> post amble count )
<cls> <noptr> put command and length ( <ptr> data <dot> <noptr> command <dot> <noptr> length )
<cls> <noptr> sp mfc get crop info v v ( <ptr> ctx )
<cls> <noptr> m nxt sleep ( <ptr> chip )
<cls> <noptr> td a xic driver init ( )
<cls> <noptr> em xx audio resume ( <ptr> dev )
<cls> <noptr> descriptor list interrupt enable ( <ptr> desc )
<cls> <ptr> section activate ( <noptr> nid <dot> <noptr> pfn <dot> <noptr> nr pages <dot> <ptr> alt map )
<cls> <noptr> k mem cache shrink ( <ptr> s )
<cls> <noptr> fdp read ( <ptr> fdp <dot> <noptr> reg )
<cls> <noptr> shmem get unmapped area ( <ptr> file <dot> <noptr> u addr <dot> <noptr> len <dot> <noptr> pg off <dot> <noptr> flags )
<cls> <noptr> fc driver init ( )
<cls> <noptr> cec transmit msg ( <ptr> adap <dot> <ptr> msg <dot> <noptr> block )
<cls> <ptr> dvb usb find device ( <ptr> udev <dot> <ptr> props <dot> <ptr> cold )
<cls> <noptr> exec next command ( <ptr> sp )
<cls> <noptr> delta setup frame ( <ptr> ctx <dot> <ptr> frame )
<cls> <noptr> ov x set fmt ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> fmt )
<cls> <noptr> td a write tab ( <ptr> state <dot> <ptr> tab )
<cls> <noptr> a fled control ( <ptr> d <dot> <noptr> onoff )
<cls> <noptr> cam if pipeline validate ( <ptr> cam if )
<cls> <noptr> vivid sdr g tuner ( <ptr> file <dot> <ptr> f h <dot> <ptr> vt )
<cls> <noptr> l k dtm ref count dec zero ( )
<cls> <noptr> pt thread ( <ptr> data )
<cls> <noptr> adv xx has afe ( <ptr> state )
<cls> <noptr> sdi soc nego ( <ptr> gsp ca dev )
<cls> <noptr> video ic thread vid cap ( <ptr> priv )
<cls> <noptr> sm dump regs ( <ptr> sm )
<cls> <noptr> early pfn to nid ( <noptr> pfn )
<cls> <noptr> c xxx gpio ic write nak ( <ptr> dev )
<cls> <noptr> action result ( <noptr> pfn <dot> <noptr> type <dot> <noptr> result )
<cls> <noptr> f m ris a match ( <ptr> pdev <dot> <noptr> n dev )
<cls> <noptr> ctrl set channel ( <ptr> demo d <dot> <ptr> channel )
<cls> <noptr> stv x wakeup ( <ptr> fe )
<cls> <ptr> check remote ( )
<cls> <noptr> scm set iso ( <ptr> state <dot> <noptr> val )
<cls> <noptr> cio runtime resume ( <ptr> dev )
<cls> <noptr> cg wb kill ( <ptr> wb )
<cls> <noptr> me it xe readiness is sec rdy ( <noptr> readiness )
<cls> <noptr> v pr brd driver init ( )
<cls> <ptr> v l dev top c dev ( <ptr> v l dev )
<cls> <noptr> d ibus bmc driver init ( )
<cls> <noptr> ssc probe ( <ptr> pdev )
<cls> <noptr> iv tv probe ( <ptr> pdev <dot> <ptr> pci id )
<cls> <noptr> iv tvf b get fix ( <ptr> it v <dot> <ptr> fix )
<cls> <noptr> b cove ipc byte reg read ( <ptr> context <dot> <noptr> reg <dot> <ptr> val )
<cls> <noptr> m tt autofocus trigger ( <ptr> client )
<cls> <noptr> isp isr dbg ( <ptr> isp <dot> <noptr> irq status )
<cls> <noptr> tw x enum input ( <ptr> file <dot> <ptr> priv <dot> <ptr> i )
<cls> <noptr> asf e get tune settings ( <ptr> fe <dot> <ptr> settings )
<cls> <noptr> file map write and wait ( <ptr> mapping )
<cls> <noptr> spx init ( <ptr> fe )
<cls> <noptr> ov x write ( <ptr> ov x <dot> <noptr> addr <dot> <noptr> val )
<cls> <noptr> filter r xs min width ( <ptr> c <dot> <noptr> min width ns )
<cls> <noptr> any see usb driver init ( )
<cls> <noptr> abs sub ( <noptr> a <dot> <noptr> b )
<cls> <noptr> monitor exposure ( <ptr> gsp ca dev )
<cls> <ptr> q p broker handle to entry ( <noptr> handle )
<cls> <noptr> m me clk store ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> mem cgroup can attach ( <ptr> t set )
<cls> <noptr> sp mfc h set a so slice order v ( <ptr> ctx )
<cls> <noptr> exy nos init freq table ( <ptr> dmc <dot> <ptr> profile )
<cls> <noptr> gen wq e err resume ( <ptr> pci dev )
<cls> <noptr> apply top d range ( <ptr> m m <dot> <ptr> pgd <dot> <noptr> addr <dot> <noptr> end <dot> <noptr> fn <dot> <ptr> data <dot> <noptr> create )
<cls> <ptr> check buffer mode ( )
<cls> <noptr> a speed video sub event ( <ptr> f h <dot> <ptr> sub )
<cls> <noptr> dr x j dap write aud reg ( <ptr> dev addr <dot> <noptr> addr <dot> <noptr> data )
<cls> <noptr> em xx dvb init ( <ptr> dev )
<cls> <noptr> mtk mdp m m start streaming ( <ptr> q <dot> <noptr> count )
<cls> <noptr> tw greg ( <ptr> file <dot> <ptr> f h <dot> <ptr> reg )
<cls> <ptr> check enable auto suspend ( )
<cls> <noptr> n gene resume ( <ptr> dev )
<cls> <ptr> lg dta attach ( <ptr> config <dot> <ptr> ic adap )
<cls> <ptr> check f mode ( )
<cls> <noptr> m tread uc blocks ( <ptr> fe <dot> <ptr> ub c )
<cls> <noptr> convert end ian ( <noptr> flag <dot> <noptr> size <dot> <ptr> d )
<cls> <noptr> net up uni dvb dma fini ( <ptr> n dev <dot> <noptr> num )
<cls> <noptr> ov x video probe ( <ptr> priv )
<cls> <noptr> fmt x get tune cap val ( <ptr> f m dev )
<cls> <noptr> exy nos jpeg h tbl dc ( <ptr> regs <dot> <noptr> t )
<cls> <noptr> sp mfc enc ctrls setup ( <ptr> ctx )
<cls> <noptr> rtl deselect ( <ptr> mux c <dot> <noptr> chan id )
<cls> <noptr> c x der read ber i ( <ptr> priv <dot> <ptr> bit error <dot> <ptr> bit count )
<cls> <ptr> media get u ptr ( <noptr> arg )
<cls> <noptr> hci uart has flow control ( <ptr> hu )
<cls> <noptr> m chip compress frame ( <ptr> buf <dot> <noptr> buf size )
<cls> <noptr> select input ( <ptr> sd )
<cls> <noptr> init r cmap red do ( )
<cls> <noptr> compact scanners met ( <ptr> cc )
<cls> <ptr> huge pte offset ( <ptr> m m <dot> <noptr> addr <dot> <noptr> sz )
<cls> <noptr> saa buffer timeout ( <ptr> t )
<cls> <noptr> curr db gui dns how ( <ptr> s <dot> <ptr> unused <dot> <noptr> uid )
<cls> <noptr> itet xir ( <ptr> rc dev <dot> <ptr> tx buf <dot> <noptr> n )
<cls> <noptr> fast rpc r pmsg callback ( <ptr> r pdev <dot> <ptr> data <dot> <noptr> len <dot> <ptr> priv <dot> <noptr> addr )
<cls> <noptr> sdp io read ( <ptr> sd <dot> <noptr> reg )
<cls> <noptr> rts x pci resume ( <ptr> pci dev )
<cls> <noptr> c x der get algo ( <ptr> fe )
<cls> <noptr> rds read cycle ( <ptr> aci )
<cls> <ptr> mem move ( <ptr> dest <dot> <ptr> src <dot> <noptr> len )
<cls> <noptr> c x d get stats ( <ptr> fe <dot> <noptr> status )
<cls> <noptr> td a set symbol rate ( <ptr> state <dot> <noptr> symbol rate )
<cls> <noptr> img i rbegin repeat ( <ptr> priv )
<cls> <ptr> check el na enable ( )
<cls> <noptr> vivid probe ( <ptr> pdev )
<cls> <noptr> shuffle free list ( <ptr> s <dot> <ptr> page )
<cls> <noptr> stv set ts path ( <ptr> state )
<cls> <noptr> shmem unused huge shrink ( <ptr> sb info <dot> <ptr> sc <dot> <noptr> nr to split )
<cls> <noptr> delta pop dts ( <ptr> ctx <dot> <ptr> val )
<cls> <noptr> scm o if log status ( <ptr> sd )
<cls> <noptr> xpc disallow h bu v ( <noptr> partid )
<cls> <noptr> sa adl wait ack ( <ptr> dev <dot> <noptr> reg )
<cls> <noptr> d vic o dual demo d init ( <ptr> fe )
<cls> <ptr> mtk mdp find fmt ( <noptr> pixel format <dot> <noptr> type )
<cls> <noptr> mem cgroup oom notify cb ( <ptr> mem cg )
<cls> <noptr> call set e did ( <ptr> sd <dot> <ptr> e did )
<cls> <noptr> stv ter check cp amp ( <ptr> state <dot> <noptr> fft mode )
<cls> <noptr> vmc i handle arr append entry ( <dptr> array ptr <dot> <noptr> handle )
<cls> <noptr> ycbcr rgb ( <noptr> m <dot> <noptr> y <dot> <noptr> cb <dot> <noptr> cr <dot> <noptr> yoffset <dot> <ptr> r <dot> <ptr> g <dot> <ptr> b )
<cls> <noptr> dvb create media graph ( <ptr> adap <dot> <noptr> create r f connector )
<cls> <noptr> c pia init ( )
<cls> <noptr> m tt reset ( <ptr> client )
<cls> <noptr> pvr h dw cmd powerup ( <ptr> h dw )
<cls> <noptr> mem cg slab info show ( <ptr> m <dot> <ptr> unused )
<cls> <noptr> igor plug usb callback ( <ptr> urb )
<cls> <noptr> dev freq get freq level ( <ptr> dev freq <dot> <noptr> freq )
<cls> <noptr> clu set format ( <ptr> sub dev <dot> <ptr> cfg <dot> <ptr> fmt )
<cls> <noptr> device want to wakeup ( <ptr> hu )
<cls> <noptr> v l find d v timings cap ( <ptr> t <dot> <ptr> cap <dot> <noptr> p clock delta <dot> <noptr> fnc <dot> <ptr> fnc handle )
<cls> <noptr> c port write dr ( <ptr> dev <dot> <noptr> data )
<cls> <noptr> m bas read status ( <ptr> fe <dot> <ptr> status )
<cls> <noptr> stb set tone ( <ptr> fe <dot> <noptr> tone )
<cls> <ptr> dvb pll attach ( <ptr> fe <dot> <noptr> pll addr <dot> <ptr> ic <dot> <noptr> pll desc id )
<cls> <ptr> check disable guest ( )
<cls> <noptr> abot popen ( <ptr> inode <dot> <ptr> file )
<cls> <noptr> q am auto ( <ptr> demo d <dot> <ptr> channel <dot> <noptr> tuner freq offset <dot> <ptr> lock status )
<cls> <noptr> af boot packet ( <ptr> udev <dot> <noptr> type <dot> <ptr> reply <dot> <ptr> buf <dot> <noptr> size )
<cls> <noptr> dtl conf check ( <ptr> pdev <dot> <ptr> priv data )
<cls> <noptr> vp if query d v timings ( <ptr> file <dot> <ptr> priv <dot> <ptr> timings )
<cls> <noptr> cal async complete ( <ptr> notifier )
<cls> <noptr> exy nos dmc disable perf events ( <ptr> dmc )
<cls> <noptr> av fw request ( <ptr> av <dot> <ptr> request buf <dot> <noptr> request buf len <dot> <ptr> reply buf <dot> <noptr> reply buf len )
<cls> <noptr> cio vb return all buffers ( <ptr> q <dot> <noptr> state )
<cls> <noptr> iv tvf b cleanup ( )
<cls> <noptr> snd solo pcm prepare ( <ptr> ss )
<cls> <noptr> iv tvs fmt vid cap ( <ptr> file <dot> <ptr> f h <dot> <ptr> fmt )
<cls> <noptr> l irc bpf run ( <ptr> rc dev <dot> <noptr> sample )
<cls> <noptr> mpt clear task mgmt inprogress flag ( <ptr> ioc )
<cls> <noptr> check fw ( <ptr> state <dot> <ptr> m bin <dot> <noptr> m bin len )
<cls> <noptr> td a power control ( <ptr> fe <dot> <noptr> power state )
<cls> <noptr> ca get slot info ( <ptr> state <dot> <ptr> pca slot info <dot> <ptr> arg )
<cls> <noptr> at make dummy client ( <ptr> at <dot> <noptr> index <dot> <ptr> reg map config )
<cls> <noptr> vim c sen get fmt ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> fmt )
<cls> <noptr> m tt init setting ( <ptr> client )
<cls> <ptr> vmc i resource by handle ( <noptr> resource handle <dot> <noptr> resource type )
<cls> <noptr> dvb register media device ( <ptr> dvb dev <dot> <noptr> type <dot> <noptr> minor <dot> <noptr> demux sink pads )
<cls> <noptr> isp sub dev notifier complete ( <ptr> async )
<cls> <noptr> c x d integ init ( <ptr> tn r dmd )
<cls> <noptr> wl f m g volatile ctrl ( <ptr> ctrl )
<cls> <noptr> do swap page ( <ptr> vm f )
<cls> <noptr> ts pid ( <ptr> buf )
<cls> <noptr> page set set high and batch ( <ptr> zone <dot> <ptr> pcp )
<cls> <noptr> c x dt nr dmd dvb t check demo d lock ( <ptr> tn r dmd <dot> <ptr> lock )
<cls> <noptr> me kernel ( <ptr> p <dot> <noptr> pfn )
<cls> <noptr> v l print stream parm ( <ptr> arg <dot> <noptr> write only )
<cls> <noptr> offline isolated pages cb ( <noptr> start <dot> <noptr> nr pages <dot> <ptr> data )
<cls> <noptr> vb i queue setup ( <ptr> v q <dot> <ptr> n buffers <dot> <ptr> n planes <dot> <noptr> sizes <dot> <ptr> alloc devs )
<cls> <noptr> v op type ( <ptr> vh )
<cls> <noptr> m write ( <ptr> sd )
<cls> <noptr> t dax get bandwidth ( <ptr> fe <dot> <ptr> bandwidth )
<cls> <noptr> uvc v l get stream parm ( <ptr> stream <dot> <ptr> parm )
<cls> <noptr> em xx start analog streaming ( <ptr> v q <dot> <noptr> count )
<cls> <noptr> fast rpc internal invoke ( <ptr> fl <dot> <noptr> kernel <dot> <noptr> handle <dot> <noptr> sc <dot> <ptr> args )
<cls> <noptr> sh set front end ( <ptr> fe )
<cls> <noptr> smi app power on ( <ptr> dev )
<cls> <noptr> wms routing ( <ptr> sd <dot> <noptr> input <dot> <noptr> output <dot> <noptr> config )
<cls> <noptr> cec adap status ( <ptr> file <dot> <ptr> priv )
<cls> <noptr> gem tek conv freq ( <noptr> freq )
<cls> <noptr> vmc i host do ctx set cpt state ( <ptr> vmc i host dev <dot> <ptr> ioctl name <dot> <ptr> u ptr )
<cls> <noptr> v l stub g output ( <ptr> ops <dot> <ptr> file <dot> <ptr> f h <dot> <ptr> p )
<cls> <noptr> tcd v timings cap ( <ptr> sd <dot> <ptr> cap )
<cls> <ptr> media entity to vsp entity ( <ptr> entity )
<cls> <noptr> saa vb buffer queue ( <ptr> vb )
<cls> <noptr> t wxs parm ( <ptr> file <dot> <ptr> priv <dot> <ptr> sp )
<cls> <noptr> c xxx config ( <ptr> dev )
<cls> <noptr> td a set easy mode ( <ptr> fe <dot> <noptr> enable )
<cls> <noptr> vp if enum fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> fmt )
<cls> <noptr> huge tlb init ( )
<cls> <noptr> wp tuner read ser par ( <ptr> ic adap <dot> <noptr> msg <dot> <noptr> num )
<cls> <noptr> copy arg to user ( <ptr> u arg <dot> <ptr> k arg <dot> <noptr> cmd )
<cls> <ptr> v pfe lookup pix format ( <noptr> pix format )
<cls> <noptr> v pbe display g selection ( <ptr> file <dot> <ptr> priv <dot> <ptr> sel )
<cls> <noptr> cluster set flag ( <ptr> info <dot> <noptr> flag )
<cls> <noptr> reg w var ( <ptr> gsp ca dev <dot> <ptr> seq <dot> <ptr> page <dot> <noptr> page len )
<cls> <noptr> go buf finish ( <ptr> vb )
<cls> <noptr> stv read bits ( <ptr> state <dot> <noptr> label )
<cls> <noptr> b disp buf queue ( <ptr> vb )
<cls> <noptr> media graph walk init ( <ptr> graph <dot> <ptr> m dev )
<cls> <noptr> sensor set page ( <ptr> gsp ca dev <dot> <noptr> page )
<cls> <noptr> c x card setup ( <ptr> dev )
<cls> <noptr> ir get key code ( <ptr> idev <dot> <ptr> ke )
<cls> <noptr> m m ols read u ( <ptr> sd <dot> <noptr> reg <dot> <ptr> val )
<cls> <noptr> vivid radio r x sh w freq seek ( <ptr> file <dot> <ptr> f h <dot> <ptr> a )
<cls> <noptr> is page busy ( <ptr> page )
<cls> <noptr> uvc ioctl stream off ( <ptr> file <dot> <ptr> f h <dot> <noptr> type )
<cls> <noptr> m cam enable mip i ( <ptr> m cam )
<cls> <ptr> find first bad addr ( <ptr> addr <dot> <noptr> size )
<cls> <noptr> sub dev ioctl ( <ptr> file <dot> <noptr> cmd <dot> <noptr> arg )
<cls> <noptr> saa x set v l std ( <ptr> sd <dot> <noptr> std )
<cls> <noptr> tc x block write ( <ptr> tc x <dot> <noptr> reg <dot> <noptr> length <dot> <ptr> values )
<cls> <noptr> pvr query std ( <ptr> file <dot> <ptr> priv <dot> <ptr> std )
<cls> <noptr> cosm set online ( <ptr> c dev )
<cls> <noptr> read cache pages ( <ptr> mapping <dot> <ptr> pages <dot> <ptr> filler <dot> <ptr> data )
<cls> <noptr> l read snr ( <ptr> fe <dot> <ptr> snr )
<cls> <noptr> next mem range rev ( <ptr> idx <dot> <noptr> nid <dot> <noptr> flags <dot> <ptr> type a <dot> <ptr> type b <dot> <ptr> out start <dot> <ptr> out end <dot> <ptr> out nid )
<cls> <noptr> btm tks d iot xwork ( <ptr> work )
<cls> <noptr> solo enum fmt cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> sti hr x done ( <ptr> cec <dot> <noptr> status )
<cls> <noptr> asan set shadow f ( <ptr> addr <dot> <noptr> size )
<cls> <noptr> tt usb dec set interface ( <ptr> dec <dot> <noptr> interface )
<cls> <noptr> mei medi enter ( <ptr> dev )
<cls> <noptr> kas an set free info ( <ptr> cache <dot> <ptr> object <dot> <noptr> tag )
<cls> <noptr> stv x set mins rate ( <ptr> state <dot> <noptr> clk <dot> <noptr> s rate )
<cls> <noptr> fim c is register sub devs ( <ptr> is )
<cls> <noptr> set driver behavior per device ( <ptr> h dev )
<cls> <ptr> task cap c ( <ptr> zone )
<cls> <noptr> pvr debug if c docmd ( <ptr> h dw <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> jz nem c clk period ( <ptr> nem c )
<cls> <noptr> c x d spi read ts ( <ptr> spi <dot> <ptr> read data <dot> <noptr> packet num )
<cls> <noptr> get opc r ( <noptr> opc r <dot> <noptr> mask <dot> <noptr> shift )
<cls> <noptr> kickstart ( <ptr> ioc <dot> <noptr> force <dot> <noptr> sleep flag )
<cls> <noptr> reset afc ( <ptr> state )
<cls> <noptr> fast isolate free pages ( <ptr> cc )
<cls> <noptr> gru lock async resource ( <noptr> han <dot> <dptr> cb <dot> <dptr> dsr )
<cls> <noptr> m ni tree inv end ( <ptr> m mnm m )
<cls> <noptr> hack r f enum freq bands ( <ptr> file <dot> <ptr> priv <dot> <ptr> b and )
<cls> <noptr> w mis rev d ads p memory ( <noptr> reg )
<cls> <noptr> msi start streaming ( <ptr> v q <dot> <noptr> count )
<cls> <noptr> dib ic xfer new ( <ptr> adap <dot> <ptr> msg <dot> <noptr> num )
<cls> <noptr> dump un reclaim able slab ( )
<cls> <noptr> dib get current gain ( <ptr> fe <dot> <ptr> r f <dot> <ptr> bb <dot> <ptr> r f gain limit <dot> <ptr> r flt )
<cls> <noptr> master xfer ( <ptr> adapter <dot> <ptr> msg <dot> <noptr> num )
<cls> <noptr> tcc sier r int handler ( <ptr> sd <dot> <ptr> handled )
<cls> <noptr> af front end callback ( <ptr> adapter priv <dot> <noptr> component <dot> <noptr> cmd <dot> <noptr> arg )
<cls> <noptr> state check disable encoder run ( <ptr> h dw )
<cls> <noptr> compaction zone list suitable ( <ptr> ac <dot> <noptr> order <dot> <noptr> alloc flags )
<cls> <noptr> c x get front end ( <ptr> fe <dot> <ptr> p )
<cls> <noptr> x c set params ( <ptr> fe )
<cls> <noptr> qca regulator enable ( <ptr> qca dev )
<cls> <noptr> mem stick next req ( <ptr> host <dot> <dptr> m r q )
<cls> <noptr> si power down ( <ptr> s dev )
<cls> <noptr> vb i get next buf ( <ptr> dma q <dot> <dptr> buf )
<cls> <noptr> hl build hw mon channel info ( <ptr> h dev <dot> <ptr> sensors arr )
<cls> <noptr> vim cents d register ( <ptr> ved <dot> <ptr> sd <dot> <ptr> v l dev <dot> <ptr> const name <dot> <noptr> function <dot> <noptr> numpad s <dot> <ptr> pads <dot> <ptr> sd int ops <dot> <ptr> sd ops )
<cls> <noptr> oom reserves allowed ( <ptr> tsk )
<cls> <noptr> fim cmm g fmt m plane ( <ptr> file <dot> <ptr> f h <dot> <ptr> f )
<cls> <ptr> get ic ( <ptr> max <dot> <noptr> src )
<cls> <noptr> fim c lite link setup ( <ptr> entity <dot> <ptr> local <dot> <ptr> remote <dot> <noptr> flags )
<cls> <noptr> gru init ( )
<cls> <noptr> m fd add devices ( <ptr> parent <dot> <noptr> id <dot> <ptr> cells <dot> <noptr> n devs <dot> <ptr> mem base <dot> <noptr> irq base <dot> <ptr> domain )
<cls> <noptr> am xts cse clr ( <ptr> tsc adc <dot> <noptr> val )
<cls> <noptr> adv setrgb quant ization mode ( <ptr> sd <dot> <ptr> ctrl )
<cls> <noptr> rts x usb ms runtime suspend ( <ptr> dev )
<cls> <ptr> get page owner ( <ptr> page ext )
<cls> <noptr> can follow write pmd ( <noptr> pmd <dot> <noptr> flags )
<cls> <ptr> sp attach ( <ptr> config <dot> <ptr> ic )
<cls> <noptr> per cpu alloc setup ( <ptr> str )
<cls> <noptr> el ( <ptr> av <dot> <noptr> window nr <dot> <noptr> x <dot> <noptr> y )
<cls> <noptr> bt usb mtk id get ( <ptr> data <dot> <ptr> id )
<cls> <noptr> rtl fetch vendor settings ( <ptr> pcr )
<cls> <noptr> x c set radio freq ( <ptr> fe )
<cls> <noptr> saa x query std ( <ptr> sd <dot> <ptr> std )
<cls> <noptr> dvb u event ( <ptr> dev <dot> <ptr> env )
<cls> <noptr> ov regulator s enable ( <ptr> ov )
<cls> <noptr> g scm m buf prepare ( <ptr> vb )
<cls> <noptr> shmem un use swap entries ( <ptr> inode <dot> <noptr> p vec <dot> <ptr> indices )
<cls> <noptr> l gs gxx set if freq ( <ptr> priv <dot> <noptr> freq )
<cls> <noptr> c x usb medi on set norm ( <ptr> c x dev <dot> <noptr> norm )
<cls> <noptr> relative prime ( <noptr> big <dot> <noptr> little )
<cls> <noptr> is device reset ( <ptr> hw )
<cls> <noptr> adv xx get selection ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> sel )
<cls> <ptr> z swap pool find get ( <ptr> type <dot> <ptr> compressor )
<cls> <ptr> check spi ( )
<cls> <noptr> vm cidr v init ( )
<cls> <noptr> usb tv norm tof reg ( <noptr> norm )
<cls> <ptr> shmem gets bmp ol ( <ptr> sb info )
<cls> <noptr> dr x dap fas i read modify write reg ( <ptr> dev addr <dot> <noptr> w addr <dot> <noptr> r addr <dot> <noptr> w data <dot> <ptr> r data )
<cls> <noptr> demo d attach stv ( <ptr> input )
<cls> <noptr> max irq global un mask ( <ptr> irq drv data )
<cls> <noptr> paint it ( <ptr> object <dot> <noptr> color )
<cls> <noptr> uvc video start transfer ( <ptr> stream <dot> <noptr> gfp flags )
<cls> <noptr> tw g parm ( <ptr> file <dot> <ptr> priv <dot> <ptr> sp )
<cls> <noptr> scm read fw version ( <ptr> state )
<cls> <noptr> fmc update region info ( <ptr> f m dev <dot> <noptr> region to set )
<cls> <noptr> em dvb init terra tect stick hd ( <ptr> dev )
<cls> <noptr> irq enable r x ( <ptr> sd <dot> <noptr> mask )
<cls> <noptr> ln b command ( <ptr> dev <dot> <noptr> link <dot> <noptr> ln b <dot> <noptr> cmd )
<cls> <noptr> tps x print version ( <ptr> client <dot> <noptr> version )
<cls> <noptr> fcg frequency ( <ptr> sd <dot> <ptr> f )
<cls> <noptr> set audio ( <ptr> fe <dot> <ptr> params )
<cls> <noptr> kemp ld get hardware mutex ( <ptr> pld )
<cls> <noptr> c x init common ( <ptr> dev )
<cls> <noptr> lg x gets ccc code mode ( <ptr> state <dot> <ptr> mode a <dot> <ptr> mode b <dot> <ptr> mode c <dot> <ptr> mode d )
<cls> <noptr> saa irq video done ( <ptr> dev <dot> <noptr> status )
<cls> <noptr> cec write ( <ptr> sd <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> xpc die deactivate ( )
<cls> <noptr> dr x j dap atomic read reg ( <ptr> dev addr <dot> <noptr> addr <dot> <ptr> data <dot> <noptr> flags )
<cls> <ptr> k mem leak seq start ( <ptr> seq <dot> <ptr> pos )
<cls> <noptr> sci ffd poll ( <ptr> f <dot> <ptr> wait )
<cls> <noptr> optimal red zone ( <noptr> object size )
<cls> <noptr> k huge paged max p tes none store ( <ptr> k obj <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> fim c is ic runtime suspend ( <ptr> dev )
<cls> <noptr> qca get speed ( <ptr> hu <dot> <noptr> speed type )
<cls> <noptr> em xx tuner setup ( <ptr> dev <dot> <noptr> tuner addr )
<cls> <noptr> ce u runtime suspend ( <ptr> dev )
<cls> <noptr> c xxx initialize ( <ptr> client )
<cls> <noptr> pwc try fmt vid cap ( <ptr> file <dot> <ptr> f h <dot> <ptr> f )
<cls> <noptr> set saturation ( <ptr> gsp ca dev <dot> <noptr> val )
<cls> <noptr> mtk vcodec enc driver init ( )
<cls> <noptr> fin tek cr write ( <ptr> fin tek <dot> <noptr> val <dot> <noptr> reg )
<cls> <noptr> tw x dma mode set ( <ptr> val <dot> <ptr> kp )
<cls> <noptr> ska set flip real ( <ptr> gsp ca dev <dot> <noptr> v flip <dot> <noptr> h flip )
<cls> <noptr> fin tek config mode disable ( <ptr> fin tek )
<cls> <noptr> set free obj ( <ptr> zs page <dot> <noptr> obj )
<cls> <noptr> iv tv it vc ( <ptr> it v <dot> <noptr> get <dot> <noptr> reg <dot> <ptr> val )
<cls> <noptr> sm volatile ( <ptr> dev <dot> <noptr> reg )
<cls> <noptr> mux sel ( <ptr> b tv <dot> <noptr> input )
<cls> <noptr> v few ord per line by pixel ( <noptr> format <dot> <noptr> pixel per line )
<cls> <noptr> ds read signal strength ( <ptr> fe <dot> <ptr> signal strength )
<cls> <noptr> adv write ( <ptr> sd <dot> <noptr> reg <dot> <noptr> value )
<cls> <noptr> nova td sleep override ( <ptr> fe )
<cls> <noptr> saa dvb register ( <ptr> port )
<cls> <noptr> m r read ( <ptr> gsp ca dev <dot> <noptr> len )
<cls> <noptr> mem stick check ( <ptr> work )
<cls> <ptr> check dec mpg buffers ( )
<cls> <noptr> intel quar k register ic clk ( <ptr> dev )
<cls> <noptr> venus isr thread ( <ptr> core )
<cls> <noptr> p cpu next fit region ( <ptr> chunk <dot> <noptr> alloc bits <dot> <noptr> align <dot> <ptr> bit off <dot> <ptr> bits )
<cls> <noptr> v pbe isr even field ( <ptr> disp obj <dot> <ptr> layer )
<cls> <noptr> cafe smbus read data ( <ptr> cam <dot> <noptr> addr <dot> <noptr> command <dot> <ptr> value )
<cls> <noptr> v fe halt ( <ptr> v fe )
<cls> <noptr> g sch w set input addr ( <ptr> dev <dot> <ptr> addr <dot> <noptr> index )
<cls> <noptr> msp c print mode ( <ptr> client )
<cls> <noptr> delta try fmt frame ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> compact finished ( <ptr> cc )
<cls> <noptr> os d set rom clut ( <ptr> sd <dot> <noptr> rom clut )
<cls> <noptr> mmp cam resume ( <ptr> pdev )
<cls> <noptr> spc a set mode ( <ptr> gsp ca dev <dot> <noptr> x mult <dot> <noptr> y mult )
<cls> <ptr> check spi ( )
<cls> <noptr> pwc enum input ( <ptr> file <dot> <ptr> f h <dot> <ptr> i )
<cls> <noptr> si write reg ( <ptr> state <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> six core interrupt ( <noptr> irq <dot> <ptr> dev )
<cls> <noptr> ns to clock divider ( <noptr> ns )
<cls> <noptr> td a calc km ( <ptr> fe <dot> <ptr> freq )
<cls> <noptr> coda g parm ( <ptr> file <dot> <ptr> f h <dot> <ptr> a )
<cls> <noptr> init r cmap imon mce ( )
<cls> <noptr> iv tv reset ir gpio ( <ptr> it v )
<cls> <noptr> is if enable ( <noptr> en )
<cls> <noptr> reserve bad mem ( <noptr> pattern <dot> <noptr> start bad <dot> <noptr> end bad )
<cls> <noptr> mpt scsi h get free chain buffer ( <ptr> ioc <dot> <ptr> ret index )
<cls> <noptr> m cam vid ioc g input ( <ptr> filp <dot> <ptr> priv <dot> <ptr> i )
<cls> <noptr> walk pmd range ( <ptr> pud <dot> <noptr> addr <dot> <noptr> end <dot> <ptr> walk )
<cls> <noptr> b disp job abort ( <ptr> priv )
<cls> <noptr> ibm asm receive event ( <ptr> sp <dot> <ptr> data <dot> <noptr> data size )
<cls> <noptr> six core ic xfer ( <ptr> core <dot> <noptr> type <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> do sys m sync ( <noptr> start <dot> <noptr> len <dot> <noptr> flags )
<cls> <noptr> r card rif parse sub devs ( <ptr> sdr )
<cls> <noptr> ss std ( <ptr> sd <dot> <noptr> norm )
<cls> <noptr> clear pte ( <ptr> ctx <dot> <noptr> pte addr )
<cls> <noptr> z l set frequency ( <ptr> state <dot> <noptr> frequency )
<cls> <noptr> add to swap cache ( <ptr> page <dot> <noptr> entry <dot> <noptr> gfp )
<cls> <noptr> swap max write ( <ptr> of <dot> <ptr> buf <dot> <noptr> nbytes <dot> <noptr> off )
<cls> <noptr> bt mtk uart flush ( <ptr> h dev )
<cls> <noptr> ov prob edt ( <ptr> client <dot> <ptr> priv )
<cls> <noptr> bt usb bcm set diag ( <ptr> h dev <dot> <noptr> enable )
<cls> <noptr> b tmr v l send hs cfg cmd ( <ptr> priv )
<cls> <noptr> mem cgroup commit charge ( <ptr> page <dot> <ptr> mem cg <dot> <noptr> lru care <dot> <noptr> compound )
<cls> <noptr> prio isvalid ( <noptr> prio )
<cls> <noptr> memory read ( <ptr> core <dot> <noptr> address <dot> <ptr> value )
<cls> <noptr> kas an remove pte table ( <ptr> pte <dot> <noptr> addr <dot> <noptr> end )
<cls> <noptr> wait deb i ( <ptr> av <dot> <noptr> adr <dot> <noptr> state )
<cls> <noptr> initi c module ( <ptr> adapter <dot> <ptr> const ic )
<cls> <noptr> start report ( <ptr> flags )
<cls> <noptr> solo enc get input ( <ptr> file <dot> <ptr> priv <dot> <ptr> index )
<cls> <noptr> smi app read nvm page ( <ptr> sensor <dot> <noptr> p <dot> <ptr> nvm <dot> <ptr> status )
<cls> <noptr> cluster list init ( <ptr> list )
<cls> <noptr> dst ca write ( <ptr> file <dot> <ptr> buffer <dot> <noptr> length <dot> <ptr> offset )
<cls> <noptr> max resume ( <ptr> dev )
<cls> <noptr> bt usb mtk submit wmt recv urb ( <ptr> h dev )
<cls> <noptr> send burst ( <ptr> fe <dot> <noptr> burst )
<cls> <noptr> videos input ( <ptr> file <dot> <ptr> f h <dot> <noptr> input )
<cls> <noptr> r card rif buf s overflow ( <dptr> buf )
<cls> <noptr> video i cg parm ( <ptr> filp <dot> <ptr> priv <dot> <ptr> parm )
<cls> <noptr> v l phys addr validate ( <noptr> phys addr <dot> <ptr> parent <dot> <ptr> port )
<cls> <noptr> csi print status ( <ptr> csi )
<cls> <noptr> dvb vb exp buf ( <ptr> ctx <dot> <ptr> exp )
<cls> <noptr> l read snr ( <ptr> fe <dot> <ptr> snr )
<cls> <noptr> v l sub dev init ( <ptr> sd <dot> <ptr> ops )
<cls> <ptr> to ir state ( <ptr> sd )
<cls> <noptr> m anti shif write io m ( <ptr> ca <dot> <noptr> addr <dot> <noptr> data )
<cls> <noptr> hw break val write ( )
<cls> <noptr> usb urb init v ( <ptr> stream <dot> <ptr> props )
<cls> <noptr> iv tv api get data ( <ptr> mb data <dot> <noptr> mb <dot> <noptr> argc <dot> <noptr> data )
<cls> <noptr> c x write ( <ptr> client <dot> <noptr> addr <dot> <noptr> value )
<cls> <noptr> a zci write cam control ( <ptr> ca <dot> <noptr> slot <dot> <noptr> address <dot> <noptr> value )
<cls> <noptr> vp power ctrl ( <ptr> d <dot> <noptr> onoff )
<cls> <noptr> tws parm ( <ptr> file <dot> <ptr> priv <dot> <ptr> sp )
<cls> <noptr> ivers ity ( <ptr> state )
<cls> <noptr> int queue sanity checks ( <ptr> h dev <dot> <ptr> q <dot> <noptr> numof entries )
<cls> <noptr> cch interrupt ( <ptr> cch )
<cls> <noptr> c x dvb stop feed ( <ptr> feed )
<cls> <noptr> t vps raw fmt ( <ptr> sd <dot> <ptr> fmt )
<cls> <noptr> px pbuf queue ( <ptr> vb )
<cls> <noptr> ov x read ( <ptr> ov x <dot> <noptr> addr <dot> <ptr> val )
<cls> <noptr> exy nos jpegs w reset ( <ptr> base )
<cls> <noptr> c x pv gt callback ( <ptr> core <dot> <noptr> command <dot> <noptr> arg )
<cls> <noptr> needs unaligned copy ( <ptr> ptr )
<cls> <noptr> vid ioc g audio ( <ptr> file <dot> <ptr> f h <dot> <ptr> a )
<cls> <noptr> swap node ( <ptr> p )
<cls> <noptr> state check enable encoder run ( <ptr> h dw )
<cls> <noptr> sun ics i capture start ( <ptr> csi )
<cls> <noptr> c x der shutdown to sleeps ( <ptr> priv )
<cls> <noptr> coda jpeg check buffer ( <ptr> ctx <dot> <ptr> vb )
<cls> <noptr> pch p hub restore reg conf ( <ptr> pdev )
<cls> <noptr> saa api read eeprom ( <ptr> dev <dot> <ptr> buf <dot> <noptr> buf len )
<cls> <noptr> tif munmap sg ( <ptr> sock <dot> <ptr> sg <dot> <noptr> n ents <dot> <noptr> direction )
<cls> <noptr> iv tv v api result ( <ptr> it v <dot> <noptr> data <dot> <noptr> cmd <dot> <noptr> args )
<cls> <noptr> ccd cls c configure ( <ptr> c cdc <dot> <ptr> req )
<cls> <noptr> task init ( <ptr> dev <dot> <ptr> buf <dot> <noptr> task )
<cls> <noptr> lg xic gate ctrl ( <ptr> fe <dot> <noptr> enable )
<cls> <noptr> aur c stop ( <ptr> rc )
<cls> <noptr> bd i register va ( <ptr> bd i <dot> <ptr> fmt <dot> <noptr> args )
<cls> <noptr> ts stat work ( <ptr> work )
<cls> <noptr> wl f m set volume ( <ptr> core <dot> <noptr> volume )
<cls> <noptr> rtl sdr urb complete ( <ptr> urb )
<cls> <noptr> au setup c vbs tuner mode ( <ptr> state <dot> <noptr> input mode )
<cls> <noptr> norm min w ( <ptr> vc )
<cls> <ptr> nxt attach ( <ptr> config <dot> <ptr> ic )
<cls> <noptr> set regid x ( <ptr> cd <dot> <ptr> r <dot> <ptr> i <dot> <noptr> m <dot> <noptr> addr <dot> <noptr> idx <dot> <noptr> val )
<cls> <noptr> v l fw node endpoint parse csi bus ( <ptr> fw node <dot> <ptr> ve p <dot> <noptr> bus type )
<cls> <noptr> xpc init fifo uv ( <ptr> head )
<cls> <noptr> sp mfc get enc d pb count v ( <ptr> dev )
<cls> <noptr> cpl d info ver ( <ptr> cobalt )
<cls> <noptr> c x usb medi ong frequency ( <ptr> file <dot> <ptr> f h <dot> <ptr> freq )
<cls> <noptr> e did write hdmi segment ( <ptr> sd <dot> <noptr> port )
<cls> <noptr> check cpu on node ( <ptr> pg dat )
<cls> <noptr> tvp x g frame interval ( <ptr> sd <dot> <ptr> ival )
<cls> <noptr> au usb probe ( <ptr> interface <dot> <ptr> id )
<cls> <noptr> opera bw ( <ptr> fe <dot> <ptr> buf )
<cls> <noptr> f ( <ptr> pte <dot> <noptr> addr <dot> <ptr> data )
<cls> <noptr> c xxx s video encoding ( <ptr> c x hdl <dot> <noptr> val )
<cls> <noptr> t dax set power ( <ptr> state <dot> <noptr> on )
<cls> <noptr> vmc i q pair get produce indexes ( <ptr> q pair <dot> <ptr> producer tail <dot> <ptr> consumer head )
<cls> <noptr> next search order ( <ptr> cc <dot> <noptr> order )
<cls> <noptr> bcm apple set shutdown ( <ptr> dev <dot> <noptr> powered )
<cls> <noptr> vid out buf queue ( <ptr> vb )
<cls> <noptr> scm o if set power ( <ptr> sd <dot> <noptr> on )
<cls> <noptr> store freq ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <ptr> check same filled pages enabled ( )
<cls> <noptr> v pe top reset ( <ptr> dev )
<cls> <noptr> sun ics i setup scratch buffer ( <ptr> csi <dot> <noptr> slot )
<cls> <noptr> c x find mailbox ( <ptr> dev )
<cls> <noptr> bt tv buffer activate vb i ( <ptr> b tv <dot> <ptr> vb i )
<cls> <noptr> v l try fmt ( <ptr> ops <dot> <ptr> file <dot> <ptr> f h <dot> <ptr> arg )
<cls> <noptr> slopes to scale ( <ptr> slopes <dot> <noptr> num <dot> <noptr> val )
<cls> <ptr> sci f rb get ( <ptr> rb <dot> <noptr> size )
<cls> <noptr> ctrl freq isdirty ( <ptr> cptr )
<cls> <noptr> usb vision parse data ( <ptr> usb vision )
<cls> <noptr> t vps raw fmt ( <ptr> sd <dot> <ptr> fmt )
<cls> <noptr> hist comp params ( <ptr> hist <dot> <ptr> user cfg )
<cls> <noptr> wp page copy ( <ptr> vm f )
<cls> <noptr> igor plug usb callback ( <ptr> urb )
<cls> <noptr> ddb init dd bridge ( )
<cls> <noptr> ga ( <ptr> state <dot> <noptr> pga switch )
<cls> <noptr> ccd cls c setup regs ( <ptr> c cdc <dot> <ptr> cfg )
<cls> <noptr> scm spi read ( <ptr> state <dot> <ptr> addr <dot> <noptr> len <dot> <noptr> tx size )
<cls> <noptr> rti q tree ( <ptr> priv <dot> <noptr> i q <dot> <noptr> fix val <dot> <noptr> var val <dot> <noptr> fix reg )
<cls> <noptr> techni sat usb set led timer ( <ptr> d <dot> <noptr> red <dot> <noptr> green )
<cls> <noptr> shmem exchange ( <ptr> old dir <dot> <ptr> old dentry <dot> <ptr> new dir <dot> <ptr> new dentry )
<cls> <noptr> h pkt cull ( <ptr> h )
<cls> <noptr> me it xep m runtime resume ( <ptr> device )
<cls> <noptr> lru add drain cpu ( <noptr> cpu )
<cls> <noptr> c x usb medi on cf ref c lines mpl ( <ptr> dvb dev <dot> <ptr> bt <dot> <noptr> first field <dot> <noptr> max line samples <dot> <noptr> buf )
<cls> <noptr> bt tv g parm ( <ptr> file <dot> <ptr> f <dot> <ptr> parm )
<cls> <noptr> intell pss has i dma ( <ptr> l pss )
<cls> <noptr> v op notify ( <ptr> v rh )
<cls> <noptr> v l print query ctrl ( <ptr> arg <dot> <noptr> write only )
<cls> <noptr> v mem alt map nr free ( <ptr> alt map )
<cls> <noptr> r jn get fmt ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> format )
<cls> <noptr> media create pad links ( <ptr> m dev <dot> <noptr> source function <dot> <ptr> source <dot> <noptr> source pad <dot> <noptr> sink function <dot> <ptr> sink <dot> <noptr> sink pad <dot> <noptr> flags <dot> <noptr> allow both undefined )
<cls> <noptr> resizer init entities ( <ptr> res )
<cls> <noptr> shows lab objects ( <ptr> s <dot> <ptr> buf <dot> <noptr> flags )
<cls> <noptr> te f driver init ( )
<cls> <noptr> venus power on ( <ptr> h dev )
<cls> <noptr> c xdr sleep ( <ptr> fe )
<cls> <noptr> add memory resource ( <noptr> nid <dot> <ptr> res )
<cls> <noptr> rt set tv standard ( <ptr> priv <dot> <noptr> bw <dot> <noptr> type <dot> <noptr> std <dot> <noptr> del sys )
<cls> <noptr> color white ( <ptr> object )
<cls> <noptr> max irq mask ( <ptr> data )
<cls> <noptr> vmc i ctx unset notify ( <ptr> context )
<cls> <noptr> table ( <ptr> gsp ca dev )
<cls> <noptr> six phase diversity mode to idx ( <noptr> mode )
<cls> <noptr> dvb ca enc am change irq ( <ptr> pub ca <dot> <noptr> slot <dot> <noptr> change type )
<cls> <noptr> vp ifconfig addr ( <ptr> ch <dot> <noptr> mux mode )
<cls> <noptr> ce u capture ( <ptr> ce udev )
<cls> <noptr> de interlace set bits ( <ptr> dev <dot> <noptr> reg <dot> <noptr> bits )
<cls> <noptr> d m gpio get ( <ptr> dev <dot> <noptr> mask )
<cls> <noptr> stb write reg ( <ptr> state <dot> <noptr> reg <dot> <noptr> data )
<cls> <noptr> k compact d ( <ptr> p )
<cls> <noptr> rts x pci probe ( <ptr> pci dev <dot> <ptr> id )
<cls> <noptr> smi raw process ( <ptr> rc dev <dot> <ptr> buffer <dot> <noptr> length )
<cls> <noptr> d ibm set power mode ( <ptr> state <dot> <noptr> mode )
<cls> <noptr> vivid vb igen tele text raw ( <ptr> data <dot> <ptr> buf <dot> <noptr> sampling rate )
<cls> <noptr> pvr buffer queue ( <ptr> b p )
<cls> <noptr> r ga parsed t ( <ptr> r ga )
<cls> <noptr> stk initialise ( <ptr> dev )
<cls> <noptr> vp bes std ( <ptr> v pbe dev <dot> <noptr> std id )
<cls> <noptr> a pds x prox threshold store ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> len )
<cls> <ptr> check dec mpg buffers ( )
<cls> <noptr> pvr ctrl get max ( <ptr> cptr )
<cls> <noptr> mtm set flip ( <ptr> mtm <dot> <noptr> flip <dot> <noptr> mask )
<cls> <noptr> au gpio setup ( <ptr> dev )
<cls> <noptr> c xir handle key ( <ptr> ir )
<cls> <noptr> memory failure ( <noptr> pfn <dot> <noptr> flags )
<cls> <noptr> v op virtio copy from user ( <ptr> v dev <dot> <ptr> u buf <dot> <noptr> len <dot> <noptr> daddr <dot> <noptr> d len <dot> <noptr> v rid x )
<cls> <noptr> venc event notify ( <ptr> inst <dot> <noptr> event <dot> <ptr> data )
<cls> <noptr> l gdt mpeg mode ( <ptr> state <dot> <noptr> mode )
<cls> <noptr> sp jpeg enum fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <ptr> check default audio input ( )
<cls> <noptr> wp clean post vma ( <ptr> walk )
<cls> <noptr> coda irqhandler ( <noptr> irq <dot> <ptr> data )
<cls> <noptr> invoke need callbacks ( )
<cls> <noptr> v pes top streaming ( <ptr> q )
<cls> <noptr> can vma merge before ( <ptr> vma <dot> <noptr> vm flags <dot> <ptr> anon vma <dot> <ptr> file <dot> <noptr> v mpg off <dot> <noptr> vm user fault fd ctx )
<cls> <noptr> bts d i or x packet ( <ptr> data )
<cls> <noptr> page counter try charge ( <ptr> counter <dot> <noptr> nr pages <dot> <dptr> fail )
<cls> <noptr> dr x k read signal strength ( <ptr> fe <dot> <ptr> strength )
<cls> <noptr> h v adb g perf end ( <ptr> ctx <dot> <ptr> stream )
<cls> <noptr> sp cec adap enable ( <ptr> adap <dot> <noptr> enable )
<cls> <noptr> lis lv d joystick enable ( <ptr> lis )
<cls> <noptr> sci f connect ( <noptr> epd <dot> <ptr> dst )
<cls> <noptr> t dax detect tx h pd ( <ptr> sd )
<cls> <noptr> c x der active cto sleep tc ( <ptr> priv )
<cls> <noptr> wpf max width ( <ptr> entity <dot> <ptr> pipe )
<cls> <ptr> stable tree search ( <ptr> page )
<cls> <noptr> wp clean pmd entry ( <ptr> pmd <dot> <noptr> addr <dot> <noptr> end <dot> <ptr> walk )
<cls> <noptr> vivid vid out g pixel aspect ( <ptr> file <dot> <ptr> priv <dot> <noptr> type <dot> <ptr> f )
<cls> <noptr> tw l audio has codec ( <ptr> p data <dot> <ptr> parent )
<cls> <noptr> get clear fault map ( <ptr> gru <dot> <ptr> imap <dot> <ptr> d map )
<cls> <noptr> kernel migrate pages ( <noptr> pid <dot> <noptr> max node <dot> <ptr> old nodes <dot> <ptr> new nodes )
<cls> <noptr> vb find timestamp ( <ptr> q <dot> <noptr> timestamp <dot> <noptr> start idx )
<cls> <noptr> au is link shareable ( <ptr> owner <dot> <ptr> entity )
<cls> <noptr> mt set radio freq ( <ptr> fe <dot> <ptr> params )
<cls> <noptr> dcm i pipeline stop ( <ptr> dcm i )
<cls> <noptr> stv x sets roll off ( <ptr> state )
<cls> <noptr> iv tv yuv close ( <ptr> it v )
<cls> <noptr> vb i irq done ( <ptr> dev <dot> <noptr> status )
<cls> <noptr> m m ols set meter ing mode ( <ptr> info <dot> <noptr> mode )
<cls> <noptr> dib set switch ( <ptr> fe <dot> <noptr> sw <dot> <noptr> sw <dot> <noptr> sw )
<cls> <noptr> j mb xms probe ( <ptr> pdev <dot> <ptr> devid )
<cls> <noptr> scale line ( <ptr> src <dot> <ptr> dst <dot> <noptr> src w <dot> <noptr> dst w <dot> <noptr> two pix size )
<cls> <noptr> hms pro block default ( <ptr> card <dot> <dptr> m r q )
<cls> <noptr> til m u enable hw ( <ptr> l m u <dot> <noptr> id )
<cls> <ptr> c x find hw ( <ptr> c x <dot> <noptr> hw )
<cls> <noptr> unlock page lru ( <ptr> page <dot> <noptr> isolated )
<cls> <noptr> cam if hw set out dma size ( <ptr> vp )
<cls> <noptr> snd cards aa capture open ( <ptr> sub stream )
<cls> <noptr> dvb compat video get event ( <ptr> av <dot> <ptr> event <dot> <noptr> flags )
<cls> <noptr> vivid meta out process ( <ptr> dev <dot> <ptr> buf )
<cls> <noptr> life num mbus code ( <ptr> sub dev <dot> <ptr> cfg <dot> <ptr> code )
<cls> <noptr> rts enable ocp ( <ptr> pcr )
<cls> <noptr> csc set coeff bypass ( <ptr> csc <dot> <ptr> csc reg )
<cls> <noptr> mtv power off ( <ptr> mtv )
<cls> <noptr> v l print d v timings ( <ptr> arg <dot> <noptr> write only )
<cls> <noptr> dvb video get event ( <ptr> av <dot> <ptr> event <dot> <noptr> flags )
<cls> <noptr> h aae wb busy ( <ptr> ae wb )
<cls> <noptr> z swap rb insert ( <ptr> root <dot> <ptr> entry <dot> <dptr> dup entry )
<cls> <noptr> debug if c count whitespace ( <ptr> buf <dot> <noptr> count )
<cls> <noptr> go y a suspend ( <ptr> h dev )
<cls> <ptr> cfg to state ( <ptr> c )
<cls> <noptr> huge add to page cache ( <ptr> page <dot> <ptr> mapping <dot> <noptr> idx )
<cls> <noptr> m xl x sf demo d get tps hierarchy ( <ptr> state <dot> <ptr> hierarchy )
<cls> <noptr> vm balloon migrate page ( <ptr> b dev info <dot> <ptr> new page <dot> <ptr> page <dot> <noptr> mode )
<cls> <noptr> order fallback store ( <ptr> s <dot> <ptr> buf <dot> <noptr> length )
<cls> <noptr> vsp video buffer queue ( <ptr> vb )
<cls> <noptr> max swap filesize ( )
<cls> <noptr> vmc i q p broker set page store ( <noptr> handle <dot> <noptr> produce uva <dot> <noptr> consume uva <dot> <ptr> context )
<cls> <noptr> csi phy init formats ( <ptr> sd <dot> <ptr> f h )
<cls> <noptr> altera set dr post ( <ptr> js <dot> <noptr> count <dot> <noptr> start index <dot> <ptr> post amble data )
<cls> <noptr> wcf stop ( <ptr> sd )
<cls> <noptr> un use pte range ( <ptr> vma <dot> <ptr> pmd <dot> <noptr> addr <dot> <noptr> end <dot> <noptr> type <dot> <noptr> front swap <dot> <ptr> fs pages to un use )
<cls> <noptr> free v map are arb augment cb copy ( <ptr> r bold <dot> <ptr> rb new )
<cls> <noptr> d m card list ( <ptr> pci )
<cls> <noptr> sp mfc get enc d pb count v ( <ptr> dev )
<cls> <noptr> panic happened ( <ptr> n <dot> <noptr> val <dot> <ptr> v )
<cls> <noptr> z fold reclaim page ( <ptr> pool <dot> <noptr> retries )
<cls> <noptr> dib pag c startup ( <ptr> demo d )
<cls> <noptr> g sch w set out size ( <ptr> ctx )
<cls> <noptr> shrink list ( <noptr> lru <dot> <noptr> nr to scan <dot> <ptr> lru vec <dot> <ptr> sc )
<cls> <noptr> pcap adc trigger ( <ptr> pcap )
<cls> <noptr> ov set ctrl saturation ( <ptr> sensor <dot> <noptr> value )
<cls> <noptr> ctx clear notify call ( <ptr> context )
<cls> <noptr> vim crm sub devs ( <ptr> vim c )
<cls> <noptr> iv tv convert iv tv vb i ( <ptr> it v <dot> <ptr> p )
<cls> <noptr> adb s register ( <ptr> sd <dot> <ptr> reg )
<cls> <noptr> techni sat usb identify state ( <ptr> udev <dot> <ptr> props <dot> <dptr> desc <dot> <ptr> cold )
<cls> <noptr> set pll ( <ptr> b tv )
<cls> <noptr> l k dtm write buddy after free ( )
<cls> <noptr> mem cgroup can attach ( <ptr> t set )
<cls> <noptr> fim cmm open ( <ptr> file )
<cls> <noptr> a uic gate ctrl ( <ptr> fe <dot> <noptr> enable )
<cls> <noptr> huge tlb report node mem info ( <noptr> nid <dot> <ptr> buf )
<cls> <noptr> a pds x prox reporting mode show ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> c sid get format ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> fmt )
<cls> <noptr> tc enable e did ( <ptr> sd )
<cls> <noptr> b h prox mode control ( <ptr> chip )
<cls> <noptr> wb cir irq r x ( <ptr> data <dot> <ptr> device )
<cls> <noptr> saa hss std ( <ptr> sd <dot> <noptr> std )
<cls> <noptr> me ime quirk probe ( <ptr> pdev <dot> <ptr> cfg )
<cls> <noptr> mpt ctl f async ( <noptr> fd <dot> <ptr> file p <dot> <noptr> mode )
<cls> <noptr> v l print crop ( <ptr> arg <dot> <noptr> write only )
<cls> <noptr> sparse buffer init ( <noptr> size <dot> <noptr> nid )
<cls> <noptr> saas routing ( <ptr> sd <dot> <noptr> input <dot> <noptr> output <dot> <noptr> config )
<cls> <noptr> si start seq ( <ptr> radio )
<cls> <noptr> page ext init ( )
<cls> <noptr> pulse width count tous ( <noptr> count <dot> <noptr> divider )
<cls> <noptr> ccp video queue ( <ptr> video <dot> <ptr> buffer )
<cls> <noptr> setups lub max order ( <ptr> str )
<cls> <noptr> t mir change protocol ( <ptr> rc <dot> <ptr> rc proto )
<cls> <noptr> mtv close ( <ptr> sub dev <dot> <ptr> f h )
<cls> <noptr> sci f send exit ( <ptr> sci f dev )
<cls> <noptr> isp isr dbg ( <ptr> isp <dot> <noptr> irq status )
<cls> <noptr> ts poll ( <ptr> file <dot> <ptr> wait )
<cls> <noptr> snd cobalt card set names ( <ptr> c obsc )
<cls> <noptr> mtm set flip ( <ptr> mtm <dot> <noptr> flip <dot> <noptr> mask )
<cls> <noptr> check from zero ( <ptr> ref )
<cls> <noptr> delta try fmt frame ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> gsc mmdevice run ( <ptr> priv )
<cls> <ptr> check tri ton ( )
<cls> <noptr> wm irq init ( <ptr> wm )
<cls> <noptr> gsp ca stream off ( <ptr> gsp ca dev )
<cls> <noptr> sp mfc get dec frame type v ( <ptr> dev )
<cls> <noptr> gru wait idle or exception ( <ptr> gen )
<cls> <noptr> avc care set ( <ptr> fdt v )
<cls> <noptr> m lv g input status ( <ptr> sd <dot> <ptr> status )
<cls> <noptr> parse caps ( <ptr> core <dot> <noptr> codecs <dot> <noptr> domain <dot> <ptr> data )
<cls> <noptr> stv blind check agc min level ( <ptr> int p <dot> <noptr> demo d )
<cls> <noptr> xsd fec dev open ( <ptr> i ptr <dot> <ptr> fptr )
<cls> <noptr> au card analog fe setup ( <ptr> dev )
<cls> <noptr> free slow path store ( <ptr> s <dot> <ptr> buf <dot> <noptr> length )
<cls> <noptr> ctrl std cur isdirty ( <ptr> cptr )
<cls> <noptr> event file read ( <ptr> file <dot> <ptr> buf <dot> <noptr> count <dot> <ptr> offset )
<cls> <noptr> init r cmap encore en ltv ( )
<cls> <noptr> go loader probe ( <ptr> interface <dot> <ptr> id )
<cls> <noptr> e tek set power ( <ptr> sub dev <dot> <noptr> on )
<cls> <noptr> set q am ( <ptr> state <dot> <noptr> intermediate freq khz <dot> <noptr> tuner freq offset )
<cls> <noptr> stb read regs ( <ptr> state <dot> <noptr> reg <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> cro sec cec probe ( <ptr> pdev )
<cls> <noptr> iv tv gpio init ( <ptr> it v )
<cls> <noptr> emma prp device run ( <ptr> priv )
<cls> <noptr> x c set digital params ( <ptr> fe )
<cls> <noptr> c cdc link validate ( <ptr> sd <dot> <ptr> link <dot> <ptr> source fmt <dot> <ptr> sink fmt )
<cls> <noptr> flex cop dma config ( <ptr> fc <dot> <ptr> dma <dot> <noptr> dma idx )
<cls> <noptr> fri io front end attach ( <ptr> adap )
<cls> <noptr> xsd fec irq thread ( <noptr> irq <dot> <ptr> devid )
<cls> <noptr> px a camera probe ( <ptr> pdev )
<cls> <noptr> fast find migrate block ( <ptr> cc )
<cls> <noptr> ov set contrast ( <ptr> reg map <dot> <noptr> value )
<cls> <noptr> m pts as firmware event work ( <ptr> work )
<cls> <noptr> request module async ( <ptr> work )
<cls> <noptr> tp g get text bgcolor ( <ptr> tp g )
<cls> <noptr> c x get fec ( <ptr> state )
<cls> <noptr> vps s reg w ( <noptr> val <dot> <noptr> offset )
<cls> <noptr> solo ic start ( <ptr> solo dev )
<cls> <noptr> eg frequency ( <ptr> sd <dot> <ptr> f )
<cls> <noptr> update dev freq passive ( <ptr> dev freq <dot> <noptr> freq )
<cls> <noptr> fim c mms selection ( <ptr> file <dot> <ptr> f h <dot> <ptr> s )
<cls> <noptr> v pbe displays fmt ( <ptr> file <dot> <ptr> priv <dot> <ptr> fmt )
<cls> <noptr> cxx set ctrl ( <ptr> params <dot> <noptr> busy <dot> <ptr> ctrl )
<cls> <noptr> bd i init ( <ptr> bd i )
<cls> <noptr> b csp deinit ( )
<cls> <noptr> yuan mp cmt init ( <ptr> fe )
<cls> <noptr> c amic write ( <ptr> sd <dot> <noptr> reg addr <dot> <noptr> val )
<cls> <noptr> vsp hgt frame end ( <ptr> entity )
<cls> <noptr> file map fault ( <ptr> vm f )
<cls> <noptr> c x der read packet errors i ( <ptr> priv <dot> <ptr> p enum )
<cls> <noptr> td a assign map layout ( <ptr> fe )
<cls> <noptr> quantize intra ( <ptr> coeff <dot> <ptr> deco eff <dot> <noptr> q p )
<cls> <noptr> me it xe synchronize irq ( <ptr> dev )
<cls> <noptr> em xx write ac ( <ptr> dev <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> mei hdc p initiate session ( <ptr> dev <dot> <ptr> data <dot> <ptr> ake data )
<cls> <noptr> saa buffer zero offsets ( <ptr> port <dot> <noptr> i )
<cls> <noptr> start video dma ( <ptr> dev <dot> <ptr> q <dot> <ptr> buf )
<cls> <noptr> me icl irq read msg ( <ptr> cl <dot> <ptr> me ihdr <dot> <ptr> c mpl list )
<cls> <noptr> sis mod ulator ( <ptr> sd <dot> <ptr> vm )
<cls> <noptr> spc sis runtime resume ( <ptr> dev )
<cls> <noptr> device init ( <ptr> chip )
<cls> <noptr> os d disable layer ( <ptr> sd <dot> <noptr> layer )
<cls> <noptr> v v init controls ( <ptr> sd )
<cls> <noptr> avc a register ( <ptr> av )
<cls> <noptr> lme kill urb ( <ptr> stream )
<cls> <noptr> x c get if frequency ( <ptr> fe <dot> <ptr> freq )
<cls> <noptr> stun register ( <ptr> proto )
<cls> <noptr> ov smbus config ( <ptr> sd <dot> <ptr> cfg )
<cls> <ptr> check ts buf s ( )
<cls> <noptr> ctrl isdirty volume ( <ptr> cptr )
<cls> <noptr> six ic interrupt ( <noptr> irq <dot> <ptr> devid )
<cls> <ptr> mtk mdp ctx get frame ( <ptr> ctx <dot> <noptr> type )
<cls> <noptr> stv write table ( <ptr> state <dot> <ptr> def tab )
<cls> <noptr> vsp create entities ( <ptr> vsp )
<cls> <noptr> usb vision v l read ( <ptr> file <dot> <ptr> buf <dot> <noptr> count <dot> <ptr> p pos )
<cls> <noptr> v fe init formats ( <ptr> sd <dot> <ptr> f h )
<cls> <noptr> t mir key down ( <ptr> ir <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> sti h cec probe ( <ptr> pdev )
<cls> <noptr> b tmr v len able sco routing to host ( <ptr> priv )
<cls> <noptr> delta trace summary ( <ptr> ctx )
<cls> <noptr> csi phy set stream ( <ptr> sd <dot> <noptr> enable )
<cls> <noptr> m bind range ( <ptr> m m <dot> <noptr> start <dot> <noptr> end <dot> <ptr> new pol )
<cls> <noptr> dib set ic adapter ( <ptr> fe <dot> <ptr> ic )
<cls> <noptr> h fi core init ( <ptr> core )
<cls> <noptr> c x d set front end ( <ptr> fe )
<cls> <noptr> digit vic xfer ( <ptr> adap <dot> <noptr> msg <dot> <noptr> num )
<cls> <noptr> xp net send ( <ptr> skb <dot> <ptr> queued msg <dot> <noptr> start addr <dot> <noptr> end addr <dot> <noptr> embedded bytes <dot> <noptr> dest partid )
<cls> <noptr> am radio set freq ( <ptr> radio <dot> <noptr> freq )
<cls> <noptr> c pia enum frame sizes ( <ptr> file <dot> <ptr> f h <dot> <ptr> f size )
<cls> <noptr> lt audio ( <ptr> b tv <dot> <ptr> t <dot> <noptr> set )
<cls> <noptr> smi app pll calculate ( <ptr> dev <dot> <ptr> limits <dot> <ptr> pll )
<cls> <noptr> bcm sleep ( <ptr> fe )
<cls> <noptr> v code v get ( <ptr> state <dot> <noptr> s mrt )
<cls> <noptr> hl device write ( <ptr> f <dot> <ptr> buf <dot> <noptr> count <dot> <ptr> p pos )
<cls> <noptr> dvb dmx dev pes filter set ( <ptr> dmx dev <dot> <ptr> dmx dev filter <dot> <ptr> params )
<cls> <noptr> vps m px stu ner ( <ptr> sd <dot> <ptr> vt )
<cls> <noptr> sp mfc enc init ( <ptr> ctx )
<cls> <noptr> r x clk r xs carrier ( <ptr> c <dot> <noptr> freq <dot> <ptr> divider )
<cls> <noptr> check memory region inline ( <noptr> addr <dot> <noptr> size <dot> <noptr> write <dot> <noptr> re tip )
<cls> <noptr> tt usb ir bulk complete ( <ptr> urb )
<cls> <noptr> state eval encoder run ( <ptr> h dw )
<cls> <noptr> tw l get version ( )
<cls> <noptr> ov write ( <ptr> sd <dot> <noptr> reg <dot> <noptr> value )
<cls> <noptr> iv tv streams register ( <ptr> it v )
<cls> <noptr> check kernel text object ( <noptr> ptr <dot> <noptr> n <dot> <noptr> to user )
<cls> <noptr> g dis r ( <noptr> irq <dot> <ptr> prv )
<cls> <noptr> imx mode regs ( <ptr> priv )
<cls> <noptr> d m probe ( <ptr> pdev <dot> <ptr> ent )
<cls> <noptr> coda k fifo sync to device full ( <ptr> ctx )
<cls> <noptr> rtl reg map gather write ( <ptr> context <dot> <ptr> reg <dot> <noptr> reg len <dot> <ptr> val <dot> <noptr> val len )
<cls> <noptr> alloc refill show ( <ptr> s <dot> <ptr> buf )
<cls> <noptr> v pbe driver init ( )
<cls> <noptr> a then queue ( <ptr> hu <dot> <ptr> skb )
<cls> <ptr> check channel mask ( )
<cls> <noptr> c xxx audio bulk irq ( <ptr> urb )
<cls> <noptr> dr x d config ic ( <ptr> fe <dot> <noptr> onoff )
<cls> <noptr> get q am signal to noise ( <ptr> state <dot> <ptr> p signal to noise )
<cls> <noptr> dev freq simple ondemand func ( <ptr> df <dot> <ptr> freq )
<cls> <noptr> move free list head ( <ptr> free list <dot> <ptr> free page )
<cls> <noptr> acket ( <ptr> gsp ca dev )
<cls> <noptr> p cpu page idx ( <noptr> cpu <dot> <noptr> page idx )
<cls> <noptr> ll device want to wakeup ( <ptr> st data )
<cls> <noptr> gen wq e fir checking ( <ptr> cd )
<cls> <noptr> sci f mmu notifier invalidate range end ( <ptr> mn <dot> <ptr> range )
<cls> <noptr> ln b set sat ( <ptr> dev <dot> <noptr> link <dot> <noptr> input <dot> <noptr> sat <dot> <noptr> b and <dot> <noptr> hor )
<cls> <noptr> tea standby ( <ptr> fe )
<cls> <noptr> nxt read snr ( <ptr> fe <dot> <ptr> snr )
<cls> <noptr> sram init ( )
<cls> <noptr> invalid numa statistics ( )
<cls> <noptr> mpt scsi h io done ( <ptr> ioc <dot> <ptr> m f <dot> <ptr> m r )
<cls> <noptr> del from avail list ( <ptr> p )
<cls> <noptr> ov init at startup ( <ptr> gsp ca dev )
<cls> <noptr> hist validate params ( <ptr> hist <dot> <ptr> new conf )
<cls> <noptr> b h set lux thresh above ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> uvc video clock update ( <ptr> stream <dot> <ptr> v buf <dot> <ptr> buf )
<cls> <noptr> t das tuner ( <ptr> sd <dot> <ptr> t )
<cls> <noptr> wm xreg readable ( <ptr> dev <dot> <noptr> reg )
<cls> <noptr> net up uni dvb start streaming ( <ptr> q <dot> <noptr> count )
<cls> <noptr> cp write clr set ( <ptr> sd <dot> <noptr> reg <dot> <noptr> mask <dot> <noptr> val )
<cls> <noptr> h blank ing ( <ptr> t )
<cls> <noptr> probe user write ( <ptr> dst <dot> <ptr> src <dot> <noptr> size )
<cls> <noptr> dump firm type and int freq ( <noptr> type <dot> <noptr> int freq )
<cls> <noptr> arizona connect dcv dd ( <ptr> arizona )
<cls> <noptr> c xs aud ctrl ( <ptr> ctrl )
<cls> <noptr> sic write reg ( <ptr> state <dot> <noptr> ic addr <dot> <noptr> reg <dot> <noptr> data )
<cls> <ptr> x vt cof get ( <ptr> np )
<cls> <noptr> v l stub g f buf ( <ptr> ops <dot> <ptr> file <dot> <ptr> f h <dot> <ptr> p )
<cls> <noptr> vp if process buffer complete ( <ptr> common )
<cls> <noptr> m tt write ( <ptr> client <dot> <noptr> reg <dot> <noptr> data )
<cls> <noptr> print section ( <ptr> level <dot> <ptr> text <dot> <ptr> addr <dot> <noptr> length )
<cls> <noptr> cxx update ( <ptr> priv <dot> <noptr> func <dot> <ptr> old <dot> <ptr> new )
<cls> <noptr> wb write out inc ( <ptr> wb )
<cls> <noptr> can follow write pte ( <noptr> pte <dot> <noptr> flags )
<cls> <noptr> msb init disk ( <ptr> card )
<cls> <noptr> vim c add sub devs ( <ptr> vim c )
<cls> <noptr> t wmd metric from m v d ( <noptr> m v d )
<cls> <noptr> mics mpt init ( <ptr> m dev )
<cls> <noptr> delta try fmt frame ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> adv x hdmi fill format ( <ptr> hdmi <dot> <ptr> fmt )
<cls> <noptr> mtk mdp m m worker ( <ptr> work )
<cls> <noptr> asan report load no abort ( <noptr> addr )
<cls> <noptr> vmc i q pair peek v ( <ptr> q pair <dot> <ptr> msg <dot> <noptr> iov size <dot> <noptr> buf type )
<cls> <noptr> clear wb con gest ed ( <ptr> con gest ed <dot> <noptr> sync )
<cls> <noptr> heartbeat enable show ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> dtl driver init ( )
<cls> <ptr> sms get board ( <noptr> id )
<cls> <noptr> iv tv dma enc start xfer ( <ptr> s )
<cls> <noptr> v l async notifier add sub dev ( <ptr> notifier <dot> <ptr> asd )
<cls> <noptr> tif munmap sg ( <ptr> sock <dot> <ptr> sg <dot> <noptr> n ents <dot> <noptr> direction )
<cls> <noptr> wm set audio ( <ptr> sd <dot> <noptr> quietly )
<cls> <noptr> ves x read reg ( <ptr> state <dot> <noptr> reg )
<cls> <noptr> b pax tx complete ( <ptr> urb )
<cls> <noptr> flex cop dma control size irq ( <ptr> fc <dot> <noptr> no <dot> <noptr> onoff )
<cls> <noptr> delta get frame info default ( <ptr> ctx <dot> <ptr> frame info )
<cls> <noptr> a fic read ( <ptr> d <dot> <noptr> ic addr <dot> <noptr> reg <dot> <ptr> data <dot> <noptr> len )
<cls> <noptr> me so nao c ecg air qthread ( <noptr> irq <dot> <ptr> data )
<cls> <noptr> mcc ic suspend ( <ptr> cam )
<cls> <noptr> init r cmap de lock ( )
<cls> <ptr> kemp ld get type string ( <ptr> pld )
<cls> <noptr> ov get sys clk ( <ptr> sensor )
<cls> <noptr> set white ( <ptr> gsp ca dev <dot> <noptr> white <dot> <noptr> contrast )
<cls> <noptr> truncate cleanup page ( <ptr> mapping <dot> <ptr> page )
<cls> <noptr> td ard regs ( <ptr> priv <dot> <noptr> reg <dot> <ptr> val <dot> <noptr> len )
<cls> <noptr> gts stolen ( <ptr> gts <dot> <ptr> bs )
<cls> <noptr> me so nao cec driver init ( )
<cls> <noptr> sensor set streaming ( <ptr> cam if <dot> <noptr> on )
<cls> <noptr> ska a set ahb address ( <ptr> client )
<cls> <noptr> as x cmd get tps ( <ptr> adap <dot> <ptr> p tps )
<cls> <noptr> d tcs pkts can ( <ptr> gsp ca dev <dot> <ptr> data <dot> <noptr> len )
<cls> <noptr> memory high show ( <ptr> m <dot> <ptr> v )
<cls> <noptr> snd em xx hw capture params ( <ptr> sub stream <dot> <ptr> hw params )
<cls> <noptr> c pcap init irq chip ( <ptr> c pcap <dot> <noptr> irq chip <dot> <noptr> irq start <dot> <noptr> nr irq s )
<cls> <noptr> d dbport match link ic ( <ptr> port )
<cls> <noptr> rav esp emulated get status ( <ptr> sp <dot> <ptr> status )
<cls> <noptr> is px clk disable ( <ptr> hw )
<cls> <noptr> count to clock divider ( <noptr> d )
<cls> <noptr> tea tune ( <ptr> radio <dot> <noptr> freq )
<cls> <noptr> ov set exp ( <ptr> reg map <dot> <noptr> value )
<cls> <noptr> six core send command ( <ptr> core <dot> <noptr> command <dot> <noptr> args <dot> <noptr> arg n <dot> <noptr> resp <dot> <noptr> resp n <dot> <noptr> use cs )
<cls> <noptr> c pia read ( <ptr> cam <dot> <ptr> buf <dot> <noptr> count <dot> <noptr> no block )
<cls> <noptr> c x read reg ( <ptr> state <dot> <noptr> reg )
<cls> <noptr> mt set front end ( <ptr> fe )
<cls> <noptr> c x usb m xls tuner attach ( <ptr> adap )
<cls> <noptr> sensor map write ( <ptr> gsp ca dev <dot> <ptr> ptr )
<cls> <ptr> check disable ir ( )
<cls> <noptr> e ady ( <ptr> state )
<cls> <noptr> set src registers ( <ptr> ctx )
<cls> <noptr> mtk jpeg g fmt vid m plane ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> dvb usb media device register ( <ptr> adap )
<cls> <noptr> max freq show ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> command set format ( <ptr> gsp ca dev )
<cls> <noptr> mem cgroup css online ( <ptr> css )
<cls> <noptr> solo get input ( <ptr> file <dot> <ptr> priv <dot> <ptr> index )
<cls> <noptr> init r cmap aver media mar mk ( )
<cls> <noptr> fdt v write ( <ptr> fdt v <dot> <noptr> addr <dot> <ptr> data <dot> <noptr> len )
<cls> <ptr> find format by index ( <ptr> inst <dot> <noptr> index <dot> <noptr> type )
<cls> <noptr> alloc slab show ( <ptr> s <dot> <ptr> buf )
<cls> <noptr> sh ve u query cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> cap )
<cls> <noptr> af pid filter ctrl ( <ptr> fe <dot> <noptr> onoff )
<cls> <noptr> nxt x micro controller stop ( <ptr> state )
<cls> <noptr> resizer isr buffer ( <ptr> res )
<cls> <noptr> lpc ich finalize wdt cell ( <ptr> dev )
<cls> <noptr> fops vcodec open ( <ptr> file )
<cls> <noptr> bt tv buffer activate vb i ( <ptr> b tv <dot> <ptr> vb i )
<cls> <ptr> check num inputs ( )
<cls> <noptr> m spir init ( <ptr> budget c i )
<cls> <noptr> mic ack interrupt ( <ptr> m dev )
<cls> <noptr> unmap phys pg pack ( <ptr> ctx <dot> <noptr> v addr <dot> <ptr> phys pg pack )
<cls> <noptr> device irq init ( <ptr> chip )
<cls> <noptr> mtv update h blank ( <ptr> mtv )
<cls> <noptr> c x dis eq c send burst ( <ptr> fe <dot> <noptr> burst )
<cls> <noptr> page type info show free print ( <ptr> m <dot> <ptr> pg dat <dot> <ptr> zone )
<cls> <noptr> e z x pcap probe ( <ptr> spi )
<cls> <noptr> set colors ( <ptr> gsp ca dev <dot> <noptr> val )
<cls> <noptr> init r cmap aver media mar mk ( )
<cls> <noptr> a pds x chip ids how ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> me it x eintr clear ( <ptr> dev )
<cls> <noptr> six core cmd a mtune freq a ( <ptr> core <dot> <ptr> tune args )
<cls> <ptr> pto snd c x card ( <dptr> v l dev )
<cls> <noptr> net u pic func ( <ptr> adap )
<cls> <noptr> vivid user vid g volatile ctrl ( <ptr> ctrl )
<cls> <noptr> digit v identify state ( <ptr> udev <dot> <ptr> props <dot> <dptr> desc <dot> <ptr> cold )
<cls> <ptr> ov x select win ( <noptr> width <dot> <noptr> height )
<cls> <noptr> kas an un poison object data ( <ptr> cache <dot> <ptr> object )
<cls> <noptr> td aag c ( <ptr> fe )
<cls> <noptr> ov write regs ( <ptr> ov <dot> <ptr> regs <dot> <noptr> len )
<cls> <noptr> ener x sense carrier ( <ptr> dev )
<cls> <noptr> stat isr ( <ptr> stat <dot> <noptr> from dma )
<cls> <noptr> saa pg table build ( <ptr> pci <dot> <ptr> pt <dot> <ptr> list <dot> <noptr> length <dot> <noptr> start page )
<cls> <noptr> set regid x ( <ptr> cd <dot> <ptr> r <dot> <ptr> i <dot> <noptr> m <dot> <noptr> addr <dot> <noptr> idx <dot> <noptr> val )
<cls> <noptr> fast rpc unmap dma buf ( <ptr> attach <dot> <ptr> table <dot> <noptr> dir )
<cls> <noptr> pts top polling ( <ptr> pt )
<cls> <ptr> j pu find format ( <noptr> encoder <dot> <noptr> pixel format <dot> <noptr> fmt type )
<cls> <noptr> ctrl clear dirty audio mode ( <ptr> cptr )
<cls> <noptr> sms dvb update is dbt stat sex ( <ptr> client <dot> <ptr> p )
<cls> <noptr> omap isp stat request statistics time ( <ptr> stat <dot> <ptr> data )
<cls> <noptr> load firmware cb ( <ptr> fw <dot> <ptr> context )
<cls> <noptr> vivid fb set par ( <ptr> info )
<cls> <noptr> get kernel pages ( <ptr> kio v <dot> <noptr> nr segs <dot> <noptr> write <dot> <dptr> pages )
<cls> <noptr> mt get frequency ( <ptr> fe <dot> <ptr> frequency )
<cls> <noptr> tag pages for write back ( <ptr> mapping <dot> <noptr> start <dot> <noptr> end )
<cls> <noptr> kas an poison slab ( <ptr> page )
<cls> <noptr> mds get agc pwm ( <ptr> fe <dot> <ptr> agc pwm )
<cls> <noptr> pcf irq ( <noptr> irq <dot> <ptr> data )
<cls> <noptr> delta flush dts ( <ptr> ctx )
<cls> <noptr> d ibm bfe init ( <ptr> fe <dot> <noptr> mobile mode )
<cls> <noptr> six vid ioc query cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> capability )
<cls> <noptr> saa set gpio ( <ptr> dev <dot> <noptr> bit no <dot> <noptr> value )
<cls> <noptr> m eye init ( )
<cls> <noptr> follow pte pmd ( <ptr> m m <dot> <noptr> address <dot> <ptr> range <dot> <dptr> pt epp <dot> <dptr> pmd pp <dot> <dptr> p tlp )
<cls> <noptr> td a powers can init ( <ptr> fe )
<cls> <noptr> go y a disable clk rl x ( <ptr> h dev )
<cls> <noptr> phantom init ( )
<cls> <noptr> c x queue init ( <ptr> q )
<cls> <noptr> sh set q am interleave mode ( <ptr> fe )
<cls> <noptr> tc x irq ( <noptr> irq <dot> <ptr> data )
<cls> <noptr> omap vid handle interlace display ( <ptr> v out <dot> <noptr> irq status <dot> <noptr> ts )
<cls> <noptr> update mcs stats ( <noptr> op <dot> <noptr> clk s )
<cls> <noptr> setups lub min order ( <ptr> str )
<cls> <noptr> restore present ( <ptr> p <dot> <noptr> val )
<cls> <noptr> v op virtio add device ( <ptr> v dev <dot> <ptr> arg p )
<cls> <noptr> td aic gate ctrl ( <ptr> fe <dot> <noptr> enable )
<cls> <noptr> six radio read rsq blob ( <ptr> file <dot> <ptr> user buf <dot> <noptr> count <dot> <ptr> p pos )
<cls> <noptr> v l video std frame period ( <noptr> id <dot> <ptr> frame period )
<cls> <noptr> ext and cpu queue init ( <ptr> h dev <dot> <ptr> q <dot> <noptr> is cpu queue )
<cls> <noptr> b tmr v lsd io probe of ( <ptr> dev <dot> <ptr> card )
<cls> <noptr> d dcb mark unused ( <ptr> pd dcb )
<cls> <noptr> adp write ( <ptr> dev <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> dvb net u lets pus i ( <ptr> h )
<cls> <noptr> slab unlock ( <ptr> page )
<cls> <noptr> dvb net ts callback ( <ptr> buffer <dot> <noptr> buffer len <dot> <ptr> buffer <dot> <noptr> buffer len <dot> <ptr> feed <dot> <ptr> buffer flags )
<cls> <noptr> r vin format align ( <ptr> vin <dot> <ptr> pix )
<cls> <noptr> os d init layer ( <ptr> sd <dot> <noptr> layer )
<cls> <noptr> si upload firmware ( <ptr> state )
<cls> <noptr> sh vou enum output ( <ptr> file <dot> <ptr> f h <dot> <ptr> a )
<cls> <noptr> mtk jpeg dec set com pdu ( <ptr> base <dot> <noptr> num )
<cls> <noptr> gru create message queue ( <ptr> m q d <dot> <ptr> p <dot> <noptr> bytes <dot> <noptr> nas id <dot> <noptr> vector <dot> <noptr> api cid )
<cls> <noptr> ov driver init ( )
<cls> <noptr> wb update write bandwidth ( <ptr> wb <dot> <noptr> elapsed <dot> <noptr> written )
<cls> <noptr> c x usb ddm b drain message ( <ptr> d )
<cls> <noptr> media remove int f links ( <ptr> int f )
<cls> <noptr> tvp g slice dvb icap ( <ptr> sd <dot> <ptr> cap )
<cls> <noptr> intel msi c probe ( <ptr> pdev )
<cls> <noptr> me ime irq quick handler ( <noptr> irq <dot> <ptr> devid )
<cls> <noptr> carrier width ( <noptr> symbol rate <dot> <noptr> roll off )
<cls> <noptr> rca rfc p disable ( <ptr> f cp )
<cls> <noptr> vb core q buf ( <ptr> q <dot> <noptr> index <dot> <ptr> pb <dot> <ptr> req )
<cls> <noptr> gru cb set i status active ( <ptr> cb k )
<cls> <noptr> s rpc enum mbus code ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> code )
<cls> <noptr> hack r fur b complete in ( <ptr> urb )
<cls> <noptr> sh set symbol rate ( <ptr> state <dot> <ptr> p )
<cls> <noptr> options show ( <ptr> s <dot> <ptr> p )
<cls> <ptr> mtm find data fmt ( <noptr> code <dot> <ptr> fmt <dot> <noptr> n )
<cls> <noptr> max read es version ( <ptr> chip )
<cls> <ptr> check tri ton ( )
<cls> <noptr> c xs std ( <ptr> sd <dot> <noptr> std )
<cls> <noptr> gru set context option ( <noptr> arg )
<cls> <noptr> r card rif query cap ( <ptr> file <dot> <ptr> f h <dot> <ptr> cap )
<cls> <noptr> sp mfc get pic type top v ( <ptr> ctx )
<cls> <noptr> mp tfc write fc port page ( <ptr> ioc <dot> <noptr> portnum )
<cls> <noptr> hci uart has flow control ( <ptr> hu )
<cls> <noptr> saa query std ( <ptr> file <dot> <ptr> priv <dot> <ptr> std )
<cls> <noptr> h total ( <ptr> t )
<cls> <noptr> si read reg ( <ptr> state <dot> <noptr> reg <dot> <ptr> val )
<cls> <noptr> v l print frame buffer ( <ptr> arg <dot> <noptr> write only )
<cls> <noptr> show min ( <ptr> class dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> intel msi c reg write ( <noptr> reg <dot> <noptr> val )
<cls> <noptr> pvr l gdt attach ( <ptr> adap )
<cls> <noptr> img ir nec filter ( <ptr> in <dot> <ptr> out <dot> <noptr> protocols )
<cls> <noptr> m xlr f set params ( <ptr> fe )
<cls> <noptr> index show ( <ptr> cd <dot> <ptr> attr <dot> <ptr> buf )
<cls> <ptr> get dec v l ioctl ops ( )
<cls> <noptr> read io ( <ptr> c i <dot> <noptr> address <dot> <ptr> val )
<cls> <noptr> dvb front end poll ( <ptr> file <dot> <ptr> wait )
<cls> <noptr> c x start ( <ptr> gsp ca dev )
<cls> <ptr> get merge able page ( <ptr> r map item )
<cls> <ptr> check white crush lower ( )
<cls> <ptr> z swap entry find get ( <ptr> root <dot> <noptr> offset )
<cls> <noptr> ic read regs ( <ptr> ic <dot> <noptr> id <dot> <noptr> reg <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> control tx polarity invert ( <ptr> c <dot> <noptr> invert )
<cls> <noptr> x vip dma query cap ( <ptr> file <dot> <ptr> f h <dot> <ptr> cap )
<cls> <noptr> validate new ( <ptr> ctrl <dot> <noptr> p new )
<cls> <noptr> fim c is probe ( <ptr> pdev )
<cls> <noptr> stmp e block write ( <ptr> stmp e <dot> <noptr> reg <dot> <noptr> length <dot> <ptr> values )
<cls> <noptr> kemp ld get mutex ( <ptr> pld )
<cls> <noptr> exy nos dmc change freq and volt ( <ptr> dmc <dot> <noptr> target rate <dot> <noptr> target volt )
<cls> <noptr> wl f m sett x freq ( <ptr> radio <dot> <noptr> freq )
<cls> <noptr> isp video get format ( <ptr> file <dot> <ptr> f h <dot> <ptr> format )
<cls> <noptr> rtl sdr set tuner freq ( <ptr> dev )
<cls> <noptr> vim m probe ( <ptr> pdev )
<cls> <noptr> sub devs clock freq ( <ptr> sd <dot> <noptr> freq )
<cls> <noptr> command ( <ptr> gsp ca dev <dot> <noptr> order )
<cls> <noptr> exy nos jpeg dec scaling ratio ( <ptr> regs <dot> <noptr> s ratio )
<cls> <noptr> c xxx initialize codec ( <ptr> dev )
<cls> <noptr> rts x base disable auto blink ( <ptr> pcr )
<cls> <noptr> sram write ( <ptr> filp <dot> <ptr> k obj <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> pos <dot> <noptr> count )
<cls> <noptr> de quantize inter ( <ptr> coeff )
<cls> <noptr> m xlt set mode bits ( <ptr> state <dot> <noptr> mode <dot> <noptr> if diff out level )
<cls> <ptr> mic request card irq ( <noptr> handler <dot> <noptr> thread fn <dot> <ptr> name <dot> <ptr> data <dot> <noptr> index )
<cls> <noptr> k huge paged max p tes none show ( <ptr> k obj <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> ov enum frame ival ( <ptr> sub dev <dot> <ptr> cfg <dot> <ptr> fie )
<cls> <ptr> check keep buffers ( )
<cls> <noptr> any see master xfer ( <ptr> adap <dot> <ptr> msg <dot> <noptr> num )
<cls> <ptr> fim c lite sub dev get try fmt ( <ptr> sd <dot> <ptr> cfg <dot> <noptr> pad )
<cls> <noptr> lrucache add file ( <ptr> page )
<cls> <noptr> vmc i handle arr append entry ( <dptr> array ptr <dot> <noptr> handle )
<cls> <noptr> set component active ( <ptr> c dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> vb fill vb v l buffer ( <ptr> vb <dot> <ptr> b )
<cls> <noptr> b tmr v lsd io read r x len ( <ptr> card <dot> <ptr> dat )
<cls> <noptr> next mem range rev ( <ptr> idx <dot> <noptr> nid <dot> <noptr> flags <dot> <ptr> type a <dot> <ptr> type b <dot> <ptr> out start <dot> <ptr> out end <dot> <ptr> out nid )
<cls> <noptr> skb af hw set user exposure ( <ptr> state <dot> <noptr> exposure )
<cls> <noptr> saa cmd dequeue ( <ptr> dev )
<cls> <noptr> ad presume ( <ptr> dev )
<cls> <noptr> set component active ( <ptr> c dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> me it x eintr clear ( <ptr> dev )
<cls> <noptr> sp jpeg irq ( <noptr> irq <dot> <ptr> devid )
<cls> <noptr> hi start streaming ( <ptr> hi )
<cls> <noptr> dr xxx j read signal strength ( <ptr> fe <dot> <ptr> strength )
<cls> <noptr> n gene command stream control ( <ptr> dev <dot> <noptr> stream <dot> <noptr> control <dot> <noptr> mode <dot> <noptr> flags )
<cls> <noptr> setup mins lab ratio ( )
<cls> <ptr> l gdt x get dvb front end ( <ptr> client )
<cls> <noptr> philips sut y c i tuner set params ( <ptr> fe )
<cls> <noptr> ce u enum frame sizes ( <ptr> file <dot> <ptr> f h <dot> <ptr> f size )
<cls> <ptr> find v map lowest match ( <noptr> size <dot> <noptr> align <dot> <noptr> v start )
<cls> <noptr> ov probe ( <ptr> client )
<cls> <noptr> tt usb dec process filter ( <ptr> dec <dot> <ptr> packet <dot> <noptr> length )
<cls> <noptr> em x xs ctrl ( <ptr> ctrl )
<cls> <noptr> wpf configure stream ( <ptr> entity <dot> <ptr> pipe <dot> <ptr> dl <dot> <ptr> dl b )
<cls> <noptr> d vic o fusion h dtv hybrid init ( <ptr> core )
<cls> <noptr> radios is mod ulator ( <ptr> file <dot> <ptr> p <dot> <ptr> vm )
<cls> <noptr> xpc received payload uv ( <ptr> ch <dot> <ptr> payload )
<cls> <noptr> via cams fmt vid cap ( <ptr> filp <dot> <ptr> priv <dot> <ptr> fmt )
<cls> <noptr> isc spar m ( <ptr> file <dot> <ptr> f h <dot> <ptr> a )
<cls> <noptr> b x tw c resume ( <ptr> dev )
<cls> <noptr> stv x activate mod cod ( <ptr> state )
<cls> <noptr> add page for migration ( <ptr> m m <dot> <noptr> addr <dot> <noptr> node <dot> <ptr> page list <dot> <noptr> migrate all )
<cls> <noptr> pt init all demo ds ( <ptr> pt )
<cls> <noptr> ctrl get resh or ( <ptr> cptr <dot> <ptr> vp )
<cls> <noptr> pvr io read init ( <ptr> cp )
<cls> <noptr> dib p get time us ( <ptr> demo d )
<cls> <noptr> av init ( )
<cls> <noptr> six radio read acf blob ( <ptr> file <dot> <ptr> user buf <dot> <noptr> count <dot> <ptr> p pos )
<cls> <noptr> is is input ( <ptr> file <dot> <ptr> priv <dot> <noptr> i )
<cls> <noptr> m m ops venc job abort ( <ptr> priv )
<cls> <noptr> sis mod ulator ( <ptr> sd <dot> <ptr> vm )
<cls> <noptr> dvb usb v generic write locked ( <ptr> d <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> is usr def mapping ( <noptr> formatid )
<cls> <noptr> propagate protected usage ( <ptr> c <dot> <noptr> usage )
<cls> <noptr> color gray ( <ptr> object )
<cls> <noptr> find min pfn with active regions ( )
<cls> <noptr> dvb front end clear cache ( <ptr> fe )
<cls> <noptr> fault in page ( <ptr> tsk <dot> <ptr> vma <dot> <noptr> address <dot> <ptr> flags <dot> <ptr> non blocking )
<cls> <noptr> dib tuner sleep ( <ptr> fe <dot> <noptr> onoff )
<cls> <noptr> usb keen e suspend ( <ptr> int f <dot> <noptr> message )
<cls> <noptr> c x dt nr dmd set ts output ( <ptr> tn r dmd <dot> <noptr> en )
<cls> <noptr> isp video enum fmt ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> saa api get user control ( <ptr> port <dot> <noptr> ctl )
<cls> <noptr> k virt top a ( <noptr> adr )
<cls> <noptr> buf size v l buffer ( <ptr> p <dot> <ptr> size )
<cls> <ptr> fdp find format ( <noptr> pixel format )
<cls> <noptr> imx set stream ( <ptr> sd <dot> <noptr> enable )
<cls> <noptr> v l stub g output ( <ptr> ops <dot> <ptr> file <dot> <ptr> f h <dot> <ptr> p )
<cls> <noptr> sh sleep ( <ptr> fe )
<cls> <noptr> sms board event ( <ptr> core dev <dot> <noptr> gevent )
<cls> <noptr> sis ctrl ( <ptr> ctrl )
<cls> <noptr> h fi core deinit ( <ptr> core <dot> <noptr> blocking )
<cls> <noptr> mds set tone ( <ptr> fe <dot> <noptr> fe sect one mode )
<cls> <noptr> mpt spi read parameters ( <ptr> star get )
<cls> <noptr> ap ( <noptr> map <dot> <noptr> frequency <dot> <ptr> p param )
<cls> <noptr> made ra runtime resume ( <ptr> dev )
<cls> <noptr> dvb front end resume ( <ptr> fe )
<cls> <ptr> k mem dup ( <ptr> src <dot> <noptr> len <dot> <noptr> gfp )
<cls> <noptr> xpc initiate send notify ( <noptr> partid <dot> <noptr> ch number <dot> <noptr> flags <dot> <ptr> payload <dot> <noptr> payload size <dot> <noptr> func <dot> <ptr> key )
<cls> <noptr> ovf xic r ( <ptr> sd <dot> <noptr> reg )
<cls> <noptr> demo d attach stv ( <ptr> input <dot> <noptr> type )
<cls> <noptr> mpt scsi h debug level store ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> command set exposure ( <ptr> gsp ca dev )
<cls> <noptr> fast rpc dma buf attach ( <ptr> dma buf <dot> <ptr> attachment )
<cls> <ptr> pvr hd wget ctrl next v l ( <ptr> h dw <dot> <noptr> ctl id )
<cls> <noptr> set dec all db ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> t mir stop ( <ptr> rc )
<cls> <noptr> mtp inn acle init ( <ptr> fe )
<cls> <noptr> sh vou log status ( <ptr> file <dot> <ptr> priv )
<cls> <noptr> vim c streamer thread ( <ptr> data )
<cls> <noptr> lme pid filter ( <ptr> adap <dot> <noptr> index <dot> <noptr> pid <dot> <noptr> onoff )
<cls> <ptr> ctrl tos d ( <ptr> ctrl )
<cls> <noptr> pluto read serial ( <ptr> pluto )
<cls> <noptr> flex cop pci driver init ( )
<cls> <ptr> check spi ( )
<cls> <noptr> q p dequeue locked ( <ptr> produce q <dot> <ptr> consume q <dot> <noptr> consume qsize <dot> <ptr> to <dot> <noptr> update consumer )
<cls> <noptr> c pcap driver init ( )
<cls> <noptr> lock zs page ( <ptr> zs page )
<cls> <noptr> avd vbc switch ( <ptr> f h )
<cls> <noptr> read snr ( <ptr> fe )
<cls> <noptr> v pen c set param ( <ptr> handle <dot> <noptr> type <dot> <ptr> enc prm )
<cls> <noptr> it wr ( <ptr> dev <dot> <noptr> val <dot> <noptr> index )
<cls> <noptr> l k dtm module init ( )
<cls> <noptr> k mem leaks can ( )
<cls> <noptr> stv x sets roll off ( <ptr> state )
<cls> <noptr> pvr g fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> v f )
<cls> <noptr> v l ctrl sub dev log status ( <ptr> sd )
<cls> <noptr> dvb net do ioctl ( <ptr> file <dot> <noptr> cmd <dot> <ptr> p arg )
<cls> <noptr> venus seth w state ( <ptr> core <dot> <noptr> resume )
<cls> <noptr> write ts to decoder ( <ptr> av <dot> <noptr> type <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> zero the pointer ( <ptr> gsp ca dev )
<cls> <noptr> pti pci probe ( <ptr> pdev <dot> <ptr> ent )
<cls> <noptr> dib ic xfer legacy ( <ptr> adap <dot> <ptr> msg <dot> <noptr> num )
<cls> <noptr> vb query buf ( <ptr> q <dot> <ptr> b )
<cls> <noptr> byte blas ter read ( <noptr> port )
<cls> <noptr> ite set carrier params ( <ptr> dev )
<cls> <ptr> feed to d m dev ( <ptr> feed )
<cls> <noptr> ati remote irq out ( <ptr> urb )
<cls> <noptr> sun ics i capture stop ( <ptr> csi )
<cls> <noptr> show bits ( <ptr> class dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <ptr> v pdev tom dev ( <ptr> dev )
<cls> <noptr> configure predefined video timings ( <ptr> sd <dot> <ptr> timings )
<cls> <noptr> v pes fmt ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> find zone movable p fns for nodes ( )
<cls> <noptr> vmc id bell host context notify ( <noptr> src cid <dot> <noptr> handle )
<cls> <ptr> to ak x ( <ptr> client )
<cls> <noptr> six radio query cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> capability )
<cls> <noptr> uvc video decode bulk ( <ptr> uv curb <dot> <ptr> buf <dot> <ptr> meta buf )
<cls> <noptr> stk camera resume ( <ptr> int f )
<cls> <ptr> check disable msi ( )
<cls> <noptr> nv t clear cir fifo ( <ptr> nv t )
<cls> <noptr> e pll lock ( <ptr> fe )
<cls> <noptr> warn deprecated ioctl ( <ptr> name )
<cls> <noptr> rain cec adap enable ( <ptr> adap <dot> <noptr> enable )
<cls> <noptr> sysctl mins lab ratio sysctl handler ( <ptr> table <dot> <noptr> write <dot> <ptr> buffer <dot> <ptr> length <dot> <ptr> p pos )
<cls> <noptr> tws input ( <ptr> file <dot> <ptr> priv <dot> <noptr> i )
<cls> <noptr> mcs init ( <ptr> fe )
<cls> <noptr> r nt volatile reg ( <ptr> dev <dot> <noptr> reg )
<cls> <noptr> vid ioc enum frame sizes ( <ptr> file <dot> <ptr> priv <dot> <ptr> f size )
<cls> <noptr> v l print dbg chip info ( <ptr> arg <dot> <noptr> write only )
<cls> <noptr> dib set bandwidth ( <ptr> state )
<cls> <noptr> px p try fmt vid out ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> vim m open ( <ptr> file )
<cls> <noptr> gsc g fmt m plane ( <ptr> ctx <dot> <ptr> f )
<cls> <noptr> fmt spm p ( <ptr> sp fmt <dot> <ptr> mp fmt )
<cls> <noptr> prime ioc fifo s ( <ptr> ioc )
<cls> <noptr> go buf prepare ( <ptr> vb )
<cls> <noptr> adv setup irq s ( <ptr> sd )
<cls> <noptr> vivid fb get fix ( <ptr> dev <dot> <ptr> fix )
<cls> <noptr> device kill open processes ( <ptr> h dev )
<cls> <noptr> ska stop ( <ptr> sd )
<cls> <noptr> lrucache activate page ( <ptr> page )
<cls> <noptr> adv get skip frames ( <ptr> sd <dot> <ptr> frames )
<cls> <noptr> dump vma ( <ptr> vma )
<cls> <ptr> pti console device ( <ptr> c <dot> <ptr> index )
<cls> <noptr> b dic probe ( <ptr> ic <dot> <ptr> id )
<cls> <noptr> c xxx dvb unregister ( )
<cls> <noptr> c x query aud input ( <ptr> file <dot> <ptr> priv <dot> <ptr> i )
<cls> <noptr> c x dt nr dmd dvb t mon spectrum sense ( <ptr> tn r dmd <dot> <ptr> sense )
<cls> <noptr> start shepher d timer ( )
<cls> <noptr> m advise behavior valid ( <noptr> behavior )
<cls> <noptr> adv x afe g tv norms ( <ptr> sd <dot> <ptr> norm )
<cls> <noptr> vb v malloc num users ( <ptr> buf priv )
<cls> <noptr> stv cab get adc freq ( <ptr> fe <dot> <noptr> ext cl khz )
<cls> <noptr> set pg dat per cpu threshold ( <ptr> pg dat <dot> <ptr> calculate pressure )
<cls> <noptr> v fd write ( <ptr> file <dot> <ptr> buf <dot> <noptr> nbytes <dot> <ptr> pos )
<cls> <noptr> intell pss set remap addr ( <ptr> l pss )
<cls> <noptr> fault in page ( <ptr> tsk <dot> <ptr> vma <dot> <noptr> address <dot> <ptr> flags <dot> <ptr> non blocking )
<cls> <noptr> applyto page range ( <ptr> m m <dot> <noptr> addr <dot> <noptr> size <dot> <noptr> fn <dot> <ptr> data <dot> <noptr> create )
<cls> <noptr> isp ifconfig pack ( <ptr> isp if <dot> <noptr> code <dot> <noptr> int f <dot> <noptr> cid <dot> <noptr> v fe <dot> <noptr> enable )
<cls> <noptr> mtk mdp hw set rotation ( <ptr> ctx )
<cls> <ptr> ln b h attach ( <ptr> fe <dot> <ptr> cfg <dot> <ptr> ic )
<cls> <noptr> snd saa cap src set ( <ptr> k control <dot> <noptr> left <dot> <noptr> right <dot> <noptr> force notify )
<cls> <noptr> v fe try format ( <ptr> line <dot> <ptr> cfg <dot> <noptr> pad <dot> <ptr> fmt <dot> <noptr> which )
<cls> <noptr> check range ( <noptr> type <dot> <noptr> min <dot> <noptr> max <dot> <noptr> step <dot> <noptr> def )
<cls> <noptr> vid ioc enum fmt vid overlay ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> sp mfc run init enc ( <ptr> ctx )
<cls> <noptr> si setup ( <ptr> s dev )
<cls> <noptr> stv ter get front end ( <ptr> fe <dot> <ptr> p )
<cls> <ptr> check override serial ( )
<cls> <noptr> pvr std id to str ( <ptr> buf ptr <dot> <noptr> buf size <dot> <noptr> id )
<cls> <noptr> ms pro block stop ( <ptr> card )
<cls> <noptr> get v addr frames ( <noptr> start <dot> <noptr> nr frames <dot> <noptr> gup flags <dot> <ptr> vec )
<cls> <noptr> r vin group entity to csi id ( <ptr> group <dot> <ptr> entity )
<cls> <ptr> do user copy stack callee ( <noptr> value )
<cls> <noptr> process vm rw core ( <noptr> pid <dot> <ptr> iter <dot> <ptr> rvec <dot> <noptr> rio v cnt <dot> <noptr> flags <dot> <noptr> vm write )
<cls> <noptr> lt audio ( <ptr> b tv <dot> <ptr> t <dot> <noptr> set )
<cls> <ptr> mb dev tom dev ( <ptr> mb dev )
<cls> <noptr> sysfs slab add ( <ptr> s )
<cls> <noptr> kas an poison object data ( <ptr> cache <dot> <ptr> object )
<cls> <noptr> send message failure ( <ptr> cb <dot> <ptr> m q d <dot> <ptr> mesg <dot> <noptr> lines )
<cls> <noptr> pm xxx irq master handler ( <ptr> chip <dot> <noptr> master )
<cls> <noptr> adv write block ( <ptr> sd <dot> <ptr> data <dot> <noptr> len )
<cls> <noptr> gsc check src scale info ( <ptr> var <dot> <ptr> s frame <dot> <ptr> w ratio <dot> <noptr> tx <dot> <noptr> ty <dot> <ptr> h ratio )
<cls> <noptr> ov stop ( <ptr> sd )
<cls> <noptr> mpt ctl sys call down ( <ptr> ioc <dot> <noptr> non block )
<cls> <noptr> config mux ( <ptr> state )
<cls> <noptr> imx power off ( <ptr> dev )
<cls> <noptr> venus flush debug queue ( <ptr> h dev )
<cls> <noptr> mce usb set timeout ( <ptr> dev <dot> <noptr> timeout )
<cls> <noptr> quar antine reduce ( )
<cls> <noptr> ad suspend ( <ptr> dev )
<cls> <noptr> pf memalloc match ( <ptr> page <dot> <noptr> gfp flags )
<cls> <noptr> dev freq user space handler ( <ptr> dev freq <dot> <noptr> event <dot> <ptr> data )
<cls> <noptr> iv tvs selection ( <ptr> file <dot> <ptr> f h <dot> <ptr> sel )
<cls> <noptr> v mamm u page size ( <ptr> vma )
<cls> <noptr> em xx dvb unregister ( )
<cls> <noptr> sh ve u queue setup ( <ptr> v q <dot> <ptr> n buffers <dot> <ptr> n planes <dot> <noptr> sizes <dot> <ptr> alloc devs )
<cls> <noptr> vivid slice dvb i out process ( <ptr> dev <dot> <ptr> buf )
<cls> <noptr> sms dvb stats poll ( <ptr> file <dot> <ptr> wait )
<cls> <noptr> c x initialize ( <ptr> dev )
<cls> <noptr> stm f xreg volatile ( <ptr> dev <dot> <noptr> reg )
<cls> <noptr> uvc video stats update ( <ptr> stream )
<cls> <ptr> p cpu addr to page ( <ptr> addr )
<cls> <noptr> c x usb medi on v complete work ( <ptr> work )
<cls> <noptr> r card rif start ( <ptr> sdr )
<cls> <noptr> ad init controls ( <ptr> coil )
<cls> <noptr> serial clock vote ( <noptr> vote <dot> <ptr> hu )
<cls> <noptr> ssb ipa write bytes ( <ptr> ssb i <dot> <noptr> addr <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> sms core load firmware from file ( <ptr> core dev <dot> <noptr> mode <dot> <noptr> load firmware handler )
<cls> <noptr> sum zone node page state ( <noptr> node <dot> <noptr> item )
<cls> <noptr> handle init ack msg ( <ptr> msg )
<cls> <noptr> vmc i ctx supports host q p ( <ptr> context )
<cls> <noptr> b disp ctx stop req ( <ptr> ctx )
<cls> <noptr> set pll freq ( <ptr> b tv <dot> <noptr> fin <dot> <noptr> fout )
<cls> <noptr> vm balloon status page ( <ptr> b <dot> <noptr> idx <dot> <dptr> p )
<cls> <noptr> intel msi c reg write ( <noptr> reg <dot> <noptr> val )
<cls> <noptr> exy nos bus parent parse of ( <ptr> np <dot> <ptr> bus )
<cls> <noptr> flex cop usb memory req ( <ptr> fc usb <dot> <noptr> req <dot> <noptr> page start <dot> <noptr> addr <dot> <noptr> extended <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> vm balloon status page ( <ptr> b <dot> <noptr> idx <dot> <dptr> p )
<cls> <noptr> c x reset ( <ptr> core )
<cls> <noptr> vivid vid cap g f buf ( <ptr> file <dot> <ptr> f h <dot> <ptr> a )
<cls> <noptr> k mem leak test init ( )
<cls> <noptr> stv ddb setup cab ( <ptr> state )
<cls> <noptr> mmu notifier register ( <ptr> mn <dot> <ptr> m m )
<cls> <noptr> cec queue pinv event ( <ptr> adap <dot> <noptr> is high <dot> <noptr> ts )
<cls> <noptr> m pts as add device components target ir ( <ptr> ioc <dot> <ptr> star get )
<cls> <noptr> sp mfc dec gv ctrl ( <ptr> ctrl )
<cls> <noptr> dvb cae nio poll ( <ptr> file <dot> <ptr> wait )
<cls> <noptr> shrink store ( <ptr> s <dot> <ptr> buf <dot> <noptr> length )
<cls> <noptr> solo eeprom write ( <ptr> solo dev <dot> <noptr> loc <dot> <noptr> data )
<cls> <noptr> p xac vid ioc g fmt vid cap ( <ptr> filp <dot> <ptr> priv <dot> <ptr> f )
<cls> <ptr> pvr path way state name ( <noptr> id )
<cls> <noptr> isactive ( <ptr> risc <dot> <noptr> rc )
<cls> <noptr> vsp video stop streaming ( <ptr> v q )
<cls> <noptr> sci fun aligned cpy from io ( <ptr> dst <dot> <ptr> src <dot> <noptr> count <dot> <noptr> ordered )
<cls> <noptr> vp ifs fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> fmt )
<cls> <noptr> vivid radio rds init ( <ptr> dev )
<cls> <noptr> tif m register driver ( <ptr> drv )
<cls> <noptr> c x v api ( <ptr> c x <dot> <noptr> cmd <dot> <noptr> args )
<cls> <noptr> pvr g fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> v f )
<cls> <noptr> hl debug fs led set ( <ptr> h dev <dot> <noptr> led <dot> <noptr> state )
<cls> <noptr> huge tlb cgroup charge cgroup ( <noptr> idx <dot> <noptr> nr pages <dot> <dptr> ptr )
<cls> <noptr> ctrl isdirty resh or ( <ptr> cptr )
<cls> <noptr> sci f reserved mach an ( <ptr> ep )
<cls> <noptr> a fic master xfer ( <ptr> adap <dot> <noptr> msg <dot> <noptr> num )
<cls> <noptr> x sys min core ( <ptr> regs )
<cls> <noptr> ilo unmap device ( <ptr> pdev <dot> <ptr> hw )
<cls> <noptr> t dax set power ( <ptr> state <dot> <noptr> on )
<cls> <noptr> si update tune status ( <ptr> s dev )
<cls> <noptr> uvc video get time ( )
<cls> <noptr> vm balloon handle one result ( <ptr> b <dot> <ptr> page <dot> <noptr> page size <dot> <noptr> status )
<cls> <noptr> solo eeprom reg write ( <ptr> solo dev <dot> <noptr> data )
<cls> <noptr> via came num input ( <ptr> filp <dot> <ptr> priv <dot> <ptr> input )
<cls> <noptr> m xls f config is ( <ptr> state <dot> <noptr> msb start pos <dot> <noptr> data width )
<cls> <noptr> via cam resume ( <ptr> priv )
<cls> <noptr> tw x set frame rate ( <ptr> vc <dot> <noptr> fps )
<cls> <noptr> rtl sdr set adc ( <ptr> dev )
<cls> <ptr> bt bcm read verbose config ( <ptr> h dev )
<cls> <noptr> qca regulator enable ( <ptr> qca dev )
<cls> <noptr> flex cop send dis eq c msg ( <ptr> fe <dot> <noptr> len <dot> <ptr> msg <dot> <noptr> burst )
<cls> <ptr> lookup swap cache ( <noptr> entry <dot> <ptr> vma <dot> <noptr> addr )
<cls> <noptr> asan load ( <noptr> addr )
<cls> <noptr> init list ( <ptr> inst )
<cls> <noptr> uvc ctrl x ctrls has control ( <ptr> x ctrls <dot> <noptr> x ctrls count <dot> <noptr> id )
<cls> <noptr> de interlace s fmt vid out ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> m xls f streaming ctrl at scm h ( <ptr> fe <dot> <noptr> onoff )
<cls> <noptr> solo thread ( <ptr> data )
<cls> <noptr> set alternate ( <ptr> cam <dot> <noptr> alt )
<cls> <noptr> em xx alsa unregister ( )
<cls> <noptr> ska a probe ( <ptr> client <dot> <ptr> id )
<cls> <noptr> venc read ( <ptr> sd <dot> <noptr> offset )
<cls> <noptr> ms pull ctl enable q fn ( <ptr> u cr )
<cls> <noptr> ut put ( <ptr> state <dot> <noptr> b enable output )
<cls> <ptr> get next d dcb ( <ptr> cd <dot> <ptr> queue <dot> <ptr> num )
<cls> <noptr> preview adjust bandwidth ( <ptr> prev )
<cls> <noptr> l gdt x set ts param ( <ptr> fe <dot> <noptr> is punct ured )
<cls> <noptr> intel msi c reg write ( <noptr> reg <dot> <noptr> val )
<cls> <noptr> v mara enabled store ( <ptr> k obj <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> alloc sleep millisec s store ( <ptr> k obj <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> ska a power off ( <ptr> ska a )
<cls> <noptr> mpt base raid process event data ( <ptr> ioc <dot> <ptr> p raid event data )
<cls> <ptr> z swap pool current ( )
<cls> <noptr> v ls ext ctrls ( <ptr> f h <dot> <ptr> hdl <dot> <ptr> v dev <dot> <ptr> m dev <dot> <ptr> cs )
<cls> <noptr> r card rif probe ( <ptr> pdev )
<cls> <noptr> af driver init ( )
<cls> <ptr> check optimize v co ( )
<cls> <noptr> sp mfc read info v ( <ptr> ctx <dot> <noptr> ofs )
<cls> <noptr> si set if freq shift ( <ptr> state )
<cls> <noptr> pte to hmm pfn flags ( <ptr> range <dot> <noptr> pte )
<cls> <noptr> air spy urb complete ( <ptr> urb )
<cls> <noptr> rt com pre step ( <ptr> priv <dot> <noptr> i q <dot> <noptr> reg )
<cls> <noptr> c x g pixel aspect ( <ptr> file <dot> <ptr> f h <dot> <noptr> type <dot> <ptr> f )
<cls> <noptr> shuffle free memory ( <ptr> pg dat )
<cls> <noptr> q p host get user memory ( <noptr> produce uva <dot> <noptr> consume uva <dot> <ptr> produce q <dot> <ptr> consume q )
<cls> <noptr> l gdt ats bus ctrl ( <ptr> fe <dot> <noptr> acquire )
<cls> <noptr> fim c iss ctrl ( <ptr> ctrl )
<cls> <noptr> c pia set fps ( <ptr> cam <dot> <noptr> frame rate )
<cls> <noptr> b h prox enable store ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> em xx media device init ( <ptr> dev <dot> <ptr> udev )
<cls> <noptr> d ibus bmc probe ( <ptr> int f <dot> <ptr> id )
<cls> <noptr> update by mnemonic ( <ptr> state <dot> <noptr> reg <dot> <noptr> lsb loc <dot> <noptr> numof bits <dot> <noptr> val )
<cls> <ptr> check c i irq enable ( )
<cls> <noptr> b tmr v l flush ( <ptr> h dev )
<cls> <noptr> vi u of probe ( <ptr> op )
<cls> <noptr> usb vision v dev init ( <ptr> usb vision <dot> <ptr> v dev <dot> <ptr> v dev template <dot> <ptr> name )
<cls> <noptr> top ( <ptr> state )
<cls> <noptr> hdp vr read bulk callback ( <ptr> urb )
<cls> <noptr> tx low drive ( <ptr> pin )
<cls> <noptr> vp if update std info ( <ptr> ch )
<cls> <noptr> sp cec set divider ( <ptr> cec )
<cls> <noptr> stv x set front end opts ( <ptr> stv x )
<cls> <noptr> tt pci budget deb i read ( <ptr> budget <dot> <noptr> config <dot> <noptr> addr <dot> <noptr> count <dot> <noptr> use locks <dot> <noptr> no busy loop )
<cls> <noptr> fdp set ipc sensor ( <ptr> ctx )
<cls> <noptr> pvr stream get ready count ( <ptr> sp )
<cls> <noptr> saa res get ( <ptr> f h <dot> <noptr> bit )
<cls> <noptr> smi app read quirk ( <ptr> sensor <dot> <noptr> reg <dot> <ptr> val <dot> <noptr> force )
<cls> <noptr> c xstream init ( <ptr> c x <dot> <noptr> type )
<cls> <ptr> c xxx get ic adap ( <ptr> dev <dot> <noptr> ic port )
<cls> <noptr> dc mig parm ( <ptr> file <dot> <ptr> priv <dot> <ptr> p )
<cls> <ptr> stable node dup ( <dptr> stable node dup <dot> <dptr> stable node <dot> <ptr> root <dot> <noptr> prune stale stable nodes )
<cls> <noptr> r vin crop scale comp ( <ptr> vin )
<cls> <noptr> sci fcn c tre j ( <ptr> sci f dev <dot> <ptr> msg )
<cls> <noptr> px a camera start capture ( <ptr> pc dev )
<cls> <noptr> ite probe ( <ptr> pdev <dot> <ptr> devid )
<cls> <noptr> ov read ( <ptr> sd <dot> <noptr> reg <dot> <ptr> val )
<cls> <noptr> dcm i start capture ( <ptr> dcm i <dot> <ptr> buf )
<cls> <noptr> mtm g skip top lines ( <ptr> sd <dot> <ptr> lines )
<cls> <noptr> bt tv set frequency ( <ptr> b tv <dot> <ptr> f )
<cls> <noptr> un referenced object ( <ptr> object )
<cls> <noptr> hci uart send frame ( <ptr> h dev <dot> <ptr> skb )
<cls> <noptr> ov x set params ( <ptr> priv <dot> <ptr> c fmt <dot> <ptr> win )
<cls> <noptr> r ving d v timings ( <ptr> file <dot> <ptr> priv f h <dot> <ptr> timings )
<cls> <noptr> do one pass ( <noptr> pattern <dot> <noptr> start <dot> <noptr> end )
<cls> <noptr> alter aci slot shutdown ( <ptr> en <dot> <noptr> slot )
<cls> <ptr> i css update device ( <ptr> dev )
<cls> <noptr> c x print irq bits ( <ptr> name <dot> <ptr> tag <dot> <dptr> strings <dot> <noptr> len <dot> <noptr> bits <dot> <noptr> mask )
<cls> <noptr> vim crm links ( <ptr> vim c )
<cls> <noptr> em uls step put ( <ptr> put str <dot> <ptr> arg )
<cls> <noptr> tt usb start feed ( <ptr> dvb dmx feed )
<cls> <noptr> configure mem dma and input block ( <ptr> fe i <dot> <ptr> t sin )
<cls> <noptr> lis lv d power on ( <ptr> lis )
<cls> <noptr> imx enum frame interval ( <ptr> sub dev <dot> <ptr> cfg <dot> <ptr> fie )
<cls> <noptr> os lec flush ( <ptr> ec )
<cls> <noptr> ver ve write byte ( <ptr> dev <dot> <noptr> saddr <dot> <noptr> data )
<cls> <ptr> bf usb get completed ( <ptr> data )
<cls> <noptr> css routing ( <ptr> sd <dot> <noptr> input <dot> <noptr> output <dot> <noptr> config )
<cls> <noptr> qca regulator disable ( <ptr> qca dev )
<cls> <noptr> seq mpt print ioc summary ( <ptr> ioc <dot> <ptr> m <dot> <noptr> show lan )
<cls> <noptr> ovs stream ( <ptr> sd <dot> <noptr> on )
<cls> <noptr> x pch bbe ater ( <ptr> unused )
<cls> <noptr> isp pipeline wait ( <ptr> isp <dot> <ptr> ptr )
<cls> <noptr> t dax init cfg ( <ptr> sd <dot> <ptr> cfg )
<cls> <noptr> ctrl power mode ( <ptr> state <dot> <ptr> mode )
<cls> <noptr> twe num frame intervals ( <ptr> file <dot> <ptr> priv <dot> <ptr> f int v )
<cls> <noptr> bt bcm initialize ( <ptr> h dev <dot> <ptr> fw name <dot> <noptr> len <dot> <noptr> reinit )
<cls> <noptr> d v bus bfe sleep ( <ptr> fe )
<cls> <noptr> cafe smbus enable irq ( <ptr> cam )
<cls> <noptr> dvb ca en check cam status ( <ptr> ca <dot> <noptr> slot )
<cls> <noptr> vb icap start streaming ( <ptr> v q <dot> <noptr> count )
<cls> <noptr> stv set search standard ( <ptr> int p <dot> <noptr> demo d )
<cls> <noptr> swap discard work ( <ptr> work )
<cls> <noptr> m xls fid ac config ( <ptr> state <dot> <noptr> control mode <dot> <noptr> current setting <dot> <noptr> current value <dot> <noptr> hy ste res is value )
<cls> <noptr> fim ch w set out dma ( <ptr> ctx )
<cls> <noptr> ovs frame interval ( <ptr> sd <dot> <ptr> fi )
<cls> <noptr> any see streaming ctrl ( <ptr> fe <dot> <noptr> onoff )
<cls> <noptr> xsd fec stop ( <ptr> xsd fec )
<cls> <noptr> saa set dma bits ( <ptr> dev )
<cls> <noptr> compaction suitable ( <ptr> zone <dot> <noptr> order <dot> <noptr> alloc flags <dot> <noptr> class zoneid x )
<cls> <noptr> dvb vb fill buffer ( <ptr> ctx <dot> <ptr> src <dot> <noptr> len <dot> <ptr> buffer flags )
<cls> <noptr> page table shareable ( <ptr> svm a <dot> <ptr> vma <dot> <noptr> addr <dot> <noptr> idx )
<cls> <ptr> check tx carrier freq ( )
<cls> <noptr> smi app write ( <ptr> sensor <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> mpt scsi h info scsi io ( <ptr> ioc <dot> <ptr> sc <dot> <ptr> p scsi reply )
<cls> <noptr> c x der sleep t cto active cb and ( <ptr> priv <dot> <noptr> bandwidth )
<cls> <noptr> smb word op ( <noptr> data format <dot> <noptr> slave addr <dot> <noptr> cmd <dot> <noptr> data <dot> <noptr> operation <dot> <ptr> result )
<cls> <noptr> handle cec event ( <ptr> cro sec cec )
<cls> <noptr> huge pud set accessed ( <ptr> vm f <dot> <noptr> orig pud )
<cls> <noptr> find available min freq ( <ptr> dev freq )
<cls> <noptr> fim cmd modify pipelines ( <ptr> entity <dot> <noptr> enable <dot> <ptr> graph )
<cls> <noptr> scc am if vid ioc g fmt ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> huge tlb v mop split ( <ptr> vma <dot> <noptr> addr )
<cls> <noptr> red rat dev probe ( <ptr> int f <dot> <ptr> id )
<cls> <noptr> reset page owner ( <ptr> page <dot> <noptr> order )
<cls> <noptr> validate ctrls ( <ptr> cs <dot> <ptr> helpers <dot> <ptr> v dev <dot> <noptr> set )
<cls> <noptr> z d demo d sleep ( <ptr> fe )
<cls> <noptr> mk entry ( <noptr> id <dot> <noptr> len )
<cls> <noptr> pvr ctrl get mask ( <ptr> cptr )
<cls> <noptr> ov set ctrl h flip ( <ptr> sensor <dot> <noptr> value )
<cls> <noptr> dib identify state ( <ptr> udev <dot> <ptr> props <dot> <dptr> desc <dot> <ptr> cold )
<cls> <noptr> eeprom c x startup ( <ptr> eeprom )
<cls> <noptr> palm asset p data irq flag ( <ptr> ic <dot> <ptr> p data )
<cls> <noptr> go y a init m me q mans ( <ptr> h dev )
<cls> <noptr> mtv open ( <ptr> sub dev <dot> <ptr> f h )
<cls> <noptr> build key ( <ptr> dev )
<cls> <noptr> mem block addrs overlap ( <noptr> base <dot> <noptr> size <dot> <noptr> base <dot> <noptr> size )
<cls> <ptr> check rca input ( )
<cls> <noptr> af pid filter control ( <ptr> adap <dot> <noptr> onoff )
<cls> <noptr> azi c xfer ( <ptr> adap <dot> <noptr> msg <dot> <noptr> num )
<cls> <noptr> hvr probe ( <ptr> gsp ca dev )
<cls> <noptr> td a set phy ( <ptr> fe <dot> <noptr> sample freq hz <dot> <noptr> if hz )
<cls> <noptr> set led ( <ptr> gsp ca dev <dot> <noptr> status )
<cls> <noptr> omap is pres izer max rate ( <ptr> res <dot> <ptr> max rate )
<cls> <noptr> vb core prepare buf ( <ptr> q <dot> <noptr> index <dot> <ptr> pb )
<cls> <noptr> td aic gate ctrl ( <ptr> fe <dot> <noptr> enable )
<cls> <noptr> flex cop pci init ( <ptr> fc pci )
<cls> <noptr> stb read ber ( <ptr> fe <dot> <ptr> ber )
<cls> <noptr> c iner gy t power ctrl ( <ptr> d <dot> <noptr> enable )
<cls> <noptr> check move une vic table pages ( <ptr> p vec )
<cls> <noptr> iv t vic register ( <ptr> it v <dot> <noptr> idx )
<cls> <noptr> scm init controls ( <ptr> state )
<cls> <noptr> stk sensor out b ( <ptr> dev <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> dib get temperature ( <ptr> state <dot> <ptr> tune state )
<cls> <noptr> rtl xx u wr reg ( <ptr> d <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> dvb dmx sw filter section feed ( <ptr> feed )
<cls> <noptr> max irq global un mask ( <ptr> irq drv data )
<cls> <noptr> per cpu enable async ( )
<cls> <noptr> c x dvb start feed ( <ptr> feed )
<cls> <noptr> a speed video query cap ( <ptr> file <dot> <ptr> f h <dot> <ptr> cap )
<cls> <ptr> dev to sci f peer ( <ptr> dev )
<cls> <noptr> drain pages zone ( <noptr> cpu <dot> <ptr> zone )
<cls> <noptr> write sensor a ( <ptr> gsp ca dev <dot> <ptr> ptr )
<cls> <noptr> ctrl ic bridge ( <ptr> demo d <dot> <ptr> bridge closed )
<cls> <ptr> rtl get ic adapter ( <ptr> client )
<cls> <noptr> em x xic send bytes ( <ptr> dev <dot> <noptr> addr <dot> <ptr> buf <dot> <noptr> len <dot> <noptr> stop )
<cls> <noptr> msb erase block ( <ptr> msb <dot> <noptr> p ba )
<cls> <noptr> sci f client send ( <ptr> sci f dev <dot> <ptr> msg )
<cls> <noptr> oom un kill able task ( <ptr> p )
<cls> <noptr> any see ic gate ctrl ( <ptr> fe <dot> <noptr> enable )
<cls> <noptr> mei hdc p get session key ( <ptr> dev <dot> <ptr> data <dot> <ptr> ske data )
<cls> <noptr> itr r ( <ptr> dev <dot> <noptr> index )
<cls> <noptr> vma permits fault ( <ptr> vma <dot> <noptr> fault flags )
<cls> <ptr> vim c cap process frame ( <ptr> ved <dot> <ptr> frame )
<cls> <noptr> vmc id bell register notification bitmap ( <noptr> bitmap p pn )
<cls> <noptr> dram usage info ( <ptr> h priv <dot> <ptr> args )
<cls> <noptr> ov init controls ( <ptr> sensor )
<cls> <noptr> c x dt nr dmd dvb t sleep setting ( <ptr> tn r dmd )
<cls> <noptr> dib auto search start ( <ptr> fe )
<cls> <noptr> cal enum frame sizes ( <ptr> file <dot> <ptr> f h <dot> <ptr> f size )
<cls> <noptr> imx set coarse time ( <ptr> priv <dot> <ptr> val )
<cls> <noptr> vsp dll is thw enqueue ( <ptr> dl )
<cls> <noptr> fallback migrate page ( <ptr> mapping <dot> <ptr> new page <dot> <ptr> page <dot> <noptr> mode )
<cls> <noptr> c x d set pid filter ( <ptr> spi <dot> <ptr> cfg )
<cls> <noptr> rds read cycle nowait ( <ptr> aci )
<cls> <ptr> remove element ( <ptr> pool )
<cls> <noptr> c x audio mux ( <ptr> dev <dot> <noptr> input )
<cls> <noptr> h fi session flush ( <ptr> inst <dot> <noptr> type )
<cls> <noptr> venus helper power enable ( <ptr> core <dot> <noptr> session type <dot> <noptr> enable )
<cls> <noptr> via cam irq ( <noptr> irq <dot> <ptr> data )
<cls> <noptr> rdc reset ( <ptr> state )
<cls> <noptr> ir spi sett x carrier ( <ptr> dev <dot> <noptr> carrier )
<cls> <noptr> stb d vbs config csm auto ( <ptr> state )
<cls> <noptr> c x dt nr dmd interrupt read ( <ptr> tn r dmd <dot> <ptr> value )
<cls> <noptr> isp stat buf insert magic ( <ptr> stat <dot> <ptr> buf )
<cls> <noptr> ce u update plane sizes ( <ptr> plane <dot> <noptr> bpl <dot> <noptr> sz image )
<cls> <noptr> stk sensor out b ( <ptr> dev <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> dib p get best sampling ( <ptr> fe <dot> <ptr> adc )
<cls> <noptr> f cvc o cal read ( <ptr> priv <dot> <ptr> value )
<cls> <noptr> saa tuner setup ( <ptr> dev )
<cls> <noptr> cb sgd w iter write next block ( <ptr> miter <dot> <noptr> data )
<cls> <noptr> video buf dma contig user get ( <ptr> mem <dot> <ptr> vb )
<cls> <noptr> scc am if sub dev get fmt ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> fmt )
<cls> <noptr> c x load queues ( <ptr> s )
<cls> <noptr> m tre set ( <ptr> state <dot> <noptr> full )
<cls> <noptr> c x set freq ( <ptr> dev <dot> <ptr> f )
<cls> <noptr> ate e write ( <ptr> priv <dot> <noptr> off <dot> <ptr> val <dot> <noptr> count )
<cls> <noptr> wmic init ( )
<cls> <noptr> c x usb ddm b gpio tuner ( <ptr> d <dot> <noptr> addr <dot> <noptr> onoff )
<cls> <noptr> tif mms card event ( <ptr> sock )
<cls> <noptr> adv set video standard ( <ptr> state <dot> <noptr> std )
<cls> <noptr> dvb cae nio do ioctl ( <ptr> file <dot> <noptr> cmd <dot> <ptr> p arg )
<cls> <noptr> read ic reg ( <ptr> addr <dot> <noptr> index <dot> <ptr> data )
<cls> <noptr> mt set radio freq ( <ptr> fe <dot> <ptr> params )
<cls> <noptr> six core isin am receiver mode ( <ptr> core )
<cls> <noptr> sms usb probe ( <ptr> int f <dot> <ptr> id )
<cls> <noptr> ska a preview config status ( <ptr> client )
<cls> <noptr> r read reg raw be ( <ptr> dev <dot> <noptr> address )
<cls> <ptr> px am bus get fmt desc ( <noptr> code )
<cls> <noptr> mem fd wait for pins ( <ptr> mapping )
<cls> <noptr> mei hbm pg resume ( <ptr> dev )
<cls> <noptr> philips europa demo d sleep ( <ptr> fe )
<cls> <noptr> spm fce ncs ctrl ( <ptr> ctrl )
<cls> <noptr> ov read ic ( <ptr> sd <dot> <noptr> reg <dot> <ptr> value )
<cls> <noptr> c x v api ( <ptr> c x <dot> <noptr> cmd <dot> <noptr> args )
<cls> <noptr> n gene command config buf ( <ptr> dev <dot> <noptr> config )
<cls> <noptr> h va register device ( <ptr> h va )
<cls> <noptr> z fold page lock ( <ptr> z hdr )
<cls> <noptr> net up uni dvb dev enable ( <ptr> n dev )
<cls> <noptr> kim suspend ( <ptr> pdev <dot> <noptr> state )
<cls> <noptr> gen wq e err error detected ( <ptr> pci dev <dot> <noptr> state )
<cls> <noptr> dvb fini ( )
<cls> <noptr> vp if set input ( <ptr> vp if cfg <dot> <ptr> ch <dot> <noptr> index )
<cls> <noptr> gsc try fmt m plane ( <ptr> ctx <dot> <ptr> f )
<cls> <noptr> fim c sub dev set selection ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> sel )
<cls> <noptr> nxt x get tune settings ( <ptr> fe <dot> <ptr> fe settings )
<cls> <noptr> c pia register camera ( <ptr> cam )
<cls> <noptr> dvb net add if ( <ptr> dvb net <dot> <noptr> pid <dot> <noptr> feed type )
<cls> <noptr> m pts as del device component by os ( <ptr> ioc <dot> <noptr> channel <dot> <noptr> id )
<cls> <noptr> six start usb ( <ptr> radio )
<cls> <noptr> ctrl get crop cap bw ( <ptr> cptr <dot> <ptr> val )
<cls> <noptr> mpt map resources ( <ptr> ioc )
<cls> <noptr> vid io cs fmt vb i out ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> device early fini ( <ptr> h dev )
<cls> <noptr> sp jpeg dri ( <ptr> regs <dot> <noptr> dri )
<cls> <noptr> firmware show ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> fim c caps input ( <ptr> file <dot> <ptr> priv <dot> <noptr> i )
<cls> <noptr> m pol set node mask ( <ptr> pol <dot> <ptr> nodes <dot> <ptr> nsc )
<cls> <noptr> c sla log status ( <ptr> sd )
<cls> <noptr> lpc sch get io ( <ptr> pdev <dot> <noptr> where <dot> <ptr> name <dot> <ptr> res <dot> <noptr> size )
<cls> <noptr> test and set skip ( <ptr> cc <dot> <ptr> page <dot> <noptr> pfn )
<cls> <noptr> btm tks dio open ( <ptr> h dev )
<cls> <noptr> cxx c win fast h callback ( <ptr> core <dot> <noptr> command <dot> <noptr> arg )
<cls> <noptr> venus firmware init ( <ptr> core )
<cls> <noptr> si init ( <ptr> fe )
<cls> <noptr> stmp e spi probe ( <ptr> spi )
<cls> <noptr> write register ( <ptr> state <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> shmem un charge ( <ptr> inode <dot> <noptr> pages )
<cls> <noptr> tx low drive ( <ptr> pin )
<cls> <noptr> isc update profile ( <ptr> isc )
<cls> <noptr> hack r f start streaming ( <ptr> v q <dot> <noptr> count )
<cls> <noptr> tws video routing ( <ptr> sd <dot> <noptr> input <dot> <noptr> output <dot> <noptr> config )
<cls> <noptr> ic w ( <ptr> gsp ca dev <dot> <ptr> buffer )
<cls> <noptr> c x dt nr dmd set l nat hrs sub ( <ptr> tn r dmd <dot> <ptr> tbl air <dot> <ptr> tbl cable )
<cls> <noptr> dev freq performance handler ( <ptr> dev freq <dot> <noptr> event <dot> <ptr> data )
<cls> <ptr> wb get lookup ( <ptr> bd i <dot> <ptr> mem cg css )
<cls> <noptr> delta mjpeg decode ( <ptr> p ctx <dot> <ptr> pau )
<cls> <noptr> of do get timings ( <ptr> np <dot> <ptr> tim )
<cls> <noptr> msis fmt sdr cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> pm x set bits ( <ptr> ic <dot> <noptr> reg <dot> <noptr> mask <dot> <noptr> data )
<cls> <noptr> adv set std ( <ptr> sd <dot> <noptr> std )
<cls> <noptr> scc am if vid io cs fmt ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> asan report store no abort ( <noptr> addr )
<cls> <noptr> fim c lite driver init ( )
<cls> <noptr> mce usb gen init ( <ptr> ir )
<cls> <noptr> me ime pm runtime suspend ( <ptr> device )
<cls> <noptr> max irq global un mask ( <ptr> irq drv data )
<cls> <noptr> htc pld setup chips ( <ptr> pdev )
<cls> <noptr> mtv update aec agc ( <ptr> mtv <dot> <noptr> which <dot> <noptr> enable )
<cls> <noptr> b disp job abort ( <ptr> ctx )
<cls> <noptr> reinit migrate pfn ( <ptr> cc )
<cls> <noptr> ucb core probe ( <ptr> dev )
<cls> <noptr> mic init card debug fs ( )
<cls> <noptr> m pol new bind ( <ptr> pol <dot> <ptr> nodes )
<cls> <noptr> tp g fill plane pattern ( <ptr> tp g <dot> <ptr> params <dot> <noptr> p <dot> <noptr> h <dot> <ptr> v buf )
<cls> <noptr> hopper pci probe ( <ptr> pdev <dot> <ptr> pci id )
<cls> <noptr> order objects ( <noptr> order <dot> <noptr> size )
<cls> <noptr> stk im ref ( <dptr> core data <dot> <noptr> id )
<cls> <noptr> isp video buffer prepare ( <ptr> buf )
<cls> <noptr> mtp pll enable ( <ptr> mtp )
<cls> <noptr> sms usb driver init ( )
<cls> <noptr> m xls f tuner program regs ( <ptr> state <dot> <ptr> ctrl reg info )
<cls> <noptr> l m sub dev init ( <ptr> flash <dot> <noptr> led no <dot> <ptr> led name )
<cls> <noptr> cosm set time ( <ptr> msg )
<cls> <noptr> v l m m register entity ( <ptr> m dev <dot> <ptr> m m dev <dot> <noptr> type <dot> <ptr> v dev <dot> <noptr> function )
<cls> <noptr> btm tks dio setup ( <ptr> h dev )
<cls> <noptr> rtl u tuner attach ( <ptr> adap )
<cls> <noptr> l m volatile register ( <ptr> dev <dot> <noptr> reg )
<cls> <noptr> k mem cache shrink all ( <ptr> s )
<cls> <noptr> dma post ( <ptr> s )
<cls> <noptr> b disp try fmt ( <ptr> file <dot> <ptr> f h <dot> <ptr> f )
<cls> <noptr> c cdc handle stopping ( <ptr> c cdc <dot> <noptr> event )
<cls> <noptr> bt usb i soc complete ( <ptr> urb )
<cls> <noptr> msb cache read ( <ptr> msb <dot> <noptr> lba <dot> <noptr> page <dot> <ptr> sg <dot> <noptr> offset )
<cls> <noptr> k huge paged has work ( )
<cls> <noptr> sgd w iter is atend ( <ptr> miter )
<cls> <noptr> dvb t ctrl set fr enable ( <ptr> state <dot> <ptr> enabled )
<cls> <noptr> vb i out start streaming ( <ptr> v q <dot> <noptr> count )
<cls> <noptr> go y a init m me protection bits ( <ptr> h dev )
<cls> <noptr> over commit ratio handler ( <ptr> table <dot> <noptr> write <dot> <ptr> buffer <dot> <ptr> len p <dot> <ptr> p pos )
<cls> <noptr> c x q buf ( <ptr> file <dot> <ptr> priv <dot> <ptr> b )
<cls> <noptr> swap cgroup swap on ( <noptr> type <dot> <noptr> max pages )
<cls> <noptr> saas f buf ( <ptr> file <dot> <ptr> f <dot> <ptr> fb )
<cls> <noptr> swap slot free notify ( <ptr> page )
<cls> <noptr> r tls drs fmt sdr cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> mce u sbt xir ( <ptr> dev <dot> <ptr> tx buf <dot> <noptr> count )
<cls> <noptr> vs pdl list commit single shot ( <ptr> dl )
<cls> <noptr> sd pkts can ( <ptr> gsp ca dev <dot> <ptr> data <dot> <noptr> len )
<cls> <noptr> m clk get divisor ( <ptr> pdev <dot> <ptr> pc dev )
<cls> <noptr> v fe set rdi cid ( <ptr> v fe <dot> <noptr> id <dot> <noptr> cid )
<cls> <noptr> oo objects ( <noptr> x )
<cls> <noptr> si write regs ( <ptr> state <dot> <noptr> reg <dot> <ptr> data <dot> <noptr> len )
<cls> <noptr> mmu notifier release ( <ptr> m m )
<cls> <noptr> dr x d read signal strength ( <ptr> fe <dot> <ptr> strength )
<cls> <noptr> saa pg table build single ( <ptr> pci <dot> <ptr> pt <dot> <ptr> list <dot> <noptr> s glen )
<cls> <noptr> c x der write regs ( <ptr> priv <dot> <noptr> addr <dot> <noptr> reg <dot> <ptr> data <dot> <noptr> len )
<cls> <noptr> h lic data read ( <ptr> f <dot> <ptr> buf <dot> <noptr> count <dot> <ptr> p pos )
<cls> <noptr> t dar f tracking filters init ( <ptr> fe <dot> <noptr> freq )
<cls> <noptr> snd saa cap src put ( <ptr> k control <dot> <ptr> u control )
<cls> <noptr> delta get free frame ( <ptr> ctx <dot> <dptr> p frame )
<cls> <ptr> v l m m get v q ( <ptr> m mctx <dot> <noptr> type )
<cls> <ptr> hel ene attach ( <ptr> fe <dot> <ptr> config <dot> <ptr> ic )
<cls> <noptr> usb vis ionic xfer ( <ptr> ic adap <dot> <noptr> msgs <dot> <noptr> num )
<cls> <ptr> mpt scsi h get scsi lookup ( <ptr> ioc <dot> <noptr> i )
<cls> <noptr> asd equal ( <ptr> asd x <dot> <ptr> asd y )
<cls> <noptr> vmc i ctx get chk pt state ( <noptr> context id <dot> <noptr> cpt type <dot> <ptr> buf size <dot> <dptr> pbuf )
<cls> <ptr> check tv range ( )
<cls> <noptr> tango ir irq ( <noptr> irq <dot> <ptr> devid )
<cls> <noptr> air spy query cap ( <ptr> file <dot> <ptr> f h <dot> <ptr> cap )
<cls> <noptr> saa vb i initialize ( <ptr> port )
<cls> <noptr> tps clear bits ( <ptr> tps <dot> <noptr> reg <dot> <noptr> mask <dot> <noptr> level )
<cls> <noptr> mem cgroup wait acct move ( <ptr> mem cg )
<cls> <noptr> scc b reg write ( <ptr> gsp ca dev <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> exy nos l pass driver init ( )
<cls> <noptr> sp jpeg set capture queue data ( <ptr> ctx )
<cls> <noptr> wl f m radio driver init ( )
<cls> <noptr> wl f m vid ioc query cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> capability )
<cls> <noptr> calculate node total pages ( <ptr> pg dat <dot> <noptr> node start pfn <dot> <noptr> node end pfn <dot> <ptr> zones size <dot> <ptr> z holes size )
<cls> <noptr> dtt ufe read status ( <ptr> fe <dot> <ptr> stat )
<cls> <noptr> smi app enum mbus code ( <ptr> sub dev <dot> <ptr> cfg <dot> <ptr> code )
<cls> <noptr> stm f x irq map ( <ptr> d <dot> <noptr> vir q <dot> <noptr> hw irq )
<cls> <noptr> devices how ( <ptr> s <dot> <ptr> data )
<cls> <noptr> c x usb medio ncs start sch ( <ptr> dvb dev <dot> <ptr> aux buf <dot> <ptr> bt <dot> <noptr> max line samples )
<cls> <noptr> uvc ioctl stry ext ctrls ( <ptr> handle <dot> <ptr> ctrls <dot> <noptr> commit )
<cls> <noptr> vid ioc g chip info ( <ptr> file <dot> <ptr> priv <dot> <ptr> chip )
<cls> <noptr> compat mpt fw xfer ioctl ( <ptr> filp <dot> <noptr> cmd <dot> <noptr> arg )
<cls> <noptr> mei write ( <ptr> file <dot> <ptr> u buf <dot> <noptr> length <dot> <ptr> offset )
<cls> <noptr> get v l standard ( <ptr> p <dot> <ptr> p )
<cls> <noptr> fim c lite stream on ( <ptr> file <dot> <ptr> priv <dot> <noptr> type )
<cls> <noptr> c pia get version info ( <ptr> cam )
<cls> <noptr> fdp set format ( <ptr> ctx <dot> <ptr> pix <dot> <noptr> type )
<cls> <noptr> c x service vb i ( <noptr> type )
<cls> <noptr> show pci clock ( <ptr> dev <dot> <ptr> dev attr <dot> <ptr> buf )
<cls> <noptr> six core cmd am seek start ( <ptr> core <dot> <noptr> seek up <dot> <noptr> wrap )
<cls> <noptr> rts turn off led ( <ptr> pcr )
<cls> <noptr> gs write register ( <ptr> spi <dot> <noptr> addr <dot> <noptr> value )
<cls> <noptr> fim c is runtime suspend ( <ptr> dev )
<cls> <noptr> pm x deinit ( )
<cls> <noptr> gsc check scaler ratio ( <ptr> var <dot> <noptr> sw <dot> <noptr> sh <dot> <noptr> dw <dot> <noptr> dh <dot> <noptr> rot <dot> <noptr> out path )
<cls> <noptr> memory max show ( <ptr> m <dot> <ptr> v )
<cls> <noptr> vpx set pld mode ( <ptr> adap <dot> <noptr> bypass )
<cls> <noptr> vb dvb find front end ( <ptr> f <dot> <ptr> p )
<cls> <noptr> front swap curr pages ( )
<cls> <noptr> ov set blue balance ( <ptr> gsp ca dev <dot> <noptr> val )
<cls> <noptr> tp g fill plane buffer ( <ptr> tp g <dot> <noptr> std <dot> <noptr> p <dot> <ptr> v buf )
<cls> <noptr> c xdr read status c ( <ptr> fe <dot> <ptr> status )
<cls> <noptr> q am set symbol rate ( <ptr> state )
<cls> <noptr> adv x afe enum mbus code ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> code )
<cls> <noptr> c x pll calculate ( <ptr> fe )
<cls> <noptr> air spy urb complete ( <ptr> urb )
<cls> <noptr> sci f client register ( <ptr> client )
<cls> <noptr> ath k load sys cfg ( <ptr> udev )
<cls> <noptr> vid ioc g fmt vid out overlay ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> cafe irq ( <noptr> irq <dot> <ptr> data )
<cls> <noptr> uvc video stats start ( <ptr> stream )
<cls> <noptr> dvb demux do ioctl ( <ptr> file <dot> <noptr> cmd <dot> <ptr> p arg )
<cls> <noptr> device want to wakeup ( <ptr> hu )
<cls> <noptr> set mute ( <ptr> c x <dot> <noptr> mute )
<cls> <noptr> cxa gc callback ( <ptr> fe )
<cls> <noptr> ir create table ( <ptr> dev <dot> <ptr> r cmap <dot> <ptr> name <dot> <noptr> rc proto <dot> <noptr> size )
<cls> <noptr> pg map array delete ( <ptr> res )
<cls> <noptr> tps xic read device ( <ptr> tps x <dot> <noptr> reg <dot> <noptr> bytes <dot> <ptr> dest )
<cls> <noptr> hdc s set exposure ( <ptr> gsp ca dev <dot> <noptr> val )
<cls> <noptr> m m ols set meter ing mode ( <ptr> info <dot> <noptr> mode )
<cls> <noptr> mtm get selection ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> sel )
<cls> <noptr> l k dtm exec kmalloc ( )
<cls> <noptr> solo ence num fmt cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> calculate pci freq ( <ptr> data )
<cls> <ptr> too v x ( <ptr> sd )
<cls> <noptr> v pfe config c cdc image format ( <ptr> v pfe )
<cls> <noptr> sc set hs coeffs ( <ptr> sc <dot> <ptr> addr <dot> <noptr> src w <dot> <noptr> dst w )
<cls> <noptr> bts dio interrupt ( <ptr> func )
<cls> <noptr> b disp dbg dumps z ( <ptr> s <dot> <noptr> val <dot> <ptr> name )
<cls> <noptr> lif set format ( <ptr> sub dev <dot> <ptr> cfg <dot> <ptr> fmt )
<cls> <noptr> t dax check upload ok ( <ptr> state )
<cls> <noptr> mantis uart work ( <ptr> work )
<cls> <noptr> snd solo pcm open ( <ptr> ss )
<cls> <noptr> isp create links ( <ptr> isp )
<cls> <noptr> v pfe stream on ( <ptr> file <dot> <ptr> priv <dot> <noptr> buf type )
<cls> <noptr> vi u of platform driver init ( )
<cls> <noptr> d bell delayed dispatch ( <ptr> work )
<cls> <noptr> pb init ( <ptr> sd )
<cls> <noptr> vp if probe ( <ptr> pdev )
<cls> <noptr> snd c x alc put ( <ptr> k control <dot> <ptr> value )
<cls> <noptr> h fi process watchdog timeout ( <ptr> core )
<cls> <noptr> z r x xvid ioc g input ( <ptr> file <dot> <ptr> priv <dot> <ptr> i )
<cls> <noptr> mci cmd unlocked ( <ptr> state <dot> <ptr> cmd <dot> <noptr> cmd len <dot> <ptr> res <dot> <noptr> res len )
<cls> <ptr> check m pts aft e ( )
<cls> <noptr> c x usb medi on v start streaming ( <ptr> q <dot> <noptr> count )
<cls> <noptr> sis mod ulator ( <ptr> sd <dot> <ptr> vm )
<cls> <noptr> iri mon decode init ( )
<cls> <noptr> venus boot ( <ptr> core )
<cls> <noptr> c xic write ( <ptr> bus <dot> <noptr> reg addr <dot> <noptr> value )
<cls> <noptr> limit scaled size lock ( <ptr> f h <dot> <ptr> width <dot> <ptr> height <dot> <noptr> field <dot> <noptr> width mask <dot> <noptr> width bias <dot> <noptr> adjust size <dot> <noptr> adjust crop )
<cls> <noptr> k mem leak open ( <ptr> inode <dot> <ptr> file )
<cls> <noptr> freq magnitude ( <noptr> x <dot> <noptr> n <dot> <noptr> freq )
<cls> <ptr> check vcr hack ( )
<cls> <noptr> em xx get key win fast usb i i deluxe ( <ptr> ic dev <dot> <ptr> protocol <dot> <ptr> scan code )
<cls> <noptr> exy nos dmc change freq and volt ( <ptr> dmc <dot> <noptr> target rate <dot> <noptr> target volt )
<cls> <noptr> page set set high and batch ( <ptr> zone <dot> <ptr> pcp )
<cls> <noptr> asi c suspend ( <ptr> dev )
<cls> <noptr> m xls f set gpo state ( <ptr> state <dot> <noptr> pin <dot> <noptr> val )
<cls> <noptr> vp bit get sda ( <ptr> data )
<cls> <noptr> l gs gl update alt reg ( <ptr> state <dot> <noptr> reg <dot> <noptr> data )
<cls> <noptr> tps x startup ( <ptr> tps x )
<cls> <noptr> wm readable ( <ptr> dev <dot> <noptr> reg )
<cls> <noptr> vid ioc g parm ( <ptr> file <dot> <ptr> f h <dot> <ptr> parm )
<cls> <noptr> apply vp patch ( <ptr> cam )
<cls> <ptr> setup object ( <ptr> s <dot> <ptr> page <dot> <ptr> object )
<cls> <noptr> f m irq af jump rdf req ( <ptr> f m dev )
<cls> <noptr> clear page movable ( <ptr> page )
<cls> <noptr> cec pin received ( <ptr> adap <dot> <ptr> msg )
<cls> <noptr> hel ene leave power save ( <ptr> priv )
<cls> <noptr> rain cec adap enable ( <ptr> adap <dot> <noptr> enable )
<cls> <noptr> vivid slice dvb icap process ( <ptr> dev <dot> <ptr> buf )
<cls> <noptr> dib usb pid filter ( <ptr> adap <dot> <noptr> index <dot> <noptr> pid <dot> <noptr> onoff )
<cls> <noptr> rtl ur c query ( <ptr> d )
<cls> <noptr> venc buf done ( <ptr> inst <dot> <noptr> buf type <dot> <noptr> tag <dot> <noptr> bytes used <dot> <noptr> data offset <dot> <noptr> flags <dot> <noptr> h fi flags <dot> <noptr> timestamp us )
<cls> <noptr> m i pid enum mbus code ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> code )
<cls> <noptr> m lock vma page ( <ptr> page )
<cls> <noptr> dib auto search irq ( <ptr> fe )
<cls> <noptr> copy nodes to user ( <ptr> mask <dot> <noptr> max node <dot> <ptr> nodes )
<cls> <noptr> vma interval tree augment compute max ( <ptr> node <dot> <noptr> exit )
<cls> <noptr> tt usb dec init v pes ( <ptr> dec )
<cls> <noptr> enclosed rectangle ( <ptr> a <dot> <ptr> b )
<cls> <noptr> ce ic function ality ( <ptr> adapter )
<cls> <noptr> img ir write filter ( <ptr> priv <dot> <ptr> filter )
<cls> <noptr> stv set ts path ( <ptr> state )
<cls> <ptr> check uv ratio ( )
<cls> <noptr> pmd move must withdraw ( <ptr> new pmd pt l <dot> <ptr> old pmd pt l <dot> <ptr> vma )
<cls> <noptr> maxs frequency ( <ptr> sd <dot> <ptr> v f )
<cls> <noptr> ad suspend ( <ptr> dev )
<cls> <noptr> video buf next field ( <ptr> q )
<cls> <noptr> pfn to bit idx ( <ptr> page <dot> <noptr> pfn )
<cls> <noptr> px a camera init video buf ( <ptr> pc dev )
<cls> <noptr> rtl xx u wr reg mask ( <ptr> d <dot> <noptr> reg <dot> <noptr> val <dot> <noptr> mask )
<cls> <noptr> mtk jpeg start streaming ( <ptr> q <dot> <noptr> count )
<cls> <ptr> m c handle swap pte ( <ptr> vma <dot> <noptr> p tent <dot> <ptr> entry )
<cls> <noptr> mpt spi print read nego ( <ptr> hd <dot> <ptr> star get <dot> <noptr> i i )
<cls> <noptr> stv cab gate ctrl ( <ptr> fe <dot> <noptr> enable )
<cls> <noptr> dvb cae nf rda irq ( <ptr> pub ca <dot> <noptr> slot )
<cls> <noptr> v few m set pong addr ( <ptr> v fe <dot> <noptr> wm <dot> <noptr> addr )
<cls> <noptr> sun ic sig input ( <ptr> file <dot> <ptr> f h <dot> <ptr> i )
<cls> <noptr> mrs get fec ( <ptr> state )
<cls> <noptr> saa h driver init ( )
<cls> <noptr> solo pm init ( <ptr> solo dev )
<cls> <noptr> c port show rev id ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> sp mfc handle frame all extracted ( <ptr> ctx )
<cls> <noptr> sii c write ( <ptr> radio <dot> <ptr> data <dot> <noptr> len )
<cls> <noptr> sa axs audio routing ( <ptr> sd <dot> <noptr> input <dot> <noptr> output <dot> <noptr> config )
<cls> <noptr> get device capabilities ( <ptr> state )
<cls> <noptr> skb a fopen ( <ptr> sd <dot> <ptr> f h )
<cls> <noptr> dib p set front end ( <ptr> fe )
<cls> <noptr> omap v out new format ( <ptr> pix <dot> <ptr> f buf <dot> <ptr> crop <dot> <ptr> win )
<cls> <noptr> msm v fe get v f eid ( <ptr> entity <dot> <ptr> id )
<cls> <noptr> l m get ctrl ( <ptr> ctrl )
<cls> <noptr> last nodes raw show ( <ptr> s <dot> <ptr> data )
<cls> <noptr> qca read soc version ( <ptr> h dev <dot> <ptr> soc version <dot> <noptr> soc type )
<cls> <noptr> tif mms write data ( <ptr> host <dot> <ptr> buf <dot> <noptr> length )
<cls> <noptr> isp video poll ( <ptr> file <dot> <ptr> wait )
<cls> <noptr> fc driver init ( )
<cls> <noptr> c x usb dual dig rev front end attach ( <ptr> adap )
<cls> <noptr> mem block insert region ( <ptr> type <dot> <noptr> idx <dot> <noptr> base <dot> <noptr> size <dot> <noptr> nid <dot> <noptr> flags )
<cls> <noptr> a pds x prox reporting avail show ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> stv write ( <ptr> fe <dot> <noptr> buf <dot> <noptr> len )
<cls> <noptr> aki c driver init ( )
<cls> <noptr> swap count continued ( <ptr> si <dot> <noptr> offset <dot> <noptr> count )
<cls> <noptr> c x dt nr dmd mon r f lvl sub ( <ptr> tn r dmd <dot> <ptr> r flv ldb )
<cls> <noptr> m xlr f init ( <ptr> fe )
<cls> <noptr> dr x u code compute crc ( <ptr> block data <dot> <noptr> nr words )
<cls> <noptr> configure reg map ( <ptr> state <dot> <noptr> region )
<cls> <noptr> memory min write ( <ptr> of <dot> <ptr> buf <dot> <noptr> nbytes <dot> <noptr> off )
<cls> <noptr> c sir x stop ( <ptr> c sir x )
<cls> <noptr> c xxx g tuner ( <ptr> file <dot> <ptr> priv <dot> <ptr> t )
<cls> <noptr> snd c xxx pcm close ( <ptr> sub stream )
<cls> <noptr> wm device init ( <ptr> wm <dot> <noptr> irq <dot> <ptr> p data )
<cls> <noptr> get gain ( <ptr> gsp ca dev )
<cls> <noptr> resizer init formats ( <ptr> sd <dot> <ptr> f h )
<cls> <noptr> ssb i write ( <ptr> dev <dot> <noptr> addr <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> c cdc save context ( )
<cls> <noptr> bt tv get width mask vid cap ( <ptr> fmt <dot> <ptr> width mask <dot> <ptr> width bias )
<cls> <noptr> spread data valid signal ( <ptr> state )
<cls> <noptr> mn x driver init ( )
<cls> <noptr> hmc driver init ( )
<cls> <noptr> d ibus brc query ( <ptr> d <dot> <ptr> event <dot> <ptr> state )
<cls> <noptr> sci f node add ack ( <ptr> sci f dev <dot> <ptr> msg )
<cls> <noptr> e cic func ( <ptr> adapter )
<cls> <noptr> gen wq e init module ( )
<cls> <noptr> mem cgroup oom try lock ( <ptr> mem cg )
<cls> <noptr> pvr context shut ok ( )
<cls> <noptr> start video dma ( <ptr> dev <dot> <ptr> q <dot> <ptr> buf )
<cls> <noptr> usb shark resume ( <ptr> int f )
<cls> <noptr> session get prop profile level ( <ptr> pkt <dot> <ptr> profile level )
<cls> <noptr> isolate migrate pages range ( <ptr> cc <dot> <noptr> start pfn <dot> <noptr> end pfn )
<cls> <noptr> me ime synchronize irq ( <ptr> dev )
<cls> <noptr> cal enum frame sizes ( <ptr> file <dot> <ptr> f h <dot> <ptr> f size )
<cls> <noptr> dvb net u lets pus i ( <ptr> h )
<cls> <ptr> check op mode ( )
<cls> <noptr> check kernel text object ( <noptr> ptr <dot> <noptr> n <dot> <noptr> to user )
<cls> <noptr> intell pm suspend ( <ptr> hu )
<cls> <noptr> set dec all ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> hl set frequency ( <ptr> h dev <dot> <noptr> pll index <dot> <noptr> freq )
<cls> <noptr> me it xe host isready ( <ptr> dev )
<cls> <noptr> poin it ( <ptr> sd )
<cls> <noptr> dib x pid filter ( <ptr> adapter <dot> <noptr> index <dot> <noptr> pid <dot> <noptr> onoff )
<cls> <noptr> mei open ( <ptr> inode <dot> <ptr> file )
<cls> <noptr> saa gos std ( <ptr> sd <dot> <noptr> norm )
<cls> <noptr> t dax parse info frame ( <ptr> state <dot> <noptr> addr )
<cls> <noptr> snd cobalt p cmp b pointer ( <ptr> sub stream )
<cls> <noptr> vsp video pipeline build branch ( <ptr> pipe <dot> <ptr> input <dot> <ptr> output )
<cls> <ptr> dib p get ic tuner ( <ptr> fe )
<cls> <noptr> dvb front end poll ( <ptr> file <dot> <ptr> wait )
<cls> <noptr> vsp device init ( <ptr> vsp )
<cls> <noptr> pv ric write ( <ptr> h dw <dot> <noptr> ic addr <dot> <ptr> data <dot> <noptr> length )
<cls> <noptr> me ime pg set ( <ptr> dev )
<cls> <noptr> dib get snr ( <ptr> fe )
<cls> <noptr> six get scratch page versions ( <ptr> radio )
<cls> <noptr> unlock page lru ( <ptr> page <dot> <noptr> isolated )
<cls> <noptr> max conn show ( <ptr> dev <dot> <ptr> a <dot> <ptr> buf )
<cls> <noptr> rtl xx uic func ( <ptr> adapter )
<cls> <noptr> ov power on ( <ptr> ov )
<cls> <noptr> qca ibs wake ack ( <ptr> h dev <dot> <ptr> skb )
<cls> <noptr> ssb i driver init ( )
<cls> <noptr> alp std lb tuner set params ( <ptr> fe )
<cls> <noptr> ll flush ( <ptr> hu )
<cls> <noptr> img ir set decoder ( <ptr> priv <dot> <ptr> decoder <dot> <noptr> proto )
<cls> <noptr> z fold page try lock ( <ptr> z hdr )
<cls> <noptr> xpc increment heartbeat uv ( )
<cls> <noptr> ov try fmt internal ( <ptr> sd <dot> <ptr> fmt <dot> <dptr> ret fmt <dot> <dptr> ret frm size )
<cls> <noptr> l gs gl update reg ( <ptr> state <dot> <noptr> reg <dot> <noptr> data )
<cls> <noptr> sh ve u try fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> mtk md pvp u process ( <ptr> v pu )
<cls> <noptr> action result ( <noptr> pfn <dot> <noptr> type <dot> <noptr> result )
<cls> <noptr> wm set audio ( <ptr> sd <dot> <noptr> quietly )
<cls> <noptr> ic w mask ( <ptr> sd <dot> <noptr> reg <dot> <noptr> value <dot> <noptr> mask )
<cls> <noptr> cam clk un prepare ( <ptr> hw )
<cls> <noptr> v spr pf configure auto fld ( <ptr> r pf <dot> <ptr> dl )
<cls> <noptr> ctrl set audio mode ( <ptr> cptr <dot> <noptr> m <dot> <noptr> v )
<cls> <noptr> fdt v get ca flags ( <ptr> stat )
<cls> <noptr> init codecs ( <ptr> core )
<cls> <noptr> r jn get selection ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> sel )
<cls> <noptr> stv x search car loop ( <ptr> state <dot> <noptr> inc <dot> <noptr> timeout <dot> <noptr> zigzag <dot> <noptr> steps max )
<cls> <ptr> fdp peek queued field ( <ptr> ctx )
<cls> <ptr> check shutdown workaround ( )
<cls> <noptr> e tek enum mbus code ( <ptr> sub dev <dot> <ptr> cfg <dot> <ptr> code )
<cls> <noptr> vp uip i init ( <ptr> v pu )
<cls> <noptr> set freq to low job ( <ptr> work )
<cls> <noptr> c x check cmd ( <ptr> state <dot> <noptr> id )
<cls> <noptr> snc read ( <ptr> gsp ca dev <dot> <ptr> reading )
<cls> <noptr> q p host register user memory ( <ptr> page store <dot> <ptr> produce q <dot> <ptr> consume q )
<cls> <noptr> uvc get le value ( <ptr> mapping <dot> <noptr> query <dot> <ptr> data )
<cls> <noptr> budget dis eq c send burst ( <ptr> fe <dot> <noptr> mini cmd )
<cls> <noptr> bcm flush ( <ptr> hu )
<cls> <noptr> m tts stream ( <ptr> sub dev <dot> <noptr> enable )
<cls> <noptr> mci cmd unlocked ( <ptr> state <dot> <ptr> cmd <dot> <noptr> cmd len <dot> <ptr> res <dot> <noptr> res len )
<cls> <noptr> ctrl clear dirty s rate ( <ptr> cptr )
<cls> <ptr> irq tow m x irq ( <ptr> wm x <dot> <noptr> irq )
<cls> <noptr> asan store ( <noptr> addr )
<cls> <noptr> vid ioc fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> a gxx init ( )
<cls> <noptr> rc sip htw write ( <ptr> priv <dot> <noptr> data <dot> <noptr> code )
<cls> <noptr> adjust managed page count ( <ptr> page <dot> <noptr> count )
<cls> <noptr> tc delayed work enable hot plug ( <ptr> work )
<cls> <noptr> vma compute gap ( <ptr> vma )
<cls> <noptr> input write output ( <ptr> input <dot> <ptr> output )
<cls> <ptr> check emulated formats ( )
<cls> <ptr> follow huge pgd ( <ptr> m m <dot> <noptr> address <dot> <ptr> pgd <dot> <noptr> flags )
<cls> <noptr> v l flash set led brightness ( <ptr> v l flash <dot> <ptr> ctrl )
<cls> <noptr> b h set prox thres ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> ddb ic master xfer ( <ptr> adapter <dot> <noptr> msg <dot> <noptr> num )
<cls> <noptr> set vma res v map ( <ptr> vma <dot> <ptr> map )
<cls> <ptr> get any partial ( <ptr> s <dot> <noptr> flags <dot> <ptr> c )
<cls> <noptr> me ime h buf empty slots ( <ptr> dev )
<cls> <noptr> xpc initiate connect ( <noptr> ch number )
<cls> <noptr> afe write ( <ptr> sd <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> unmap mapping range ( <ptr> mapping <dot> <noptr> hole begin <dot> <noptr> hole len <dot> <noptr> even cows )
<cls> <noptr> ce u update plane sizes ( <ptr> plane <dot> <noptr> bpl <dot> <noptr> sz image )
<cls> <ptr> ln b xx attach ( <ptr> fe <dot> <ptr> ic <dot> <noptr> override set <dot> <noptr> override clear <dot> <noptr> ic addr <dot> <noptr> config )
<cls> <noptr> pvr g input ( <ptr> file <dot> <ptr> priv <dot> <ptr> i )
<cls> <noptr> ctrl get crop cap dw ( <ptr> cptr <dot> <ptr> val )
<cls> <noptr> a vsync to package ( <ptr> go <dot> <ptr> code <dot> <noptr> space )
<cls> <noptr> initi vt vic ( <ptr> it v )
<cls> <noptr> scc b check status ( <ptr> gsp ca dev )
<cls> <noptr> put huge zero page ( )
<cls> <noptr> set resolution ( <ptr> gsp ca dev )
<cls> <noptr> vm balloon split refused pages ( <ptr> ctl )
<cls> <noptr> init section page ext ( <noptr> pfn <dot> <noptr> nid )
<cls> <noptr> x box remote rc init ( <ptr> x box remote )
<cls> <noptr> av init analog module ( <ptr> av )
<cls> <noptr> venus helper get buf req ( <ptr> inst <dot> <noptr> type <dot> <ptr> req )
<cls> <ptr> strn dup user ( <ptr> s <dot> <noptr> n )
<cls> <noptr> kemp ld get mutex ( <ptr> pld )
<cls> <noptr> vb request queue ( <ptr> req )
<cls> <noptr> rotate reclaim able page ( <ptr> page )
<cls> <noptr> afr c query ( <ptr> d )
<cls> <noptr> mtk mdp m mgf mtm plane ( <ptr> file <dot> <ptr> f h <dot> <ptr> f )
<cls> <noptr> td a read status ( <ptr> fe <dot> <ptr> status )
<cls> <noptr> cal try fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> init r cmap twin han vp ( )
<cls> <noptr> nv t sett x carrier ( <ptr> dev <dot> <noptr> carrier )
<cls> <noptr> uvc parse streaming ( <ptr> dev <dot> <ptr> int f )
<cls> <noptr> saa encoder stop streaming ( <ptr> port )
<cls> <noptr> altera get file info ( <ptr> p <dot> <noptr> program size <dot> <ptr> format version <dot> <ptr> action count <dot> <ptr> procedure count )
<cls> <noptr> cio vb return all buffers ( <ptr> q <dot> <noptr> state )
<cls> <noptr> device hard reset pending ( <ptr> work )
<cls> <ptr> z swap pool last get ( )
<cls> <noptr> tt usb msg ( <ptr> d <dot> <noptr> cmd <dot> <ptr> w buf <dot> <noptr> w len <dot> <ptr> r buf <dot> <noptr> r len )
<cls> <noptr> hl device init ( <ptr> h dev <dot> <ptr> h class )
<cls> <noptr> l m attr isvisible ( <ptr> k obj <dot> <ptr> attr <dot> <noptr> n )
<cls> <noptr> ycbcr rgb ( <noptr> m <dot> <noptr> y <dot> <noptr> cb <dot> <noptr> cr <dot> <noptr> yoffset <dot> <ptr> r <dot> <ptr> g <dot> <ptr> b )
<cls> <noptr> device rtc init ( <ptr> chip <dot> <ptr> p data )
<cls> <noptr> ska a set mirror ( <ptr> ska a <dot> <noptr> horiz flip )
<cls> <noptr> r vin reset format ( <ptr> vin )
<cls> <noptr> dst set tone ( <ptr> fe <dot> <noptr> tone )
<cls> <noptr> dib pc detection ( <ptr> ic adap )
<cls> <noptr> exy nos jpeg set img addr ( <ptr> ctx )
<cls> <noptr> sci frm alist dma copy aligned ( <ptr> work <dot> <ptr> chan )
<cls> <noptr> sci f init mmu notifier ( <ptr> m mn <dot> <ptr> m m <dot> <ptr> ep )
<cls> <noptr> exy no shuff tbl val ( <noptr> class <dot> <noptr> id )
<cls> <noptr> gen wq e map pages ( <ptr> cd <dot> <dptr> page list <dot> <noptr> numpages <dot> <ptr> dma list )
<cls> <dptr> check def mode ( )
<cls> <noptr> c x dt nr dmd dvb t mon active plp ( <ptr> tn r dmd <dot> <noptr> type <dot> <ptr> plp info )
<cls> <noptr> s pcs isset format ( <ptr> state )
<cls> <noptr> it get r x bytes ( <ptr> dev <dot> <ptr> buf <dot> <noptr> buf size )
<cls> <ptr> check filter ( <ptr> temp int <dot> <ptr> demux dev <dot> <noptr> filt nr )
<cls> <noptr> check dax v mas ( <dptr> v mas <dot> <noptr> nr pages )
<cls> <noptr> r set mode ( <ptr> dev <dot> <noptr> parallel mode )
<cls> <noptr> wakeup ctx ( <ptr> ctx )
<cls> <noptr> type show ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> mpt sass end raid event ( <ptr> fw event )
<cls> <noptr> ms pull ctl enable l q fp ( <ptr> u cr )
<cls> <noptr> memory failure work func ( <ptr> work )
<cls> <noptr> ovs exp ( <ptr> sd <dot> <noptr> value )
<cls> <noptr> pte same as swp ( <noptr> pte <dot> <noptr> swp pte )
<cls> <noptr> flex cop dis eq c send burst ( <ptr> fe <dot> <noptr> mini cmd )
<cls> <noptr> rcs i init pht wh vh mn ( <ptr> priv <dot> <noptr> mbps )
<cls> <noptr> sms core load firmware family ( <ptr> core dev <dot> <ptr> buffer <dot> <noptr> size )
<cls> <noptr> em xx get key win fast usb i i deluxe ( <ptr> ic dev <dot> <ptr> protocol <dot> <ptr> scan code )
<cls> <noptr> csi irq status set ( <ptr> isp <dot> <ptr> csi <dot> <noptr> enable )
<cls> <noptr> go usb read audio pipe complete ( <ptr> urb )
<cls> <noptr> hdp vr start streaming ( <ptr> dev )
<cls> <noptr> sun ics is fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> early io remap shutdown ( )
<cls> <noptr> hi resume ( <ptr> dev )
<cls> <noptr> sa axs register ( <ptr> sd <dot> <ptr> reg )
<cls> <noptr> gpio init ( <ptr> sd <dot> <ptr> gpio )
<cls> <noptr> pb set red balance ( <ptr> gsp ca dev <dot> <noptr> val )
<cls> <noptr> c x get fec ( <ptr> state )
<cls> <noptr> fim c runtime resume ( <ptr> dev )
<cls> <noptr> adv have hot plug ( <ptr> sd )
<cls> <noptr> af generic read write ( <ptr> d <dot> <noptr> reg <dot> <noptr> read write <dot> <noptr> type <dot> <ptr> values <dot> <noptr> len )
<cls> <dptr> check modules ( )
<cls> <noptr> should continue reclaim ( <ptr> pg dat <dot> <noptr> nr reclaimed <dot> <ptr> sc )
<cls> <noptr> hl hw queue send cb noc mpl ( <ptr> h dev <dot> <noptr> hw queueid <dot> <noptr> cbsize <dot> <noptr> cb ptr )
<cls> <noptr> cxa v and or ( <ptr> c x <dot> <noptr> addr <dot> <noptr> and mask <dot> <noptr> or value )
<cls> <noptr> pwc enum frame intervals ( <ptr> file <dot> <ptr> f h <dot> <ptr> f ival )
<cls> <noptr> c x g tuner ( <ptr> sd <dot> <ptr> vt )
<cls> <noptr> snd em xx capture trigger ( <ptr> sub stream <dot> <noptr> cmd )
<cls> <noptr> x box remote rc open ( <ptr> r dev )
<cls> <noptr> c x set stereo ( <ptr> core <dot> <noptr> mode <dot> <noptr> manual )
<cls> <noptr> x c get signal level ( <ptr> priv <dot> <ptr> signal )
<cls> <noptr> sp jpeg driver init ( )
<cls> <noptr> c xxx g frequency ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> su front end attach ( <ptr> adap )
<cls> <noptr> h lvm ctx fini ( <ptr> ctx )
<cls> <noptr> solo get fmt cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> imx write current format ( <ptr> imx <dot> <ptr> format )
<cls> <noptr> t dax read byte ( <ptr> state <dot> <noptr> reg )
<cls> <noptr> f m r x get rssi level ( <ptr> f m dev <dot> <ptr> rssi lvl )
<cls> <noptr> ov read ( <ptr> sd <dot> <noptr> reg <dot> <ptr> val )
<cls> <noptr> aus video routing ( <ptr> sd <dot> <noptr> input <dot> <noptr> output <dot> <noptr> config )
<cls> <noptr> m m ops v dec job ready ( <ptr> m m priv )
<cls> <noptr> wl f m vid io cs frequency ( <ptr> file <dot> <ptr> priv <dot> <ptr> freq )
<cls> <noptr> mtk w ( <ptr> ir <dot> <noptr> val <dot> <noptr> reg )
<cls> <noptr> rts a optimize phy ( <ptr> pcr )
<cls> <ptr> rc dev get from fd ( <noptr> fd )
<cls> <noptr> memcpy from rb ( <ptr> rb <dot> <ptr> header <dot> <ptr> msg <dot> <noptr> size )
<cls> <noptr> z cxx s ctrl ( <ptr> ctrl )
<cls> <noptr> video buf next field ( <ptr> q )
<cls> <noptr> m cam v malloc done ( <ptr> cam <dot> <noptr> frame )
<cls> <noptr> stk camera suspend ( <ptr> int f <dot> <noptr> message )
<cls> <noptr> ves x read ber ( <ptr> fe <dot> <ptr> ber )
<cls> <noptr> afa f init ( <ptr> fe )
<cls> <noptr> pg dat set deferred range ( <ptr> pg dat )
<cls> <noptr> d i bdc offset calibration ( <ptr> state <dot> <ptr> tune state )
<cls> <noptr> reg wait ( <ptr> dev <dot> <noptr> reg <dot> <noptr> bit )
<cls> <noptr> mem cgroup count pre charge ( <ptr> m m )
<cls> <noptr> lg dta check never lock status ( <ptr> state )
<cls> <noptr> iv tv write vb icc lines ( <ptr> it v <dot> <ptr> cc )
<cls> <noptr> me it xe output ready set ( <ptr> hw )
<cls> <noptr> d v bring buffer pkt write ( <ptr> r buf <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> sci fun map window ( <ptr> remote dev <dot> <ptr> window )
<cls> <noptr> msis frequency ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> put start ( <ptr> c buf )
<cls> <noptr> c x set gpio pin logic value ( <ptr> dev <dot> <noptr> pin number <dot> <noptr> pin logic value )
<cls> <noptr> v l video std construct ( <ptr> vs <dot> <noptr> id <dot> <ptr> name )
<cls> <noptr> vivid fb init vid mode ( <ptr> dev )
<cls> <noptr> v l f h add ( <ptr> f h )
<cls> <noptr> l gdt set parameters ( <ptr> fe )
<cls> <noptr> command set compression target ( <ptr> gsp ca dev )
<cls> <noptr> vp fec cdc set buf type ( <ptr> c cdc <dot> <noptr> buf type )
<cls> <ptr> get mms lot ( <ptr> m m )
<cls> <noptr> q plist add entry ( <ptr> q plist <dot> <ptr> entry )
<cls> <noptr> bt usb resume ( <ptr> int f )
<cls> <noptr> v op mpeg size ( <ptr> vh )
<cls> <noptr> v l async notifier add sub dev ( <ptr> notifier <dot> <ptr> asd )
<cls> <ptr> fdp dequeue field ( <ptr> ctx )
<cls> <noptr> spc sis reset ( <ptr> state )
<cls> <noptr> msp log status ( <ptr> sd )
<cls> <noptr> pwc enum frame sizes ( <ptr> file <dot> <ptr> f h <dot> <ptr> f size )
<cls> <ptr> find v map area ( <noptr> addr )
<cls> <noptr> should fails lab ( <ptr> s <dot> <noptr> gfp flags )
<cls> <ptr> uvc queue get current buffer ( <ptr> queue )
<cls> <noptr> adv xx reset ( <ptr> state )
<cls> <noptr> imx init controls ( <ptr> imx )
<cls> <noptr> wp clean prev ma ( <noptr> start <dot> <noptr> end <dot> <ptr> walk )
<cls> <noptr> vs enum mbus code ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> code )
<cls> <noptr> v map page range no flush ( <noptr> start <dot> <noptr> end <dot> <noptr> prot <dot> <dptr> pages )
<cls> <noptr> tvp read ( <ptr> sd <dot> <noptr> addr <dot> <ptr> dst )
<cls> <noptr> me if w status str ( <ptr> fw status <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> parse m token ( <ptr> ptr <dot> <noptr> len <dot> <ptr> val ptr <dot> <dptr> names <dot> <noptr> valid bits )
<cls> <noptr> vp bit get sda ( <ptr> data )
<cls> <noptr> fim cmm set default format ( <ptr> ctx )
<cls> <noptr> high mem dirty able memory ( <noptr> total )
<cls> <noptr> b disp s ctrl ( <ptr> ctx <dot> <ptr> ctrl )
<cls> <noptr> c xdr search ( <ptr> fe )
<cls> <ptr> check radio de emphasis ( )
<cls> <noptr> vim c deb set fmt ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> fmt )
<cls> <noptr> rcs i stop ( <ptr> priv )
<cls> <noptr> eeprom probe ( <ptr> client <dot> <ptr> id )
<cls> <noptr> shmem default max inodes ( )
<cls> <noptr> iv tv start capture ( <ptr> id )
<cls> <ptr> dev freq recommended opp ( <ptr> dev <dot> <ptr> freq <dot> <noptr> flags )
<cls> <noptr> msi try fmt sdr cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> rb spread u ev ( <ptr> r bsp <dot> <ptr> val )
<cls> <noptr> stv front end attach ( <ptr> d )
<cls> <noptr> scan swap map ( <ptr> si <dot> <noptr> usage )
<cls> <noptr> au probe ( <ptr> client <dot> <ptr> did )
<cls> <noptr> rcs i parsed t ( <ptr> priv )
<cls> <noptr> cafe smbus func ( <ptr> adapter )
<cls> <noptr> avi pack instant repack ( <ptr> buf <dot> <noptr> count <dot> <ptr> p )
<cls> <noptr> dcm i resume ( <ptr> dev )
<cls> <noptr> dvb vb req buf s ( <ptr> ctx <dot> <ptr> req )
<cls> <noptr> vb core prepare buf ( <ptr> q <dot> <noptr> index <dot> <ptr> pb )
<cls> <noptr> ov x set fmt ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> format )
<cls> <noptr> smi app write ( <ptr> sensor <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> fill decoder block ( <ptr> dst <dot> <ptr> input <dot> <noptr> stride <dot> <noptr> dst step )
<cls> <noptr> d pot read d ( <ptr> d pot )
<cls> <noptr> ener x enable cir engine ( <ptr> dev <dot> <noptr> enable )
<cls> <noptr> de interlace stop streaming ( <ptr> v q )
<cls> <noptr> msb init card ( <ptr> card )
<cls> <ptr> follow dev map pud ( <ptr> vma <dot> <noptr> addr <dot> <ptr> pud <dot> <noptr> flags <dot> <dptr> pg map )
<cls> <noptr> em xx probe sensor omni vision ( <ptr> dev )
<cls> <noptr> vma huge cache offset ( <ptr> h <dot> <ptr> vma <dot> <noptr> address )
<cls> <noptr> vivid field cap ( <ptr> dev <dot> <noptr> field )
<cls> <noptr> net up uni dvb dvb setup ( <ptr> n dev )
<cls> <noptr> ica v and or ( <ptr> ic <dot> <noptr> reg <dot> <noptr> and mask <dot> <noptr> or value )
<cls> <noptr> dev freq passive event handler ( <ptr> dev freq <dot> <noptr> event <dot> <ptr> data )
<cls> <ptr> dcm i find source ( <ptr> dcm i )
<cls> <noptr> uvc v l get bytes per line ( <ptr> format <dot> <ptr> frame )
<cls> <noptr> rct clear ext power req ( <ptr> rct <dot> <ptr> p data )
<cls> <noptr> q am auto ( <ptr> demo d <dot> <ptr> channel <dot> <noptr> tuner freq offset <dot> <ptr> lock status )
<cls> <noptr> rct irq mask ( <ptr> irq data )
<cls> <noptr> gru unlock kernel context ( <noptr> blade id )
<cls> <noptr> dcm i set fmt ( <ptr> dcm i <dot> <ptr> f )
<cls> <noptr> c x irt xwork handler ( <ptr> work )
<cls> <noptr> lg d tag c setup ( <ptr> state <dot> <ptr> p )
<cls> <noptr> gen wq e err error detected ( <ptr> pci dev <dot> <noptr> state )
<cls> <noptr> c x set filter param ( <ptr> s )
<cls> <noptr> mtk jpeg decre set ( <ptr> base )
<cls> <noptr> tvp fill fmt ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> format )
<cls> <noptr> node reclaim ( <ptr> pg dat <dot> <noptr> gfp mask <dot> <noptr> order )
<cls> <ptr> f h to ctx ( <ptr> f h )
<cls> <noptr> anon vma clone ( <ptr> dst <dot> <ptr> src )
<cls> <noptr> mem hot plug begin ( )
<cls> <noptr> init r cmap gad mei r m z ( )
<cls> <noptr> pci endpoint test bar ( <ptr> test <dot> <noptr> bar no )
<cls> <noptr> deferred init mem pfn range in zone ( <ptr> i <dot> <ptr> zone <dot> <ptr> spf n <dot> <ptr> e pfn <dot> <noptr> first init pfn )
<cls> <noptr> uvc scan chain ( <ptr> chain <dot> <ptr> term )
<cls> <noptr> sp jpeg set q tbl chr ( <ptr> regs <dot> <noptr> quality )
<cls> <noptr> init ids eagle ( <ptr> b tv )
<cls> <noptr> build iso cept b ( <ptr> gsp ca dev <dot> <ptr> int f <dot> <ptr> e ptb )
<cls> <noptr> stb wait dis eq c fifo empty ( <ptr> state <dot> <noptr> timeout )
<cls> <noptr> i soc irq ( <ptr> urb )
<cls> <noptr> idt smb write ic block ( <ptr> pdev <dot> <ptr> seq )
<cls> <noptr> page owner init ( )
<cls> <noptr> c x der send dis eq c msg ( <ptr> fe <dot> <ptr> cmd )
<cls> <noptr> c x d spi read ts ( <ptr> spi <dot> <ptr> read data <dot> <noptr> packet num )
<cls> <noptr> max load full fme up ( <ptr> ctx )
<cls> <noptr> compat mpt command ( <ptr> filp <dot> <noptr> cmd <dot> <noptr> arg )
<cls> <noptr> c xxx is buffer done ( <ptr> dev <dot> <ptr> dma q )
<cls> <noptr> spr dp mic init ( )
<cls> <noptr> avi pack init ( <ptr> p <dot> <noptr> size <dot> <ptr> ptr <dot> <noptr> int <dot> <ptr> ptr )
<cls> <noptr> gru check status proc ( <ptr> cb )
<cls> <noptr> d wx set voltage ( <ptr> fe <dot> <noptr> voltage )
<cls> <noptr> r vin set coeff ( <ptr> vin <dot> <noptr> xs )
<cls> <noptr> cec pin low ( <ptr> pin )
<cls> <noptr> nv t enable logical dev ( <ptr> nv t <dot> <noptr> l dev )
<cls> <noptr> m i pid stream disable ( <ptr> bridge )
<cls> <noptr> vid ioc venc d q buf ( <ptr> file <dot> <ptr> priv <dot> <ptr> buf )
<cls> <noptr> r vin m c enum input ( <ptr> file <dot> <ptr> priv <dot> <ptr> i )
<cls> <noptr> ms routing ( <ptr> sd <dot> <noptr> input <dot> <noptr> output <dot> <noptr> config )
<cls> <noptr> cec queue msg followers ( <ptr> adap <dot> <ptr> msg )
<cls> <noptr> v op dev match ( <ptr> d v <dot> <ptr> dr )
<cls> <noptr> dln resume ( <ptr> iface )
<cls> <noptr> br x set selection ( <ptr> sub dev <dot> <ptr> cfg <dot> <ptr> sel )
<cls> <noptr> tsc adc resume ( <ptr> dev )
<cls> <noptr> pm timeout show ( <ptr> dev <dot> <ptr> attr <dot> <ptr> buf )
<cls> <noptr> xpc handle activate m q msg uv ( <ptr> part <dot> <ptr> msg hdr <dot> <noptr> part setup <dot> <ptr> wakeup h b checker )
<cls> <noptr> adp probe ( <ptr> client <dot> <ptr> devid )
<cls> <noptr> g sch w set gsc irq enable ( <ptr> dev <dot> <noptr> mask )
<cls> <noptr> adv enum d v timings ( <ptr> sd <dot> <ptr> timings )
<cls> <noptr> l k dtm exhaust stack ( )
<cls> <noptr> update fast start pfn ( <ptr> cc <dot> <noptr> pfn )
<cls> <noptr> sci fcn ct req ( <ptr> sci f dev <dot> <ptr> msg )
<cls> <noptr> tw x buf queue ( <ptr> vb )
<cls> <noptr> m cam cam set flip ( <ptr> cam )
<cls> <noptr> load firmware cb ( <ptr> fw <dot> <ptr> context )
<cls> <noptr> sp jpeg subscribe event ( <ptr> f h <dot> <ptr> sub )
<cls> <ptr> tps x parsed t ( <ptr> dev )
<cls> <noptr> max poll timeout ( <ptr> ctx <dot> <noptr> idx <dot> <noptr> msb <dot> <noptr> lsb <dot> <noptr> exp bit val <dot> <noptr> timeout us )
<cls> <noptr> p cpu size to slot ( <noptr> size )
<cls> <noptr> mt get if frequency ( <ptr> fe <dot> <ptr> frequency )
<cls> <noptr> iri mon decode ( <ptr> dev <dot> <noptr> ev )
<cls> <noptr> count compact events ( <noptr> item <dot> <noptr> delta )
<cls> <noptr> go yap q e write ( <ptr> h dev <dot> <ptr> pq e <dot> <ptr> bd )
<cls> <noptr> stk vid ioc stream off ( <ptr> filp <dot> <ptr> priv <dot> <noptr> type )
<cls> <noptr> dib p set power mode ( <ptr> state <dot> <noptr> mode )
<cls> <ptr> pvr get state name ( <noptr> st )
<cls> <noptr> page map count ( <ptr> page )
<cls> <noptr> dvb net do ioctl ( <ptr> file <dot> <noptr> cmd <dot> <ptr> p arg )
<cls> <noptr> p cpu unit page offset ( <noptr> cpu <dot> <noptr> page idx )
<cls> <noptr> l gdt aic gate ctrl ( <ptr> fe <dot> <noptr> enable )
<cls> <noptr> saa x set fmt ( <ptr> sd <dot> <ptr> cfg <dot> <ptr> format )
<cls> <noptr> t dar f tracking filters init ( <ptr> fe <dot> <noptr> freq )
<cls> <noptr> dr x jda pread modify write reg ( <ptr> dev addr <dot> <noptr> w addr <dot> <noptr> r addr <dot> <noptr> w data <dot> <ptr> r data )
<cls> <ptr> vbd mas g cookie ( <ptr> buf priv )
<cls> <noptr> wait on page bit ( <ptr> page <dot> <noptr> bit nr )
<cls> <noptr> v pfe stop streaming ( <ptr> v q )
<cls> <noptr> shake page ( <ptr> p <dot> <noptr> access )
<cls> <noptr> vivid update quality ( <ptr> dev )
<cls> <noptr> v l ctrl request queue ( <ptr> obj )
<cls> <noptr> sci f accept ( <noptr> epd <dot> <ptr> peer <dot> <ptr> new epd <dot> <noptr> flags )
<cls> <noptr> m xl x sf tuner set if output freq ( <ptr> state )
<cls> <noptr> c x dvb gate ctrl ( <ptr> core <dot> <noptr> open )
<cls> <noptr> w mapply hardware patch ( <ptr> arizona )
<cls> <noptr> q mdb driver init ( )
<cls> <noptr> st init ( <ptr> sd )
<cls> <noptr> vsp dlm irq frame end ( <ptr> dlm )
<cls> <noptr> c x dio write multi regs ( <ptr> io <dot> <noptr> tgt <dot> <noptr> reg value <dot> <noptr> size )
<cls> <noptr> c x usb ddm brc query ( <ptr> d )
<cls> <noptr> pwc frame complete ( <ptr> pdev )
<cls> <noptr> ax pxi c probe ( <ptr> ic <dot> <ptr> id )
<cls> <noptr> r card rif request buf ( <ptr> sdr )
<cls> <noptr> delta vba u stop streaming ( <ptr> q )
<cls> <noptr> m pts ase x prep manufacture info ( <ptr> ioc <dot> <noptr> sas address <dot> <ptr> e dev )
<cls> <ptr> check vid limit ( )
<cls> <noptr> hex ium probe ( <ptr> dev )
<cls> <noptr> si read regs ( <ptr> state <dot> <noptr> reg <dot> <ptr> b <dot> <noptr> len )
<cls> <noptr> set upper zone w marks ( )
<cls> <noptr> store val norm ( <ptr> class dev <dot> <ptr> attr <dot> <ptr> buf <dot> <noptr> count )
<cls> <noptr> c xic initi r ( <ptr> core )
<cls> <noptr> tt usb start iso xfer ( <ptr> tt usb )
<cls> <noptr> fim c cap req buf s ( <ptr> file <dot> <ptr> priv <dot> <ptr> req buf s )
<cls> <noptr> mem cg flush per cpu vm events ( <ptr> mem cg )
<cls> <noptr> as firmware upload ( <ptr> bus adap <dot> <ptr> cmd <dot> <ptr> firmware )
<cls> <noptr> read local version ( <ptr> k img data <dot> <ptr> bts scr name )
<cls> <noptr> pkt session get property ( <ptr> pkt <dot> <ptr> cookie <dot> <noptr> ptype )
<cls> <noptr> vim c cap buf queue ( <ptr> vb buf )
<cls> <noptr> h sit configure stream ( <ptr> entity <dot> <ptr> pipe <dot> <ptr> dl <dot> <ptr> dl b )
<cls> <noptr> rti q tree ( <ptr> priv <dot> <noptr> i q <dot> <noptr> fix val <dot> <noptr> var val <dot> <noptr> fix reg )
<cls> <noptr> pg dat init k compact d ( <ptr> pg dat )
<cls> <noptr> tsl show lux ( <ptr> client <dot> <ptr> buf )
<cls> <noptr> s probe ( <ptr> interface <dot> <ptr> id )
<cls> <noptr> dt buf queue ( <ptr> vb )
<cls> <noptr> sh ve u scale h ( <ptr> ve u <dot> <noptr> size in <dot> <noptr> size out <dot> <noptr> crop out )
<cls> <noptr> v l disable media source ( <ptr> v dev )
<cls> <noptr> tc reset ( <ptr> sd <dot> <noptr> mask )
<cls> <noptr> h fi session get property ( <ptr> inst <dot> <noptr> ptype <dot> <ptr> h prop )
<cls> <noptr> cal g fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> compact scanners met ( <ptr> cc )
<cls> <noptr> set freq to low job ( <ptr> work )
<cls> <noptr> store protocols ( <ptr> device <dot> <ptr> m attr <dot> <ptr> buf <dot> <noptr> len )
<cls> <noptr> queue pages required ( <ptr> page <dot> <ptr> q p )
<cls> <noptr> rcs i parse v l ( <ptr> priv <dot> <ptr> ve p )
<cls> <noptr> pkt sys ping ( <ptr> pkt <dot> <noptr> cookie )
<cls> <noptr> htc pld chip get ( <ptr> chip <dot> <noptr> offset )
<cls> <noptr> stv set v iter b i standard ( <ptr> int p <dot> <noptr> standard <dot> <noptr> fec <dot> <noptr> demo d )
<cls> <noptr> c x calc pll nf ( <ptr> state <dot> <ptr> n <dot> <ptr> f )
<cls> <noptr> cod adecoder queue init ( <ptr> priv <dot> <ptr> src v q <dot> <ptr> dst v q )
<cls> <ptr> v mem map pte populate ( <ptr> pmd <dot> <noptr> addr <dot> <noptr> node )
<cls> <noptr> offset il node ( <ptr> pol <dot> <noptr> n )
<cls> <noptr> tif m device probe ( <ptr> dev )
<cls> <noptr> max ic probe ( <ptr> ic <dot> <ptr> id )
<cls> <ptr> check reset on lockup ( )
<cls> <noptr> ov runtime suspend ( <ptr> dev )
<cls> <noptr> dcm i enum fmt vid cap ( <ptr> file <dot> <ptr> priv <dot> <ptr> f )
<cls> <noptr> tps x irq disable ( <ptr> irq data )
<cls> <noptr> af init ( <ptr> fe )
<cls> <noptr> r submit req ( <ptr> host )
<cls> <noptr> lpc ich enable acpi space ( <ptr> dev )
<cls> <noptr> r vin write ( <ptr> vin <dot> <noptr> value <dot> <noptr> offset )
<cls> <noptr> it d set lo ( <ptr> state <dot> <noptr> freq khz )
<cls> <ptr> check enable auto suspend ( )
<cls> <noptr> sz push full space ( <ptr> sz <dot> <noptr> value )
<cls> <noptr> pvr dvb feed func ( <ptr> adap )
<cls> <noptr> j te v init ( <ptr> sensor )
<cls> <noptr> ska a check fw revision ( <ptr> ska a )
<cls> <noptr> st tty receive ( <ptr> tty <dot> <ptr> data <dot> <ptr> tty flags <dot> <noptr> count )
<cls> <noptr> m cam vb queue setup ( <ptr> v q <dot> <ptr> n buf s <dot> <ptr> num planes <dot> <noptr> sizes <dot> <ptr> alloc devs )
<cls> <noptr> ov write ( <ptr> client <dot> <noptr> reg <dot> <noptr> val )
<cls> <noptr> set vma res v map ( <ptr> vma <dot> <ptr> map )
<cls> <noptr> mp tfc bus reset ( <ptr> scp nt )
<cls> <noptr> ur ve ( <ptr> state )
<cls> <noptr> dib set bandwidth ( <ptr> state )
<cls> <noptr> de interlace check format ( <noptr> pixel format )
<cls> <noptr> t dax pcm startup ( <ptr> sub stream <dot> <ptr> dai )
<cls> <ptr> v l norm to name ( <noptr> id )
<cls> <noptr> sci f send msg intr ( <ptr> sci f dev )
<cls> <noptr> pti control frame built and sent ( <ptr> m c <dot> <ptr> thread name )
<cls> <noptr> fops read ( <ptr> file <dot> <ptr> data <dot> <noptr> count <dot> <ptr> p pos )
<cls> <noptr> vma interval tree augment copy ( <ptr> r bold <dot> <ptr> rb new )
<cls> <noptr> sun ics i open ( <ptr> file )
<cls> <noptr> video ics parm ( <ptr> filp <dot> <ptr> priv <dot> <ptr> parm )
<cls> <noptr> video start streaming ( <ptr> q <dot> <noptr> count )
<cls> <ptr> vim c sca process frame ( <ptr> ved <dot> <ptr> sink frame )
<cls> <noptr> ones ( <ptr> pas info )
<cls> <noptr> bt intel set diag ( <ptr> h dev <dot> <noptr> enable )
<cls> <ptr> check ir mode ( )
<cls> <noptr> ms routing ( <ptr> sd <dot> <noptr> input <dot> <noptr> output <dot> <noptr> config )
<cls> <ptr> ske cg x try fmt ( <ptr> sd <dot> <ptr> m f )
<cls> <ptr> check white crush lower ( )
<cls> <noptr> ene open ( <ptr> r dev )
<cls> <noptr> cam if hw set pre scaler ( <ptr> vp )
<cls> <noptr> sci frm alist dma copy wrapper ( <ptr> epd <dot> <ptr> work <dot> <ptr> chan <dot> <noptr> l offset )
<cls> <noptr> skb af read ( <ptr> state <dot> <noptr> addr )

max_length:41