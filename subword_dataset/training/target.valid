<cls> <noptr> hcl ge alloc cmd desc ( <ptr> ring )
<cls> <noptr> kernel set mem policy ( <noptr> mode <dot> <ptr> n mask <dot> <noptr> max node )
<cls> <ptr> create kmalloc cache ( <ptr> name <dot> <noptr> size <dot> <noptr> flags <dot> <noptr> user offset <dot> <noptr> user size )
<cls> <ptr> i av f construct skb ( <ptr> r x ring <dot> <ptr> r x buffer <dot> <noptr> size )
<cls> <ptr> v sph sit create ( <ptr> vsp <dot> <noptr> inverse )
<cls> <noptr> obj malloc ( <ptr> class <dot> <ptr> zs page <dot> <noptr> handle )
<cls> <ptr> alloc stable node ( )
<cls> <noptr> allocate predic ation buf ( <ptr> inst )
<cls> <ptr> alloc worker ( <noptr> node )
<cls> <noptr> v hci create device ( <ptr> data <dot> <noptr> opcode )
<cls> <noptr> coda alloc frame buffers ( <ptr> ctx <dot> <ptr> q data <dot> <noptr> fourcc )
<cls> <ptr> nvm e alloc request ( <ptr> q <dot> <ptr> cmd <dot> <noptr> flags <dot> <noptr> qid )
<cls> <noptr> mem cg alloc cache id ( )
<cls> <noptr> region add ( <ptr> res v <dot> <noptr> f <dot> <noptr> t <dot> <noptr> in regions needed <dot> <ptr> h <dot> <ptr> h cg )
<cls> <noptr> ice alloc sq buf s ( <ptr> hw <dot> <ptr> c q )
<cls> <ptr> k huge paged alloc page ( <dptr> h page <dot> <noptr> gfp <dot> <noptr> node )
<cls> <noptr> ip w alloc skb ( <ptr> priv <dot> <ptr> packet )
<cls> <ptr> allocs jade v ( <noptr> sizeof priv )
<cls> <ptr> mmcblk alloc req ( <ptr> card <dot> <ptr> parent <dot> <noptr> size <dot> <noptr> default ro <dot> <ptr> sub name <dot> <noptr> area type )
<cls> <ptr> v x lan dev create ( <ptr> net <dot> <ptr> name <dot> <noptr> name assign type <dot> <ptr> conf )
<cls> <ptr> sd hci alloc host ( <ptr> dev <dot> <noptr> priv size )
<cls> <ptr> alloc pcie link state ( <ptr> pdev )
<cls> <noptr> usb vision v l mmap ( <ptr> file <dot> <ptr> vma )
<cls> <ptr> alloc perf context ( <ptr> pm u <dot> <ptr> task )
<cls> <ptr> new slab ( <ptr> s <dot> <noptr> flags <dot> <noptr> node )
<cls> <ptr> h nsd saf alloc dev ( <ptr> dev <dot> <noptr> sizeof priv )
<cls> <ptr> of platform device create p data ( <ptr> np <dot> <ptr> bus id <dot> <ptr> platform data <dot> <ptr> parent )
<cls> <ptr> vsp uif create ( <ptr> vsp <dot> <noptr> index )
<cls> <noptr> hci uart register device ( <ptr> hu <dot> <ptr> p )
<cls> <ptr> ml x alloc cmd mailbox ( <ptr> dev )
<cls> <noptr> internal get user pages fast ( <noptr> start <dot> <noptr> nr pages <dot> <noptr> gup flags <dot> <dptr> pages )
<cls> <ptr> nvm f host default ( )
<cls> <ptr> cpu freq policy alloc ( <noptr> cpu )
<cls> <ptr> hpet create irq domain ( <noptr> hpet id )
<cls> <noptr> tw x memcpy dma alloc ( <ptr> vc <dot> <noptr> pb )
<cls> <ptr> dev res alloc ( <noptr> release <dot> <noptr> size <dot> <noptr> gfp )
<cls> <ptr> nvm etc p alloc tag set ( <ptr> n ctrl <dot> <noptr> admin )
<cls> <ptr> pci alloc dev ( <ptr> bus )
<cls> <ptr> input allocate device ( )
<cls> <ptr> alloc buf ( <ptr> v dev <dot> <noptr> buf size <dot> <noptr> pages )
<cls> <noptr> ml xen create drop q p ( <ptr> priv )
<cls> <noptr> kas an alloc pages ( <ptr> page <dot> <noptr> order )
<cls> <noptr> mp tfc register dev ( <ptr> ioc <dot> <noptr> channel <dot> <ptr> pg )
<cls> <ptr> shmem get inode ( <ptr> sb <dot> <ptr> dir <dot> <noptr> mode <dot> <noptr> dev <dot> <noptr> flags )
<cls> <ptr> of get min tck ( <ptr> np <dot> <ptr> ptr <dot> <noptr> cnt )
<cls> <ptr> saa v malloc build pg table ( <ptr> pci <dot> <noptr> length <dot> <ptr> pt )
<cls> <noptr> dev m dev freq register notifier ( <ptr> dev <dot> <ptr> dev freq <dot> <ptr> nb <dot> <noptr> list )
<cls> <ptr> ml x alloc cmd msg ( <ptr> dev <dot> <noptr> flags <dot> <noptr> size <dot> <noptr> token )
<cls> <ptr> tool create data ( <ptr> nt b )
<cls> <noptr> get user pages fast ( <noptr> start <dot> <noptr> nr pages <dot> <noptr> gup flags <dot> <dptr> pages )
<cls> <noptr> m wifi exp cie alloc sleep cookie buf ( <ptr> adapter )
<cls> <noptr> alloc pmd page ( <ptr> pud )
<cls> <noptr> ef x nic alloc buffer ( <ptr> ef x <dot> <ptr> buffer <dot> <noptr> len <dot> <noptr> gfp flags )
<cls> <ptr> p alloc skb ( <ptr> priv <dot> <noptr> hdr flags <dot> <noptr> payload len <dot> <noptr> type <dot> <noptr> mem flags )
<cls> <ptr> alloc huge page ( <ptr> vma <dot> <noptr> addr <dot> <noptr> avoid reserve )
<cls> <noptr> dvb create media entity ( <ptr> dvb dev <dot> <noptr> type <dot> <noptr> demux sink pads )
<cls> <ptr> ip ddp init ( )
<cls> <noptr> lsm inode alloc ( <ptr> inode )
<cls> <ptr> atl c alloc skb ( <ptr> adapter )
<cls> <ptr> hdp vr register i ric ( <ptr> dev )
<cls> <noptr> sn div tv card create ( <ptr> v l dev <dot> <ptr> sc <dot> <dptr> it vsc )
<cls> <noptr> nvm et tcp alloc crypto ( <ptr> queue )
<cls> <ptr> mem block alloc try nid raw ( <noptr> size <dot> <noptr> align <dot> <noptr> min addr <dot> <noptr> max addr <dot> <noptr> nid )
<cls> <noptr> fold z pool malloc ( <ptr> pool <dot> <noptr> size <dot> <noptr> gfp <dot> <ptr> handle )
<cls> <ptr> h so create net device ( <ptr> interface <dot> <noptr> port spec )
<cls> <ptr> module alloc ( <noptr> size )
<cls> <noptr> pte alloc one ( <ptr> m m )
<cls> <ptr> alloc buddy huge page ( <ptr> h <dot> <noptr> gfp mask <dot> <noptr> nid <dot> <ptr> n mask <dot> <ptr> node alloc no retry )
<cls> <ptr> k mem cache z alloc ( <ptr> k <dot> <noptr> flags )
<cls> <ptr> v l ctrl new std ( <ptr> hdl <dot> <ptr> ops <dot> <noptr> id <dot> <noptr> min <dot> <noptr> max <dot> <noptr> step <dot> <noptr> def )
<cls> <ptr> i wl parse nvm mcc info ( <ptr> dev <dot> <ptr> cfg <dot> <noptr> numof ch <dot> <ptr> channels <dot> <noptr> fw mcc <dot> <noptr> geo info <dot> <noptr> cap )
<cls> <ptr> find alloc undo ( <ptr> ns <dot> <noptr> semid )
<cls> <ptr> rs alloc ( <ptr> hw <dot> <ptr> debug fs dir )
<cls> <ptr> ath ksd io alloc bus req ( <ptr> ar )
<cls> <ptr> sci f create window ( <ptr> ep <dot> <noptr> nr pages <dot> <noptr> offset <dot> <noptr> temp )
<cls> <noptr> n fpc cmm box alloc ( <ptr> nn )
<cls> <noptr> v x ge hw ring mem pool item alloc ( <ptr> mem pool h <dot> <noptr> mem block index <dot> <ptr> dma object <dot> <noptr> index <dot> <noptr> is last )
<cls> <ptr> shmem alloc and acct page ( <noptr> gfp <dot> <ptr> inode <dot> <noptr> index <dot> <noptr> huge )
<cls> <ptr> v mmap ram ( <dptr> pages <dot> <noptr> count <dot> <noptr> node <dot> <noptr> prot )
<cls> <ptr> v l ctrl new std compound ( <ptr> hdl <dot> <ptr> ops <dot> <noptr> id <dot> <noptr> p def )
<cls> <noptr> mem cg k mem cache create func ( <ptr> w )
<cls> <noptr> arch l mmap ( <ptr> fp <dot> <ptr> vma )
<cls> <ptr> shmem alloc inode ( <ptr> sb )
<cls> <noptr> b nxt alloc cpr ings ( <ptr> b p )
<cls> <noptr> rtl sdr alloc urb s ( <ptr> dev )
<cls> <ptr> k mem cache create user copy ( <ptr> name <dot> <noptr> size <dot> <noptr> align <dot> <noptr> flags <dot> <noptr> user offset <dot> <noptr> user size <dot> <ptr> ptr )
<cls> <ptr> nf p net tls alloc simple ( <ptr> nn <dot> <noptr> reqs z <dot> <noptr> flags )
<cls> <ptr> create root ns ( <ptr> steering <dot> <noptr> table type )
<cls> <noptr> snd pcm alloc v malloc buffer ( <ptr> subs <dot> <noptr> size )
<cls> <ptr> ml x sw afa create ( <noptr> max acts per set <dot> <ptr> ops <dot> <ptr> ops priv )
<cls> <noptr> q p alloc p pn set ( <ptr> prod q <dot> <noptr> num produce pages <dot> <ptr> cons q <dot> <noptr> num consume pages <dot> <ptr> p pn set )
<cls> <noptr> q edl alloc ( <ptr> ph w fn )
<cls> <noptr> coda alloc aux buf ( <ptr> dev <dot> <ptr> buf <dot> <noptr> size <dot> <ptr> name <dot> <ptr> parent )
<cls> <noptr> v x ge alloc m six ( <ptr> v dev )
<cls> <ptr> pte alloc one kernel ( <ptr> m m )
<cls> <ptr> ice build skb ( <ptr> r x ring <dot> <ptr> r x buf <dot> <ptr> x dp )
<cls> <noptr> ml xen create r x ring ( <ptr> priv <dot> <dptr> pring <dot> <noptr> size <dot> <noptr> stride <dot> <noptr> node <dot> <noptr> queue index )
<cls> <noptr> kas an populate v malloc ( <noptr> addr <dot> <noptr> size )
<cls> <noptr> alloc page arrays ( <ptr> w qs )
<cls> <noptr> v x geos dma malloc async ( <ptr> pdev <dot> <ptr> dev h <dot> <noptr> size )
<cls> <ptr> oct nic alloc ctrl pkts c ( <ptr> oct <dot> <ptr> n ctrl )
<cls> <ptr> new node page ( <ptr> page <dot> <noptr> private )
<cls> <ptr> install special mapping ( <ptr> m m <dot> <noptr> addr <dot> <noptr> len <dot> <noptr> vm flags <dot> <ptr> priv <dot> <ptr> ops )
<cls> <ptr> irq alloc generic chip ( <ptr> name <dot> <noptr> num ct <dot> <noptr> irq base <dot> <ptr> reg base <dot> <noptr> handler )
<cls> <noptr> dmx section feed allocate filter ( <ptr> feed <dot> <dptr> filter )
<cls> <ptr> alloc low page ( )
<cls> <ptr> reg cache r btree node alloc ( <ptr> map <dot> <noptr> reg )
<cls> <ptr> m can class allocate dev ( <ptr> dev )
<cls> <ptr> ath k wmi tlv op gen peer create ( <ptr> ar <dot> <noptr> v devid <dot> <noptr> peer addr <dot> <noptr> peer type )
<cls> <ptr> huge page new sub pool ( <ptr> h <dot> <noptr> max h pages <dot> <noptr> min h pages )
<cls> <noptr> pci bios allocate bus resources ( <ptr> bus )
<cls> <ptr> ath kl usb alloc urb from pipe ( <ptr> pipe )
<cls> <ptr> pmd alloc one ( <ptr> m m <dot> <noptr> addr )
<cls> <noptr> bus register ( <ptr> bus )
<cls> <ptr> get first slab ( <ptr> n <dot> <noptr> pf memalloc )
<cls> <noptr> nt b alloc m w buffer ( <ptr> m w <dot> <ptr> dma dev <dot> <noptr> align )
<cls> <noptr> gsp ca input create urb ( <ptr> gsp ca dev )
<cls> <noptr> i cel b test create frame ( <ptr> pf <dot> <dptr> ret data <dot> <noptr> size )
<cls> <ptr> mic dma alloc ( <ptr> dev <dot> <noptr> size <dot> <ptr> dma handle <dot> <noptr> gfp <dot> <noptr> attrs )
<cls> <ptr> ml x sw afa block create ( <ptr> ml x sw afa )
<cls> <ptr> qt nf pcie pearl alloc ( <ptr> pdev )
<cls> <ptr> s attach ( <ptr> config <dot> <ptr> ic )
<cls> <noptr> ath k core dump create ( <ptr> ar )
<cls> <noptr> alloc k mem cache cpus ( <ptr> s )
<cls> <noptr> carl alloc dev space ( <ptr> ar <dot> <ptr> skb )
<cls> <ptr> d rrule create collision h tbl ( <ptr> matcher <dot> <ptr> nic matcher <dot> <ptr> hw ste )
<cls> <ptr> v malloc node ( <noptr> size <dot> <noptr> align <dot> <noptr> gfp mask <dot> <noptr> prot <dot> <noptr> node <dot> <ptr> caller )
<cls> <ptr> ml x sw spn ve m c record create ( <ptr> ml x sws p <dot> <ptr> m c list <dot> <noptr> proto )
<cls> <noptr> q p alloc res ( <ptr> dev <dot> <noptr> slave <dot> <noptr> op <dot> <noptr> cmd <dot> <noptr> in param <dot> <ptr> out param )
<cls> <ptr> h so create device ( <ptr> int f <dot> <noptr> port spec )
<cls> <ptr> blk cg css alloc ( <ptr> parent css )
<cls> <ptr> ml x sws pm rer if sub list create ( <ptr> ml x sws p <dot> <ptr> er if list )
<cls> <noptr> alloc mod hdr actions ( <ptr> priv <dot> <ptr> hdrs <dot> <noptr> namespace <dot> <ptr> parse attr )
<cls> <ptr> k huge paged alloc huge page ( <ptr> wait )
<cls> <ptr> make alloc exact ( <noptr> addr <dot> <noptr> order <dot> <noptr> size )
<cls> <noptr> gsc mmm map ( <ptr> file <dot> <ptr> vma )
<cls> <ptr> ml x sws p bridge port create ( <ptr> bridge device <dot> <ptr> br port dev )
<cls> <ptr> be alloc pages ( <noptr> size <dot> <noptr> gfp )
<cls> <ptr> vivid cec alloc adap ( <ptr> dev <dot> <noptr> idx <dot> <noptr> is source )
<cls> <ptr> i wl trans alloc ( <noptr> priv size <dot> <ptr> dev <dot> <ptr> ops <dot> <noptr> cmd pool size <dot> <noptr> cmd pool align )
<cls> <noptr> ml x sws pk v dl alloc count query ( <ptr> ml x sws p <dot> <noptr> type <dot> <noptr> entry count <dot> <ptr> p alloc count )
<cls> <noptr> pin user pages ( <noptr> start <dot> <noptr> nr pages <dot> <noptr> gup flags <dot> <dptr> pages <dot> <dptr> v mas )
<cls> <noptr> allocate threshold blocks ( <noptr> cpu <dot> <noptr> bank <dot> <noptr> block <dot> <noptr> address )
<cls> <noptr> vmc i host do alloc queue pair ( <ptr> vmc i host dev <dot> <ptr> ioctl name <dot> <ptr> u ptr )
<cls> <noptr> bn xx alloc memb p ( <ptr> b p )
<cls> <ptr> hot add new pg dat ( <noptr> nid <dot> <noptr> start )
<cls> <noptr> tg alloc r x data ( <ptr> tp <dot> <ptr> tpr <dot> <noptr> opaque key <dot> <noptr> dest idx un masked <dot> <ptr> frag size )
<cls> <ptr> anon vma alloc ( )
<cls> <noptr> arch k exec post alloc pages ( <ptr> v addr <dot> <noptr> pages <dot> <noptr> gfp )
<cls> <noptr> ml xe create t ises ( <ptr> priv )
<cls> <ptr> aq ring r x alloc ( <ptr> self <dot> <ptr> aq nic <dot> <noptr> idx <dot> <ptr> aq nic cfg )
<cls> <ptr> kvm arch vcpu create ( <ptr> kvm <dot> <noptr> id )
<cls> <ptr> v malloc tos g ( <ptr> virt <dot> <noptr> nr pages )
<cls> <noptr> cam if register sensor ( <ptr> cam if )
<cls> <noptr> ena alloc r x page ( <ptr> r x ring <dot> <ptr> r x info <dot> <noptr> gfp )
<cls> <ptr> c xgb smt alloc switching ( <ptr> dev <dot> <ptr> s mac )
<cls> <noptr> z bud alloc ( <ptr> pool <dot> <noptr> size <dot> <noptr> gfp <dot> <ptr> handle )
<cls> <ptr> tif malloc adapter ( <noptr> num sockets <dot> <ptr> dev )
<cls> <ptr> alloc q ptr ( <noptr> id )
<cls> <ptr> journal alloc journal head ( )
<cls> <ptr> alloc zs page ( <ptr> pool <dot> <ptr> class <dot> <noptr> gfp )
<cls> <ptr> ks m might need to copy ( <ptr> page <dot> <ptr> vma <dot> <noptr> address )
<cls> <noptr> v op mmap ( <ptr> f <dot> <ptr> vma )
<cls> <ptr> gru alloc locked gts ( <noptr> v addr )
<cls> <ptr> ag p allocate memory wrap ( <noptr> pg count <dot> <noptr> type )
<cls> <ptr> pvr v l create ( <ptr> m np )
<cls> <ptr> dev m clk register ( <ptr> dev <dot> <ptr> hw )
<cls> <noptr> sl realloc buf s ( <ptr> sl <dot> <noptr> mtu )
<cls> <noptr> bt tvm map ( <ptr> file <dot> <ptr> vma )
<cls> <noptr> alloc node data ( <noptr> nid )
<cls> <ptr> locks alloc lock ( )
<cls> <noptr> b nxt alloc ctx pg tbls ( <ptr> b p <dot> <ptr> ctx pg <dot> <noptr> mem size <dot> <noptr> depth <dot> <noptr> use init val )
<cls> <ptr> slo b page alloc ( <ptr> sp <dot> <noptr> size <dot> <noptr> align <dot> <noptr> align offset <dot> <ptr> page removed from list )
<cls> <ptr> v malloc ( <noptr> size )
<cls> <ptr> bio alloc map data ( <ptr> data <dot> <noptr> gfp mask )
<cls> <noptr> dvb dvr mmap ( <ptr> file <dot> <ptr> vma )
<cls> <noptr> ml x cmd alloc uar ( <ptr> dev <dot> <ptr> u arn )
<cls> <ptr> pvr dvb create ( <ptr> pvr )
<cls> <noptr> kvm arch create mem slot ( <ptr> kvm <dot> <ptr> slot <dot> <noptr> n pages )
<cls> <ptr> lan x r x allocates kb ( <ptr> r x )

max_length:33